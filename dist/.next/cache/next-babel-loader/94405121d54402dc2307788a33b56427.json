{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\nexport class StudioService extends APIRequest {\n  me(headers) {\n    return this.get('/studio/me', headers);\n  }\n\n  update(payload) {\n    return this.put('/studio/update', payload);\n  }\n\n  updatePaymentInfo(payload) {\n    return this.post('/studio/bank-transfer/update', payload);\n  }\n\n  updateDirectDepost(payload) {\n    return this.post('/studio/direct-deposit/update', payload);\n  }\n\n  updatePaxum(payload) {\n    return this.post('/studio/paxum/update', payload);\n  }\n\n  updateBitpay(payload) {\n    return this.post('/studio/bitpay/update', payload);\n  }\n\n  getCommission() {\n    return this.get('/settings/studio/commission');\n  }\n\n  addModel(payload) {\n    return this.post('/studio/members', payload);\n  }\n\n  getMembers(params) {\n    return this.get(this.buildUrl('/studio/members', params));\n  }\n\n  getMemberCommissions(params) {\n    return this.get(this.buildUrl('/studio/commission', params));\n  }\n\n  updateMemberCommission(id, payload) {\n    return this.put(`/studio/commission/member/${id}`, payload);\n  }\n\n  getPerformerRequest(params) {\n    return this.get(this.buildUrl('/payout-requests/studio/performer-request', params));\n  }\n\n  updateStatusPerformerRequest(id, payload) {\n    return this.put(`/payout-requests/studio/update/${id}`, _objectSpread({}, payload));\n  }\n\n  updateMemberStatus(id, status) {\n    return this.post(`/studio/members/${id}/${status}`);\n  }\n\n  stats() {\n    return this.get('/studio/stats');\n  }\n\n  getDocumentsUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/studio/documents/upload`;\n  }\n\n}\nexport const studioService = new StudioService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/studio.service.ts"],"names":["APIRequest","getGlobalConfig","StudioService","me","headers","get","update","payload","put","updatePaymentInfo","post","updateDirectDepost","updatePaxum","updateBitpay","getCommission","addModel","getMembers","params","buildUrl","getMemberCommissions","updateMemberCommission","id","getPerformerRequest","updateStatusPerformerRequest","updateMemberStatus","status","stats","getDocumentsUploadUrl","config","NEXT_PUBLIC_API_ENDPOINT","studioService"],"mappings":";;;;;;AACA,SAASA,UAAT,QAAsC,eAAtC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAO,MAAMC,aAAN,SAA4BF,UAA5B,CAAuC;AAC5CG,EAAAA,EAAE,CAACC,OAAD,EAAmE;AACnE,WAAO,KAAKC,GAAL,CAAS,YAAT,EAAuBD,OAAvB,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACC,OAAD,EAAe;AACnB,WAAO,KAAKC,GAAL,CAAS,gBAAT,EAA2BD,OAA3B,CAAP;AACD;;AAEDE,EAAAA,iBAAiB,CAACF,OAAD,EAAuC;AACtD,WAAO,KAAKG,IAAL,CAAU,8BAAV,EAA0CH,OAA1C,CAAP;AACD;;AAEDI,EAAAA,kBAAkB,CAACJ,OAAD,EAAuC;AACvD,WAAO,KAAKG,IAAL,CAAU,+BAAV,EAA2CH,OAA3C,CAAP;AACD;;AAEDK,EAAAA,WAAW,CAACL,OAAD,EAAuC;AAChD,WAAO,KAAKG,IAAL,CAAU,sBAAV,EAAkCH,OAAlC,CAAP;AACD;;AAEDM,EAAAA,YAAY,CAACN,OAAD,EAAuC;AACjD,WAAO,KAAKG,IAAL,CAAU,uBAAV,EAAmCH,OAAnC,CAAP;AACD;;AAEDO,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKT,GAAL,CAAS,6BAAT,CAAP;AACD;;AAEDU,EAAAA,QAAQ,CAACR,OAAD,EAAU;AAChB,WAAO,KAAKG,IAAL,CAAU,iBAAV,EAA6BH,OAA7B,CAAP;AACD;;AAEDS,EAAAA,UAAU,CAACC,MAAD,EAAqC;AAC7C,WAAO,KAAKZ,GAAL,CAAS,KAAKa,QAAL,CAAc,iBAAd,EAAiCD,MAAjC,CAAT,CAAP;AACD;;AAEDE,EAAAA,oBAAoB,CAACF,MAAD,EAAqC;AACvD,WAAO,KAAKZ,GAAL,CAAS,KAAKa,QAAL,CAAc,oBAAd,EAAoCD,MAApC,CAAT,CAAP;AACD;;AAEDG,EAAAA,sBAAsB,CAACC,EAAD,EAAad,OAAb,EAA2B;AAC/C,WAAO,KAAKC,GAAL,CAAU,6BAA4Ba,EAAG,EAAzC,EAA4Cd,OAA5C,CAAP;AACD;;AAEDe,EAAAA,mBAAmB,CAACL,MAAD,EAAqC;AACtD,WAAO,KAAKZ,GAAL,CACL,KAAKa,QAAL,CAAc,2CAAd,EAA2DD,MAA3D,CADK,CAAP;AAGD;;AAEDM,EAAAA,4BAA4B,CAACF,EAAD,EAAad,OAAb,EAAsB;AAChD,WAAO,KAAKC,GAAL,CAAU,kCAAiCa,EAAG,EAA9C,oBAAsDd,OAAtD,EAAP;AACD;;AAEDiB,EAAAA,kBAAkB,CAACH,EAAD,EAAaI,MAAb,EAA6B;AAC7C,WAAO,KAAKf,IAAL,CAAW,mBAAkBW,EAAG,IAAGI,MAAO,EAA1C,CAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKrB,GAAL,CAAS,eAAT,CAAP;AACD;;AAEDsB,EAAAA,qBAAqB,GAAG;AACtB,UAAMC,MAAM,GAAG3B,eAAe,EAA9B;AACA,WAAQ,GAAE2B,MAAM,CAACC,wBAAyB,0BAA1C;AACD;;AAlE2C;AAqE9C,OAAO,MAAMC,aAAa,GAAG,IAAI5B,aAAJ,EAAtB","sourcesContent":["import { IStudio } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\nimport { getGlobalConfig } from './config';\n\nexport class StudioService extends APIRequest {\n  me(headers?: { [key: string]: string }): Promise<IResponse<IStudio>> {\n    return this.get('/studio/me', headers);\n  }\n\n  update(payload: any) {\n    return this.put('/studio/update', payload);\n  }\n\n  updatePaymentInfo(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/bank-transfer/update', payload);\n  }\n\n  updateDirectDepost(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/direct-deposit/update', payload);\n  }\n\n  updatePaxum(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/paxum/update', payload);\n  }\n\n  updateBitpay(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/bitpay/update', payload);\n  }\n\n  getCommission() {\n    return this.get('/settings/studio/commission');\n  }\n\n  addModel(payload) {\n    return this.post('/studio/members', payload);\n  }\n\n  getMembers(params?: { [key: string]: string }) {\n    return this.get(this.buildUrl('/studio/members', params));\n  }\n\n  getMemberCommissions(params?: { [key: string]: string }) {\n    return this.get(this.buildUrl('/studio/commission', params));\n  }\n\n  updateMemberCommission(id: string, payload: any) {\n    return this.put(`/studio/commission/member/${id}`, payload);\n  }\n\n  getPerformerRequest(params?: { [key: string]: string }) {\n    return this.get(\n      this.buildUrl('/payout-requests/studio/performer-request', params)\n    );\n  }\n\n  updateStatusPerformerRequest(id: string, payload) {\n    return this.put(`/payout-requests/studio/update/${id}`, { ...payload });\n  }\n\n  updateMemberStatus(id: string, status: string) {\n    return this.post(`/studio/members/${id}/${status}`);\n  }\n\n  stats() {\n    return this.get('/studio/stats');\n  }\n\n  getDocumentsUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/studio/documents/upload`;\n  }\n}\n\nexport const studioService = new StudioService();\n"]},"metadata":{},"sourceType":"module"}