{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var PostService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(PostService, _APIRequest);\n\n  var _super = _createSuper(PostService);\n\n  function PostService() {\n    _classCallCheck(this, PostService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PostService, [{\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/posts/search', query));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return this.get(\"/posts/\".concat(id));\n    }\n  }, {\n    key: \"createContactCotent\",\n    value: function createContactCotent(data) {\n      return this.post('/contact', _objectSpread({}, data));\n    }\n  }]);\n\n  return PostService;\n}(APIRequest);\nexport var postService = new PostService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/post.service.ts"],"names":["APIRequest","PostService","query","get","buildUrl","id","data","post","postService"],"mappings":";;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,gBAAOC,KAAP,EAA2B;AACzB,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,eAAd,EAA+BF,KAA/B,CAAT,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,kBAASG,EAAT,EAAqB;AACnB,aAAO,KAAKF,GAAL,kBAAmBE,EAAnB,EAAP;AACD;AAPH;AAAA;AAAA,WASE,6BAAoBC,IAApB,EAA+C;AAC7C,aAAO,KAAKC,IAAL,CAAU,UAAV,oBAA2BD,IAA3B,EAAP;AACD;AAXH;;AAAA;AAAA,EAAiCN,UAAjC;AAcA,OAAO,IAAMQ,WAAW,GAAG,IAAIP,WAAJ,EAApB","sourcesContent":["import { IPostSearch } from 'src/interfaces';\nimport { APIRequest } from './api-request';\n\nexport class PostService extends APIRequest {\n  search(query: IPostSearch) {\n    return this.get(this.buildUrl('/posts/search', query as any));\n  }\n\n  findById(id: string) {\n    return this.get(`/posts/${id}`);\n  }\n\n  createContactCotent(data: Record<string, any>) {\n    return this.post('/contact', { ...data });\n  }\n}\n\nexport const postService = new PostService();\n"]},"metadata":{},"sourceType":"module"}