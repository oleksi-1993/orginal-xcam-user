{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\n\nvar PayoutRequestService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(PayoutRequestService, _APIRequest);\n\n  var _super = _createSuper(PayoutRequestService);\n\n  function PayoutRequestService() {\n    _classCallCheck(this, PayoutRequestService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PayoutRequestService, [{\n    key: \"calculate\",\n    value: function calculate(params, role) {\n      return this.get(this.buildUrl(\"/earning/\".concat(role || 'performer', \"/payout\"), params));\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/payout-requests/performer/search', query));\n    }\n  }, {\n    key: \"studioSearch\",\n    value: function studioSearch(query) {\n      return this.get(this.buildUrl('/payout-requests/studio/search', query));\n    }\n  }, {\n    key: \"create\",\n    value: function create(body) {\n      var role = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'performer';\n      return this.post(\"/payout-requests/\".concat(role), body);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, body) {\n      var role = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'performer';\n      return this.put(\"/payout-requests/\".concat(role, \"/\").concat(id), body);\n    }\n  }, {\n    key: \"detail\",\n    value: function detail(id, headers) {\n      var role = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'performer';\n      return this.get(\"/payout-requests/\".concat(role, \"/\").concat(id, \"/view\"), headers);\n    }\n  }]);\n\n  return PayoutRequestService;\n}(APIRequest);\n\nexport var payoutRequestService = new PayoutRequestService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/payout-request.ts"],"names":["APIRequest","PayoutRequestService","params","role","get","buildUrl","query","body","post","id","put","headers","payoutRequestService"],"mappings":";;;;;;;;;;AACA,SAASA,UAAT,QAA2B,eAA3B;;IAEMC,oB;;;;;;;;;;;;;WACJ,mBAAUC,MAAV,EAA6CC,IAA7C,EAA2D;AACzD,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,oBAA0BF,IAAI,IAAI,WAAlC,cAAwDD,MAAxD,CADK,CAAP;AAGD;;;WAED,gBAAOI,KAAP,EAAyC;AACvC,aAAO,KAAKF,GAAL,CAAS,KAAKC,QAAL,CAAc,mCAAd,EAAmDC,KAAnD,CAAT,CAAP;AACD;;;WAED,sBAAaA,KAAb,EAA+C;AAC7C,aAAO,KAAKF,GAAL,CAAS,KAAKC,QAAL,CAAc,gCAAd,EAAgDC,KAAhD,CAAT,CAAP;AACD;;;WAED,gBAAOC,IAAP,EAAsC;AAAA,UAApBJ,IAAoB,uEAAb,WAAa;AACpC,aAAO,KAAKK,IAAL,4BAA8BL,IAA9B,GAAsCI,IAAtC,CAAP;AACD;;;WAED,gBAAOE,EAAP,EAAmBF,IAAnB,EAAkD;AAAA,UAApBJ,IAAoB,uEAAb,WAAa;AAChD,aAAO,KAAKO,GAAL,4BAA6BP,IAA7B,cAAqCM,EAArC,GAA2CF,IAA3C,CAAP;AACD;;;WAED,gBACEE,EADF,EAEEE,OAFF,EAM4C;AAAA,UAD1CR,IAC0C,uEADnC,WACmC;AAC1C,aAAO,KAAKC,GAAL,4BAA6BD,IAA7B,cAAqCM,EAArC,YAAgDE,OAAhD,CAAP;AACD;;;;EA/BgCX,U;;AAkCnC,OAAO,IAAMY,oBAAoB,GAAG,IAAIX,oBAAJ,EAA7B","sourcesContent":["import { IResponse } from 'src/interfaces';\nimport { APIRequest } from './api-request';\n\nclass PayoutRequestService extends APIRequest {\n  calculate(params: { [key: string]: string }, role: string) {\n    return this.get(\n      this.buildUrl(`/earning/${role || 'performer'}/payout`, params)\n    );\n  }\n\n  search(query: { [key: string]: string }) {\n    return this.get(this.buildUrl('/payout-requests/performer/search', query));\n  }\n\n  studioSearch(query: { [key: string]: string }) {\n    return this.get(this.buildUrl('/payout-requests/studio/search', query));\n  }\n\n  create(body: any, role = 'performer') {\n    return this.post(`/payout-requests/${role}`, body);\n  }\n\n  update(id: string, body: any, role = 'performer') {\n    return this.put(`/payout-requests/${role}/${id}`, body);\n  }\n\n  detail(\n    id: string,\n    headers: {\n      [key: string]: string;\n    },\n    role = 'performer'\n  ): Promise<IResponse<PayoutRequestService>> {\n    return this.get(`/payout-requests/${role}/${id}/view`, headers);\n  }\n}\n\nexport const payoutRequestService = new PayoutRequestService();\n"]},"metadata":{},"sourceType":"module"}