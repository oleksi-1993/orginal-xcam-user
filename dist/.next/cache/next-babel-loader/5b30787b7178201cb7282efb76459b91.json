{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport moment from 'moment';\nimport { message } from 'antd';\nimport { getResponseError } from 'src/lib';\nimport { APIRequest } from './api-request';\n\nvar StreamService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(StreamService, _APIRequest);\n\n  var _super = _createSuper(StreamService);\n\n  function StreamService() {\n    _classCallCheck(this, StreamService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StreamService, [{\n    key: \"getSessionId\",\n    value: function getSessionId(id, type) {\n      return this.get(\"/streaming/session/\".concat(id, \"/\").concat(type));\n    }\n  }, {\n    key: \"goLive\",\n    value: function goLive() {\n      return this.post('/streaming/live');\n    }\n  }, {\n    key: \"joinPublicChat\",\n    value: function joinPublicChat(performerId) {\n      return this.post(\"/streaming/join/\".concat(performerId));\n    }\n  }, {\n    key: \"requestPrivateChat\",\n    value: function requestPrivateChat(performerId) {\n      return this.post(\"/streaming/private-chat/\".concat(performerId));\n    }\n  }, {\n    key: \"acceptPrivateChat\",\n    value: function acceptPrivateChat(id) {\n      return this.get(\"/streaming/private-chat/\".concat(id));\n    }\n  }, {\n    key: \"startGroupChat\",\n    value: function startGroupChat() {\n      return this.post('/streaming/group-chat');\n    }\n  }, {\n    key: \"joinGroupChat\",\n    value: function joinGroupChat(id) {\n      return this.get(\"/streaming/group-chat/\".concat(id));\n    }\n  }, {\n    key: \"generateOneTimeToken\",\n    value: function generateOneTimeToken(data) {\n      return this.post('/streaming/token', data);\n    }\n  }, {\n    key: \"getPublishToken\",\n    value: function () {\n      var _getPublishToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        var expireDate,\n            settings,\n            streamId,\n            secureOption,\n            resp,\n            error,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                expireDate = _args.length > 1 && _args[1] !== undefined ? _args[1] : moment().add(1, 'd').toDate().getTime();\n                _context.prev = 1;\n                settings = options.settings, streamId = options.streamId;\n                secureOption = settings.secureOption;\n\n                if (!secureOption) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.generateOneTimeToken({\n                  id: streamId,\n                  type: 'publish',\n                  expireDate: expireDate\n                });\n\n              case 7:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data.tokenId);\n\n              case 9:\n                return _context.abrupt(\"return\", null);\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                _context.next = 16;\n                return Promise.resolve(_context.t0);\n\n              case 16:\n                error = _context.sent;\n                message.error(getResponseError(error));\n                return _context.abrupt(\"return\", null);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 12]]);\n      }));\n\n      function getPublishToken(_x) {\n        return _getPublishToken.apply(this, arguments);\n      }\n\n      return getPublishToken;\n    }()\n  }, {\n    key: \"getSubscriberToken\",\n    value: function () {\n      var _getSubscriberToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n        var expireDate,\n            settings,\n            streamId,\n            secureOption,\n            resp,\n            error,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                expireDate = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : moment().add(1, 'd').toDate().getTime();\n                _context2.prev = 1;\n                settings = options.settings, streamId = options.streamId;\n                secureOption = settings.secureOption;\n\n                if (!secureOption) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 7;\n                return this.generateOneTimeToken({\n                  id: streamId,\n                  type: 'play',\n                  expireDate: expireDate\n                });\n\n              case 7:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data.tokenId);\n\n              case 9:\n                return _context2.abrupt(\"return\", null);\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                _context2.next = 16;\n                return Promise.resolve(_context2.t0);\n\n              case 16:\n                error = _context2.sent;\n                message.error(getResponseError(error));\n                return _context2.abrupt(\"return\", null);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 12]]);\n      }));\n\n      function getSubscriberToken(_x2) {\n        return _getSubscriberToken.apply(this, arguments);\n      }\n\n      return getSubscriberToken;\n    }()\n  }, {\n    key: \"getLiveStreamOrVodURL\",\n    value: function () {\n      var _getLiveStreamOrVodURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options) {\n        var expireDate,\n            _player,\n            appName,\n            settings,\n            streamId,\n            secureOption,\n            viewerURL,\n            extension,\n            oneTimeToken,\n            resp,\n            protocol,\n            error,\n            _args3 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                expireDate = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : moment().add(1, 'd').toDate().getTime();\n                _player = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 'hls';\n                _context3.prev = 2;\n                // const src = `https://${viewerURL}:5443/${appName}/streams/${streamId}.m3u8${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;\n                // eslint-disable-next-line no-shadow\n                appName = options.appName, settings = options.settings, streamId = options.streamId;\n                secureOption = settings.secureOption, viewerURL = settings.viewerURL;\n                extension = _player === 'hls' ? 'm3u8' : 'mp4';\n\n                if (!(!viewerURL || !appName)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", '');\n\n              case 8:\n                oneTimeToken = '';\n\n                if (!secureOption) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.next = 12;\n                return this.generateOneTimeToken({\n                  id: streamId,\n                  type: 'play',\n                  expireDate: expireDate\n                });\n\n              case 12:\n                resp = _context3.sent;\n                oneTimeToken = resp.data.tokenId;\n\n              case 14:\n                protocol = window.location.protocol;\n                return _context3.abrupt(\"return\", \"\".concat(protocol, \"//\").concat(viewerURL, \"/\").concat(appName, \"/streams/\").concat(streamId, \".\").concat(extension).concat(oneTimeToken ? \"?token=\".concat(oneTimeToken) : ''));\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t0 = _context3[\"catch\"](2);\n                _context3.next = 22;\n                return Promise.resolve(_context3.t0);\n\n              case 22:\n                error = _context3.sent;\n                message.error(getResponseError(error));\n                return _context3.abrupt(\"return\", '');\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 18]]);\n      }));\n\n      function getLiveStreamOrVodURL(_x3) {\n        return _getLiveStreamOrVodURL.apply(this, arguments);\n      }\n\n      return getLiveStreamOrVodURL;\n    }()\n  }]);\n\n  return StreamService;\n}(APIRequest);\n\nexport var streamService = new StreamService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/stream.service.tsx"],"names":["moment","message","getResponseError","APIRequest","StreamService","id","type","get","post","performerId","data","options","expireDate","add","toDate","getTime","settings","streamId","secureOption","generateOneTimeToken","resp","tokenId","Promise","resolve","error","_player","appName","viewerURL","extension","oneTimeToken","protocol","window","location","streamService"],"mappings":"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","sourcesContent":["import { IOneTimeToken, StreamSettings } from 'src/interfaces';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport { getResponseError } from 'src/lib';\nimport { APIRequest } from './api-request';\n\nclass StreamService extends APIRequest {\n  getSessionId(id: string, type: string) {\n    return this.get(`/streaming/session/${id}/${type}`);\n  }\n\n  goLive() {\n    return this.post('/streaming/live');\n  }\n\n  joinPublicChat(performerId: string) {\n    return this.post(`/streaming/join/${performerId}`);\n  }\n\n  requestPrivateChat(performerId: string) {\n    return this.post(`/streaming/private-chat/${performerId}`);\n  }\n\n  acceptPrivateChat(id: string) {\n    return this.get(`/streaming/private-chat/${id}`);\n  }\n\n  startGroupChat() {\n    return this.post('/streaming/group-chat');\n  }\n\n  joinGroupChat(id: string) {\n    return this.get(`/streaming/group-chat/${id}`);\n  }\n\n  generateOneTimeToken(data: IOneTimeToken) {\n    return this.post('/streaming/token', data);\n  }\n\n  async getPublishToken(options: {\n    streamId: string,\n    settings: StreamSettings\n    }, expireDate = moment().add(1, 'd').toDate().getTime()): Promise<string> {\n    try {\n      const { settings, streamId } = options;\n      const { secureOption } = settings;\n      if (secureOption) {\n        const resp = await this.generateOneTimeToken({\n          id: streamId,\n          type: 'publish',\n          expireDate\n        });\n        return resp.data.tokenId;\n      }\n\n      return null;\n    } catch (err) {\n      const error = await Promise.resolve(err);\n      message.error(getResponseError(error));\n      return null;\n    }\n  }\n\n  async getSubscriberToken(options: {\n    streamId: string,\n    settings: StreamSettings\n    }, expireDate = moment().add(1, 'd').toDate().getTime()): Promise<string> {\n    try {\n      const { settings, streamId } = options;\n      const { secureOption } = settings;\n      if (secureOption) {\n        const resp = await this.generateOneTimeToken({\n          id: streamId,\n          type: 'play',\n          expireDate\n        });\n        return resp.data.tokenId;\n      }\n\n      return null;\n    } catch (err) {\n      const error = await Promise.resolve(err);\n      message.error(getResponseError(error));\n      return null;\n    }\n  }\n\n  async getLiveStreamOrVodURL(options: {\n    streamId: string,\n    settings: StreamSettings,\n    appName: string\n    }, expireDate = moment().add(1, 'd').toDate().getTime(), _player = 'hls') {\n    // http://[IP_Address]/<Application_Name>/streams/streamID.mp4?token=tokenId\n    // http://[IP_Address]/<Application_Name>/streams/streamID.m3u8?token=tokenId\n    // http://[IP_Address]/<Application_Name>/play.html?name=streamID&playOrder=hls&token=tokenId\n    try {\n      // const src = `https://${viewerURL}:5443/${appName}/streams/${streamId}.m3u8${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;\n      // eslint-disable-next-line no-shadow\n      const { appName, settings, streamId } = options;\n      const { secureOption, viewerURL } = settings;\n      const extension = _player === 'hls' ? 'm3u8' : 'mp4';\n      if (!viewerURL || !appName) {\n        return '';\n      }\n\n      let oneTimeToken = '';\n      if (secureOption) {\n        const resp = await this.generateOneTimeToken({\n          id: streamId,\n          type: 'play',\n          expireDate\n        });\n        oneTimeToken = resp.data.tokenId;\n      }\n\n      const { protocol } = window.location;\n      return `${protocol}//${viewerURL}/${appName}/streams/${streamId}.${extension}${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;\n    } catch (err) {\n      const error = await Promise.resolve(err);\n      message.error(getResponseError(error));\n      return '';\n    }\n  }\n}\n\nexport const streamService = new StreamService();\n"]},"metadata":{},"sourceType":"module"}