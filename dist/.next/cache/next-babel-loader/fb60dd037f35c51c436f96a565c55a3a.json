{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\pages\\\\studio\\\\login.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport StudioFormLogin from '@components/studio/studio-login-form';\nimport Head from 'next/head';\nimport '../auth/index.less';\nimport { studioLogin, resetLoginData } from 'src/redux/auth/actions';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport { getResponseError } from 'src/lib';\n\nclass StudioLoginPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"rememberMe\", false);\n\n    this.state = {};\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      success,\n      error\n    } = this.props;\n\n    if (success && success !== prevProps.success) {\n      message.success('Logged successfully');\n    }\n\n    if (error && prevProps.error !== error) {\n      message.error(getResponseError(error));\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      resetLoginData: resetLogin\n    } = this.props;\n    resetLogin();\n  }\n\n  submit(data) {\n    const {\n      studioLogin: handleLogin\n    } = this.props;\n    handleLogin(_objectSpread(_objectSpread({}, data), {}, {\n      remember: this.rememberMe\n    }));\n  }\n\n  render() {\n    const {\n      requesting,\n      error,\n      success,\n      ui\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Studio Sign-in\")), __jsx(\"div\", {\n      className: \"register-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-register-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(StudioFormLogin, {\n      requesting: requesting,\n      submit: this.submit.bind(this),\n      onRemember: value => {\n        this.rememberMe = value;\n      },\n      error: error,\n      success: success,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })), __jsx(FormRegisterPlaceHolder, {\n      ui: ui,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n_defineProperty(StudioLoginPage, \"layout\", 'auth');\n\n_defineProperty(StudioLoginPage, \"authenticate\", false);\n\nconst mapStates = state => _objectSpread(_objectSpread({}, state.auth.userLogin), {}, {\n  ui: state.ui\n});\n\nconst mapDispatch = {\n  studioLogin,\n  resetLoginData\n};\nexport default connect(mapStates, mapDispatch)(StudioLoginPage);","map":{"version":3,"sources":["E:/programData/React/user/pages/studio/login.tsx"],"names":["React","PureComponent","StudioFormLogin","Head","studioLogin","resetLoginData","FormRegisterPlaceHolder","connect","message","getResponseError","StudioLoginPage","constructor","props","state","componentDidUpdate","prevProps","success","error","componentWillUnmount","resetLogin","submit","data","handleLogin","remember","rememberMe","render","requesting","ui","bind","value","mapStates","auth","userLogin","mapDispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport StudioFormLogin from '@components/studio/studio-login-form';\nimport Head from 'next/head';\nimport { IStudioLogin, IUIConfig } from 'src/interfaces';\nimport '../auth/index.less';\nimport { studioLogin, resetLoginData } from 'src/redux/auth/actions';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport { getResponseError } from 'src/lib';\n\ninterface IProps {\n  requesting: false;\n  success: false;\n  data: null;\n  error: null;\n  studioLogin: Function;\n  resetLoginData: Function;\n  ui: IUIConfig;\n}\ninterface IStates {}\n\nclass StudioLoginPage extends PureComponent<IProps, IStates> {\n  static layout: string = 'auth';\n\n  static authenticate: boolean = false;\n\n  rememberMe = false;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    const { success, error } = this.props;\n    if (success && success !== prevProps.success) {\n      message.success('Logged successfully');\n    }\n    if (error && prevProps.error !== error) {\n      message.error(getResponseError(error));\n    }\n  }\n\n  componentWillUnmount() {\n    const { resetLoginData: resetLogin } = this.props;\n    resetLogin();\n  }\n\n  submit(data: IStudioLogin) {\n    const { studioLogin: handleLogin } = this.props;\n    handleLogin({\n      ...data,\n      remember: this.rememberMe\n    });\n  }\n\n  render() {\n    const {\n      requesting, error, success, ui\n    } = this.props;\n    return (\n      <>\n        <Head>\n          <title>Studio Sign-in</title>\n        </Head>\n        <div className=\"register-page\">\n          <div className=\"form-register-container\">\n            <StudioFormLogin\n              requesting={requesting}\n              submit={this.submit.bind(this)}\n              onRemember={(value) => { this.rememberMe = value; }}\n              error={error}\n              success={success}\n            />\n          </div>\n          <FormRegisterPlaceHolder ui={ui} />\n        </div>\n      </>\n    );\n  }\n}\nconst mapStates = (state) => ({\n  ...state.auth.userLogin,\n  ui: state.ui\n});\nconst mapDispatch = { studioLogin, resetLoginData };\nexport default connect(mapStates, mapDispatch)(StudioLoginPage);\n"]},"metadata":{},"sourceType":"module"}