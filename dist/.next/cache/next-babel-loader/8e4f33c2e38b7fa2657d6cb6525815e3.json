{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { TOKEN } from 'src/services/api-request';\nimport { omit } from 'lodash';\nimport { isUrl } from '@lib/string';\nimport cookie from 'js-cookie';\nimport { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\nexport var VideoService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(VideoService, _APIRequest);\n\n  var _super = _createSuper(VideoService);\n\n  function VideoService() {\n    _classCallCheck(this, VideoService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VideoService, [{\n    key: \"search\",\n    value: function search(params) {\n      return this.get(this.buildUrl('/user/performer-assets/videos/search', params));\n    }\n  }, {\n    key: \"purchased\",\n    value: function purchased(params) {\n      return this.get(this.buildUrl('/purchased-items/user/videos', params));\n    }\n  }, {\n    key: \"details\",\n    value: function details(id, headers) {\n      return this.get(\"/performer/performer-assets/videos/\".concat(id, \"/view\"), headers);\n    }\n  }, {\n    key: \"myVideos\",\n    value: function myVideos(query) {\n      return this.get(this.buildUrl('/performer/performer-assets/videos/search', query));\n    }\n  }, {\n    key: \"removeMyVideo\",\n    value: function removeMyVideo(id) {\n      return this.del(\"/performer/performer-assets/videos/\".concat(id));\n    }\n  }, {\n    key: \"create\",\n    value: function create(url, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        onProgress: function onProgress() {}\n      };\n      var config = getGlobalConfig();\n      return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            options.onProgress({\n              percentage: event.loaded / event.total * 100\n            });\n          }\n        });\n        req.addEventListener('load', function () {\n          var success = req.status >= 200 && req.status < 300;\n          var response = req.response;\n\n          if (!success) {\n            return reject(response);\n          }\n\n          return resolve(response);\n        });\n        req.upload.addEventListener('error', function () {\n          reject(req.response);\n        });\n        var formData = new FormData(); // formData.append('file', file, file.name);\n\n        if (data.video) {\n          var video = data.video.file.originFileObj;\n          formData.append('video', video, video.name);\n        }\n\n        if (data.trailer) {\n          var trailer = data.trailer.file.originFileObj;\n          formData.append('trailer', trailer, trailer.name);\n        }\n\n        if (data.thumbnail) {\n          var thumbnail = data.thumbnail.file.originFileObj;\n          formData.append('thumbnail', thumbnail, thumbnail.name);\n        }\n\n        Object.keys(omit(data, ['video', 'thumbnail', 'trailer'])).forEach(function (v) {\n          formData.append(v, data[v]);\n        });\n        req.responseType = 'json';\n        req.open('POST', isUrl(url) ? url : \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT).concat(url));\n        var token = cookie.get(TOKEN);\n\n        if (token) {\n          req.setRequestHeader('Authorization', token);\n        }\n\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(url, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        onProgress: function onProgress() {}\n      };\n      var config = getGlobalConfig();\n      return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            options.onProgress({\n              percentage: event.loaded / event.total * 100\n            });\n          }\n        });\n        req.addEventListener('load', function () {\n          var success = req.status >= 200 && req.status < 300;\n          var response = req.response;\n\n          if (!success) {\n            return reject(response);\n          }\n\n          return resolve(response);\n        });\n        req.upload.addEventListener('error', function () {\n          reject(req.response);\n        });\n        var formData = new FormData(); // formData.append('file', file, file.name);\n\n        if (data.video && data.video.file) {\n          var video = data.video.file.originFileObj;\n          formData.append('video', video, video.name);\n        }\n\n        if (data.trailer && data.trailer.file) {\n          var trailer = data.trailer.file.originFileObj;\n          formData.append('trailer', trailer, trailer.name);\n        }\n\n        if (data.thumbnail && data.thumbnail.file) {\n          var thumbnail = data.thumbnail.file.originFileObj;\n          formData.append('thumbnail', thumbnail, thumbnail.name);\n        }\n\n        Object.keys(omit(data, ['video', 'thumbnail', 'trailer'])).forEach(function (v) {\n          formData.append(v, data[v]);\n        });\n        req.responseType = 'json';\n        req.open('PUT', isUrl(url) ? url : \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT).concat(url));\n        var token = cookie.get(TOKEN);\n\n        if (token) {\n          req.setRequestHeader('Authorization', token);\n        }\n\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"increaseView\",\n    value: function increaseView(id) {\n      return this.post(\"/user/performer-assets/videos/\".concat(id, \"/inc-view\"));\n    } // update(videoId, performerId, data) {\n    //   return this.put(`/performer/performer-assets/videos/${videoId}`, {\n    //     ...data,\n    //     performerId\n    //   });\n    // }\n\n  }, {\n    key: \"userFindVideoById\",\n    value: function userFindVideoById(id) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.get(\"/user/performer-assets/videos/\".concat(id), headers);\n    }\n  }]);\n\n  return VideoService;\n}(APIRequest);\nexport var videoService = new VideoService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/video.service.ts"],"names":["TOKEN","omit","isUrl","cookie","APIRequest","getGlobalConfig","VideoService","params","get","buildUrl","id","headers","query","del","url","data","options","onProgress","config","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","success","status","response","formData","FormData","video","file","originFileObj","append","name","trailer","thumbnail","Object","keys","forEach","v","responseType","open","NEXT_PUBLIC_API_ENDPOINT","token","setRequestHeader","send","post","videoService"],"mappings":";;;;;;;;;;AACA,SAASA,KAAT,QAAsB,0BAAtB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,gBAAOC,MAAP,EAAwC;AACtC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,sCAAd,EAAsDF,MAAtD,CADK,CAAP;AAGD;AALH;AAAA;AAAA,WAOE,mBAAUA,MAAV,EAA2C;AACzC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,8BAAd,EAA8CF,MAA9C,CADK,CAAP;AAGD;AAXH;AAAA;AAAA,WAaE,iBAAQG,EAAR,EAAoBC,OAApB,EAAyD;AACvD,aAAO,KAAKH,GAAL,8CAA+CE,EAA/C,YAA0DC,OAA1D,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,kBAASC,KAAT,EAAyC;AACvC,aAAO,KAAKJ,GAAL,CACL,KAAKC,QAAL,CAAc,2CAAd,EAA2DG,KAA3D,CADK,CAAP;AAGD;AArBH;AAAA;AAAA,WAuBE,uBAAcF,EAAd,EAA0B;AACxB,aAAO,KAAKG,GAAL,8CAA+CH,EAA/C,EAAP;AACD;AAzBH;AAAA;AAAA,WA2BE,gBACEI,GADF,EAEEC,IAFF,EAM2B;AAAA,UAHzBC,OAGyB,uEAHW;AAClCC,QAAAA,UADkC,wBACrB,CAAE;AADmB,OAGX;AACzB,UAAMC,MAAM,GAAGb,eAAe,EAA9B;AACA,aAAO,IAAIc,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAEAD,QAAAA,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4B,UAA5B,EAAwC,UAACC,KAAD,EAAW;AACjD,cAAIA,KAAK,CAACC,gBAAV,EAA4B;AAC1BX,YAAAA,OAAO,CAACC,UAAR,CAAmB;AACjBW,cAAAA,UAAU,EAAGF,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACI,KAAtB,GAA+B;AAD1B,aAAnB;AAGD;AACF,SAND;AAQAR,QAAAA,GAAG,CAACG,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AACjC,cAAMM,OAAO,GAAGT,GAAG,CAACU,MAAJ,IAAc,GAAd,IAAqBV,GAAG,CAACU,MAAJ,GAAa,GAAlD;AACA,cAAQC,QAAR,GAAqBX,GAArB,CAAQW,QAAR;;AACA,cAAI,CAACF,OAAL,EAAc;AACZ,mBAAOV,MAAM,CAACY,QAAD,CAAb;AACD;;AACD,iBAAOb,OAAO,CAACa,QAAD,CAAd;AACD,SAPD;AASAX,QAAAA,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACzCJ,UAAAA,MAAM,CAACC,GAAG,CAACW,QAAL,CAAN;AACD,SAFD;AAIA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAxBsC,CAyBtC;;AACA,YAAIpB,IAAI,CAACqB,KAAT,EAAgB;AACd,cAAMA,KAAK,GAAGrB,IAAI,CAACqB,KAAL,CAAWC,IAAX,CAAgBC,aAA9B;AACAJ,UAAAA,QAAQ,CAACK,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB,EAAgCA,KAAK,CAACI,IAAtC;AACD;;AAED,YAAIzB,IAAI,CAAC0B,OAAT,EAAkB;AAChB,cAAMA,OAAO,GAAG1B,IAAI,CAAC0B,OAAL,CAAaJ,IAAb,CAAkBC,aAAlC;AACAJ,UAAAA,QAAQ,CAACK,MAAT,CAAgB,SAAhB,EAA2BE,OAA3B,EAAoCA,OAAO,CAACD,IAA5C;AACD;;AAED,YAAIzB,IAAI,CAAC2B,SAAT,EAAoB;AAClB,cAAMA,SAAS,GAAG3B,IAAI,CAAC2B,SAAL,CAAeL,IAAf,CAAoBC,aAAtC;AACAJ,UAAAA,QAAQ,CAACK,MAAT,CAAgB,WAAhB,EAA6BG,SAA7B,EAAwCA,SAAS,CAACF,IAAlD;AACD;;AAEDG,QAAAA,MAAM,CAACC,IAAP,CAAY3C,IAAI,CAACc,IAAD,EAAO,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,CAAP,CAAhB,EAA2D8B,OAA3D,CACE,UAACC,CAAD,EAAO;AACLZ,UAAAA,QAAQ,CAACK,MAAT,CAAgBO,CAAhB,EAAmB/B,IAAI,CAAC+B,CAAD,CAAvB;AACD,SAHH;AAMAxB,QAAAA,GAAG,CAACyB,YAAJ,GAAmB,MAAnB;AACAzB,QAAAA,GAAG,CAAC0B,IAAJ,CAAS,MAAT,EAAiB9C,KAAK,CAACY,GAAD,CAAL,GAAaA,GAAb,aAAsBI,MAAM,CAAC+B,wBAA7B,SAAwDnC,GAAxD,CAAjB;AAEA,YAAMoC,KAAU,GAAG/C,MAAM,CAACK,GAAP,CAAWR,KAAX,CAAnB;;AACA,YAAIkD,KAAJ,EAAW;AACT5B,UAAAA,GAAG,CAAC6B,gBAAJ,CAAqB,eAArB,EAAsCD,KAAtC;AACD;;AACD5B,QAAAA,GAAG,CAAC8B,IAAJ,CAASlB,QAAT;AACD,OAvDM,CAAP;AAwDD;AA3FH;AAAA;AAAA,WA6FE,gBACEpB,GADF,EAEEC,IAFF,EAM2B;AAAA,UAHzBC,OAGyB,uEAHW;AAClCC,QAAAA,UADkC,wBACrB,CAAE;AADmB,OAGX;AACzB,UAAMC,MAAM,GAAGb,eAAe,EAA9B;AACA,aAAO,IAAIc,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAEAD,QAAAA,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4B,UAA5B,EAAwC,UAACC,KAAD,EAAW;AACjD,cAAIA,KAAK,CAACC,gBAAV,EAA4B;AAC1BX,YAAAA,OAAO,CAACC,UAAR,CAAmB;AACjBW,cAAAA,UAAU,EAAGF,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACI,KAAtB,GAA+B;AAD1B,aAAnB;AAGD;AACF,SAND;AAQAR,QAAAA,GAAG,CAACG,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AACjC,cAAMM,OAAO,GAAGT,GAAG,CAACU,MAAJ,IAAc,GAAd,IAAqBV,GAAG,CAACU,MAAJ,GAAa,GAAlD;AACA,cAAQC,QAAR,GAAqBX,GAArB,CAAQW,QAAR;;AACA,cAAI,CAACF,OAAL,EAAc;AACZ,mBAAOV,MAAM,CAACY,QAAD,CAAb;AACD;;AACD,iBAAOb,OAAO,CAACa,QAAD,CAAd;AACD,SAPD;AASAX,QAAAA,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACzCJ,UAAAA,MAAM,CAACC,GAAG,CAACW,QAAL,CAAN;AACD,SAFD;AAIA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAxBsC,CAyBtC;;AACA,YAAIpB,IAAI,CAACqB,KAAL,IAAcrB,IAAI,CAACqB,KAAL,CAAWC,IAA7B,EAAmC;AACjC,cAAMD,KAAK,GAAGrB,IAAI,CAACqB,KAAL,CAAWC,IAAX,CAAgBC,aAA9B;AACAJ,UAAAA,QAAQ,CAACK,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB,EAAgCA,KAAK,CAACI,IAAtC;AACD;;AAED,YAAIzB,IAAI,CAAC0B,OAAL,IAAgB1B,IAAI,CAAC0B,OAAL,CAAaJ,IAAjC,EAAuC;AACrC,cAAMI,OAAO,GAAG1B,IAAI,CAAC0B,OAAL,CAAaJ,IAAb,CAAkBC,aAAlC;AACAJ,UAAAA,QAAQ,CAACK,MAAT,CAAgB,SAAhB,EAA2BE,OAA3B,EAAoCA,OAAO,CAACD,IAA5C;AACD;;AAED,YAAIzB,IAAI,CAAC2B,SAAL,IAAkB3B,IAAI,CAAC2B,SAAL,CAAeL,IAArC,EAA2C;AACzC,cAAMK,SAAS,GAAG3B,IAAI,CAAC2B,SAAL,CAAeL,IAAf,CAAoBC,aAAtC;AACAJ,UAAAA,QAAQ,CAACK,MAAT,CAAgB,WAAhB,EAA6BG,SAA7B,EAAwCA,SAAS,CAACF,IAAlD;AACD;;AAEDG,QAAAA,MAAM,CAACC,IAAP,CAAY3C,IAAI,CAACc,IAAD,EAAO,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,CAAP,CAAhB,EAA2D8B,OAA3D,CAAmE,UAACC,CAAD,EAAO;AACxEZ,UAAAA,QAAQ,CAACK,MAAT,CAAgBO,CAAhB,EAAmB/B,IAAI,CAAC+B,CAAD,CAAvB;AACD,SAFD;AAIAxB,QAAAA,GAAG,CAACyB,YAAJ,GAAmB,MAAnB;AACAzB,QAAAA,GAAG,CAAC0B,IAAJ,CAAS,KAAT,EAAgB9C,KAAK,CAACY,GAAD,CAAL,GAAaA,GAAb,aAAsBI,MAAM,CAAC+B,wBAA7B,SAAwDnC,GAAxD,CAAhB;AAEA,YAAMoC,KAAU,GAAG/C,MAAM,CAACK,GAAP,CAAWR,KAAX,CAAnB;;AACA,YAAIkD,KAAJ,EAAW;AACT5B,UAAAA,GAAG,CAAC6B,gBAAJ,CAAqB,eAArB,EAAsCD,KAAtC;AACD;;AACD5B,QAAAA,GAAG,CAAC8B,IAAJ,CAASlB,QAAT;AACD,OArDM,CAAP;AAsDD;AA3JH;AAAA;AAAA,WA6JE,sBAAaxB,EAAb,EAAyB;AACvB,aAAO,KAAK2C,IAAL,yCAA2C3C,EAA3C,eAAP;AACD,KA/JH,CAiKE;AACA;AACA;AACA;AACA;AACA;;AAtKF;AAAA;AAAA,WAuKE,2BAAkBA,EAAlB,EAA4C;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC1C,aAAO,KAAKH,GAAL,yCAA0CE,EAA1C,GAAgDC,OAAhD,CAAP;AACD;AAzKH;;AAAA;AAAA,EAAkCP,UAAlC;AA4KA,OAAO,IAAMkD,YAAY,GAAG,IAAIhD,YAAJ,EAArB","sourcesContent":["import { IResponse, IPerformerVideoPayload } from 'src/interfaces';\nimport { TOKEN } from 'src/services/api-request';\nimport { omit } from 'lodash';\nimport { isUrl } from '@lib/string';\nimport cookie from 'js-cookie';\nimport { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\n\nexport class VideoService extends APIRequest {\n  search(params?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/user/performer-assets/videos/search', params)\n    );\n  }\n\n  purchased(params?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/purchased-items/user/videos', params)\n    );\n  }\n\n  details(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/performer/performer-assets/videos/${id}/view`, headers);\n  }\n\n  myVideos(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/performer/performer-assets/videos/search', query)\n    );\n  }\n\n  removeMyVideo(id: string) {\n    return this.del(`/performer/performer-assets/videos/${id}`);\n  }\n\n  create(\n    url: string,\n    data: IPerformerVideoPayload,\n    options: { onProgress: Function } = {\n      onProgress() {}\n    }\n  ): Promise<IResponse<any>> {\n    const config = getGlobalConfig();\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100\n          });\n        }\n      });\n\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      // formData.append('file', file, file.name);\n      if (data.video) {\n        const video = data.video.file.originFileObj;\n        formData.append('video', video, video.name);\n      }\n\n      if (data.trailer) {\n        const trailer = data.trailer.file.originFileObj;\n        formData.append('trailer', trailer, trailer.name);\n      }\n\n      if (data.thumbnail) {\n        const thumbnail = data.thumbnail.file.originFileObj;\n        formData.append('thumbnail', thumbnail, thumbnail.name);\n      }\n\n      Object.keys(omit(data, ['video', 'thumbnail', 'trailer'])).forEach(\n        (v) => {\n          formData.append(v, data[v]);\n        }\n      );\n\n      req.responseType = 'json';\n      req.open('POST', isUrl(url) ? url : `${config.NEXT_PUBLIC_API_ENDPOINT}${url}`);\n\n      const token: any = cookie.get(TOKEN);\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n      req.send(formData);\n    });\n  }\n\n  update(\n    url: string,\n    data: IPerformerVideoPayload,\n    options: { onProgress: Function } = {\n      onProgress() {}\n    }\n  ): Promise<IResponse<any>> {\n    const config = getGlobalConfig();\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100\n          });\n        }\n      });\n\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      // formData.append('file', file, file.name);\n      if (data.video && data.video.file) {\n        const video = data.video.file.originFileObj;\n        formData.append('video', video, video.name);\n      }\n\n      if (data.trailer && data.trailer.file) {\n        const trailer = data.trailer.file.originFileObj;\n        formData.append('trailer', trailer, trailer.name);\n      }\n\n      if (data.thumbnail && data.thumbnail.file) {\n        const thumbnail = data.thumbnail.file.originFileObj;\n        formData.append('thumbnail', thumbnail, thumbnail.name);\n      }\n\n      Object.keys(omit(data, ['video', 'thumbnail', 'trailer'])).forEach((v) => {\n        formData.append(v, data[v]);\n      });\n\n      req.responseType = 'json';\n      req.open('PUT', isUrl(url) ? url : `${config.NEXT_PUBLIC_API_ENDPOINT}${url}`);\n\n      const token: any = cookie.get(TOKEN);\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n      req.send(formData);\n    });\n  }\n\n  increaseView(id: string) {\n    return this.post(`/user/performer-assets/videos/${id}/inc-view`);\n  }\n\n  // update(videoId, performerId, data) {\n  //   return this.put(`/performer/performer-assets/videos/${videoId}`, {\n  //     ...data,\n  //     performerId\n  //   });\n  // }\n  userFindVideoById(id: string, headers = {}) {\n    return this.get(`/user/performer-assets/videos/${id}`, headers);\n  }\n}\n\nexport const videoService = new VideoService();\n"]},"metadata":{},"sourceType":"module"}