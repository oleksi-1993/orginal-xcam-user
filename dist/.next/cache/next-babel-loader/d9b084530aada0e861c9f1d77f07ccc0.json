{"ast":null,"code":"import { getGlobalConfig } from '@services/config';\nimport { message } from 'antd';\nexport function beforeAvatarUpload(file) {\n  const ext = file.name.split('.').pop().toLowerCase();\n  const config = getGlobalConfig();\n  const isImageAccept = config.NEXT_PUBLIC_IMAGE_ACCPET.split(',').map(item => item.trim()).indexOf(`.${ext}`);\n\n  if (isImageAccept === -1) {\n    message.error(`You can only upload ${config.NEXT_PUBLIC_IMAGE_ACCPET} file!`);\n    return false;\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_AVATAR || 2);\n\n  if (!isLt2M) {\n    message.error(`Image must smaller than ${config.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_AVATAR || 2}MB!`);\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["E:/programData/React/user/src/lib/file.ts"],"names":["getGlobalConfig","message","beforeAvatarUpload","file","ext","name","split","pop","toLowerCase","config","isImageAccept","NEXT_PUBLIC_IMAGE_ACCPET","map","item","trim","indexOf","error","isLt2M","size","NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_AVATAR"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,MAAxB;AAGA,OAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAAmD;AACxD,QAAMC,GAAG,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,GAA2BC,WAA3B,EAAZ;AACA,QAAMC,MAAM,GAAGT,eAAe,EAA9B;AACA,QAAMU,aAAa,GAAGD,MAAM,CAACE,wBAAP,CACnBL,KADmB,CACb,GADa,EAEnBM,GAFmB,CAEdC,IAAD,IAAkBA,IAAI,CAACC,IAAL,EAFH,EAGnBC,OAHmB,CAGV,IAAGX,GAAI,EAHG,CAAtB;;AAIA,MAAIM,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBT,IAAAA,OAAO,CAACe,KAAR,CAAe,uBAAsBP,MAAM,CAACE,wBAAyB,QAArE;AACA,WAAO,KAAP;AACD;;AAED,QAAMM,MAAM,GAAGd,IAAI,CAACe,IAAL,GAAY,IAAZ,GAAmB,IAAnB,IAA2BT,MAAM,CAACU,sCAAP,IAAiD,CAA5E,CAAf;;AACA,MAAI,CAACF,MAAL,EAAa;AACXhB,IAAAA,OAAO,CAACe,KAAR,CACG,2BAA0BP,MAAM,CAACU,sCAAP,IAAiD,CAAE,KADhF;AAGA,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["import { getGlobalConfig } from '@services/config';\nimport { message } from 'antd';\nimport { RcFile } from 'antd/lib/upload';\n\nexport function beforeAvatarUpload(file: RcFile): boolean {\n  const ext = file.name.split('.').pop().toLowerCase();\n  const config = getGlobalConfig();\n  const isImageAccept = config.NEXT_PUBLIC_IMAGE_ACCPET\n    .split(',')\n    .map((item: string) => item.trim())\n    .indexOf(`.${ext}`);\n  if (isImageAccept === -1) {\n    message.error(`You can only upload ${config.NEXT_PUBLIC_IMAGE_ACCPET} file!`);\n    return false;\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_AVATAR || 2);\n  if (!isLt2M) {\n    message.error(\n      `Image must smaller than ${config.NEXT_PUBLIC_MAXIMUM_SIZE_UPLOAD_AVATAR || 2}MB!`\n    );\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}