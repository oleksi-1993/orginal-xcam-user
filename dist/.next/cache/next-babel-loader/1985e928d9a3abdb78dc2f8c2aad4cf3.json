{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\messages\\\\Compose.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage, sentFileSuccess } from '@redux/message/actions';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Input } from 'antd'; // import { ImageMessageUpload } from '@components/messages/uploadPhoto';\n// import { authService } from '@services/index';\n\nimport Emotions from './emotions';\nimport '../stream-chat/Compose.less';\n\nvar Compose = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Compose, _PureComponent);\n\n  var _super = _createSuper(Compose);\n\n  function Compose(props) {\n    var _this;\n\n    _classCallCheck(this, Compose);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_input\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (evt) {\n      if (evt.keyCode === 13) {\n        _this.send();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (evt) {\n      _this.setState({\n        text: evt.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEmojiClick\", function (emojiObject) {\n      var text = _this.state.text;\n\n      _this.setMessage(text + emojiObject.emoji);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPhotoUploaded\", function (data) {\n      var handleSendFile = _this.props.sentFileSuccess;\n\n      if (!data || !data.response) {\n        return;\n      }\n\n      var imageUrl = data.response.data && data.response.data.imageUrl || data.base64;\n      handleSendFile(_objectSpread(_objectSpread({}, data.response.data), {\n        imageUrl: imageUrl\n      }));\n    });\n\n    _this.uploadRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Compose, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.uploadRef) this.uploadRef = /*#__PURE__*/React.createRef();\n      if (!this._input) this._input = /*#__PURE__*/React.createRef();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(previousProps) {\n      var sendMessageStatus = this.props.sendMessageStatus;\n\n      if (sendMessageStatus.success !== previousProps.sendMessageStatus.success) {\n        this.setMessage('');\n        this._input && this._input.focus();\n      }\n    }\n  }, {\n    key: \"setMessage\",\n    value: function setMessage(msg) {\n      this.setState({\n        text: msg\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      var text = this.state.text;\n      if (!text) return;\n      var _this$props = this.props,\n          conversation = _this$props.conversation,\n          handleSend = _this$props.sendMessage;\n      handleSend({\n        conversationId: conversation._id,\n        data: {\n          text: text\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var text = this.state.text;\n      var _this$props2 = this.props,\n          status = _this$props2.sendMessageStatus,\n          conversation = _this$props2.conversation; // const uploadHeaders = {\n      //   authorization: authService.getToken()\n      // };\n\n      if (!this.uploadRef) this.uploadRef = /*#__PURE__*/React.createRef();\n      if (!this._input) this._input = /*#__PURE__*/React.createRef();\n      return __jsx(\"div\", {\n        className: \"compose\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, __jsx(Input, {\n        value: text,\n        className: \"compose-input\",\n        placeholder: \"Type a message\",\n        onKeyDown: this.onKeyDown,\n        onChange: this.onChange,\n        disabled: status.sending || !conversation._id,\n        ref: function ref(c) {\n          return _this2._input = c;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"grp-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, __jsx(SendOutlined, {\n        onClick: this.send.bind(this),\n        disabled: status.sending,\n        style: {\n          fontSize: '25px',\n          marginRight: '10px',\n          color: '#fe26b3'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"grp-emotions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: \"/emotion-ico.png\",\n        width: \"25px\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }), __jsx(Emotions, {\n        onEmojiClick: this.onEmojiClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Compose;\n}(PureComponent);\n\nvar mapStates = function mapStates(state) {\n  return {\n    sendMessageStatus: state.message.sendMessage,\n    currentUser: state.user.current\n  };\n};\n\nvar mapDispatch = {\n  sendMessage: sendMessage,\n  sentFileSuccess: sentFileSuccess\n};\nexport default connect(mapStates, mapDispatch)(Compose);","map":{"version":3,"sources":["E:/programData/React/user/src/components/messages/Compose.tsx"],"names":["React","PureComponent","connect","sendMessage","sentFileSuccess","SendOutlined","Input","Emotions","Compose","props","text","evt","keyCode","send","setState","target","value","emojiObject","state","setMessage","emoji","data","handleSendFile","response","imageUrl","base64","uploadRef","createRef","_input","previousProps","sendMessageStatus","success","focus","msg","conversation","handleSend","conversationId","_id","status","onKeyDown","onChange","sending","c","bind","fontSize","marginRight","color","onEmojiClick","mapStates","message","currentUser","user","current","mapDispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage, sentFileSuccess } from '@redux/message/actions';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\n// import { ImageMessageUpload } from '@components/messages/uploadPhoto';\n// import { authService } from '@services/index';\nimport Emotions from './emotions';\nimport '../stream-chat/Compose.less';\n\ninterface IProps {\n  sendMessage: Function;\n  sentFileSuccess: Function;\n  sendMessageStatus: any;\n  conversation: any;\n  currentUser: any\n}\n\nclass Compose extends PureComponent<IProps> {\n  uploadRef: any;\n\n  _input: any;\n\n  constructor(props) {\n    super(props);\n    this.uploadRef = React.createRef();\n  }\n\n  state = { text: '' };\n\n  componentDidMount() {\n    if (!this.uploadRef) this.uploadRef = React.createRef();\n    if (!this._input) this._input = React.createRef();\n  }\n\n  componentDidUpdate(previousProps: IProps) {\n    const { sendMessageStatus } = this.props;\n    if (sendMessageStatus.success !== previousProps.sendMessageStatus.success) {\n      this.setMessage('');\n      this._input && this._input.focus();\n    }\n  }\n\n  setMessage(msg: string) {\n    this.setState({ text: msg });\n  }\n\n  onKeyDown = (evt) => {\n    if (evt.keyCode === 13) {\n      this.send();\n    }\n  };\n\n  onChange = (evt) => {\n    this.setState({ text: evt.target.value });\n  };\n\n  onEmojiClick = (emojiObject) => {\n    const { text } = this.state;\n    this.setMessage(text + emojiObject.emoji);\n  }\n\n  onPhotoUploaded = (data: any) => {\n    const { sentFileSuccess: handleSendFile } = this.props;\n    if (!data || !data.response) {\n      return;\n    }\n    const imageUrl = (data.response.data && data.response.data.imageUrl) || data.base64;\n    handleSendFile({ ...data.response.data, ...{ imageUrl } });\n  }\n\n  send() {\n    const { text } = this.state;\n    if (!text) return;\n    const { conversation, sendMessage: handleSend } = this.props;\n    handleSend({\n      conversationId: conversation._id,\n      data: {\n        text\n      }\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n    const { sendMessageStatus: status, conversation } = this.props;\n    // const uploadHeaders = {\n    //   authorization: authService.getToken()\n    // };\n    if (!this.uploadRef) this.uploadRef = React.createRef();\n    if (!this._input) this._input = React.createRef();\n    return (\n      <div className=\"compose\">\n        <Input\n          value={text}\n          className=\"compose-input\"\n          placeholder=\"Type a message\"\n          onKeyDown={this.onKeyDown}\n          onChange={this.onChange}\n          disabled={status.sending || !conversation._id}\n          ref={(c) => this._input = c}\n        />\n        <div className=\"grp-icons\">\n          <SendOutlined onClick={this.send.bind(this)} disabled={status.sending} style={{ fontSize: '25px', marginRight: '10px', color: '#fe26b3' }} />\n          <div className=\"grp-emotions\">\n            <img src=\"/emotion-ico.png\" width=\"25px\" alt=\"\" />\n            <Emotions onEmojiClick={this.onEmojiClick.bind(this)} />\n          </div>\n        </div>\n\n        {/* <div className=\"grp-icons\">\n          <div className=\"grp-file-icon\">\n            <ImageMessageUpload\n              headers={uploadHeaders}\n              uploadUrl={messageService.getMessageUploadUrl()}\n              onUploaded={this.onPhotoUploaded}\n              options={{ fieldName: 'message-photo' }}\n              messageData={{\n                text: 'sent a photo',\n                conversationId: conversation && conversation._id,\n                recipientId: conversation && conversation.recipientInfo && conversation.recipientInfo._id,\n                recipientType: currentUser && currentUser._id ? 'performer' : 'user'\n              }}\n            />\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nconst mapStates = (state: any) => ({\n  sendMessageStatus: state.message.sendMessage,\n  currentUser: state.user.current\n});\n\nconst mapDispatch = { sendMessage, sentFileSuccess };\nexport default connect(mapStates, mapDispatch)(Compose);\n"]},"metadata":{},"sourceType":"module"}