{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { gettingPerformerProduct, getPerformerProductsSuccess, getPerformerProductsFail, loadMorePerformerProduct, purchaseProductSuccess } from './actions';\nvar initialProductState = {\n  data: {},\n  total: 0,\n  error: null,\n  searching: false,\n  success: false,\n  ids: []\n};\nvar productReducers = [{\n  on: gettingPerformerProduct,\n  reducer: function reducer() {\n    return _objectSpread(_objectSpread({}, initialProductState), {}, {\n      searching: true\n    });\n  }\n}, {\n  on: getPerformerProductsSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      data: action.payload.data,\n      total: action.payload.total,\n      ids: action.payload.ids,\n      error: null,\n      searching: false,\n      success: true\n    });\n  }\n}, {\n  on: getPerformerProductsFail,\n  reducer: function reducer(_, action) {\n    return {\n      data: null,\n      error: action.payload.data,\n      searching: false,\n      success: false\n    };\n  }\n}, {\n  on: loadMorePerformerProduct,\n  reducer: function reducer(state, action) {\n    var ids = state.ids,\n        data = state.data;\n    var products = action.payload;\n    products.forEach(function (p) {\n      data[p._id] = p;\n      ids.push(p._id);\n    });\n    return _objectSpread({}, state);\n  }\n}, {\n  on: purchaseProductSuccess,\n  reducer: function reducer(state, action) {\n    var data = state.data;\n    data[action.payload].isBought = true;\n    return _objectSpread({}, state);\n  }\n}];\nexport default merge({}, createReducers('product', [productReducers], initialProductState));","map":{"version":3,"sources":["E:/programData/React/user/src/redux/products/reducers.ts"],"names":["merge","createReducers","gettingPerformerProduct","getPerformerProductsSuccess","getPerformerProductsFail","loadMorePerformerProduct","purchaseProductSuccess","initialProductState","data","total","error","searching","success","ids","productReducers","on","reducer","state","action","payload","_","products","forEach","p","_id","push","isBought"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AAEA,SAASC,cAAT,QAA+B,YAA/B;AACA,SACEC,uBADF,EAEEC,2BAFF,EAGEC,wBAHF,EAIEC,wBAJF,EAKEC,sBALF,QAMO,WANP;AAQA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,KAAK,EAAE,CAFmB;AAG1BC,EAAAA,KAAK,EAAE,IAHmB;AAI1BC,EAAAA,SAAS,EAAE,KAJe;AAK1BC,EAAAA,OAAO,EAAE,KALiB;AAM1BC,EAAAA,GAAG,EAAE;AANqB,CAA5B;AASA,IAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAEb,uBADN;AAEEc,EAAAA,OAFF,qBAEY;AACR,2CACKT,mBADL;AAEEI,MAAAA,SAAS,EAAE;AAFb;AAID;AAPH,CADsB,EAUtB;AACEI,EAAAA,EAAE,EAAEZ,2BADN;AAEEa,EAAAA,OAFF,mBAEUC,KAFV,EAEiBC,MAFjB,EAE4C;AACxC,2CACKD,KADL;AAEET,MAAAA,IAAI,EAAEU,MAAM,CAACC,OAAP,CAAeX,IAFvB;AAGEC,MAAAA,KAAK,EAAES,MAAM,CAACC,OAAP,CAAeV,KAHxB;AAIEI,MAAAA,GAAG,EAAEK,MAAM,CAACC,OAAP,CAAeN,GAJtB;AAKEH,MAAAA,KAAK,EAAE,IALT;AAMEC,MAAAA,SAAS,EAAE,KANb;AAOEC,MAAAA,OAAO,EAAE;AAPX;AASD;AAZH,CAVsB,EAwBtB;AACEG,EAAAA,EAAE,EAAEX,wBADN;AAEEY,EAAAA,OAFF,mBAEUI,CAFV,EAEaF,MAFb,EAEuD;AACnD,WAAO;AACLV,MAAAA,IAAI,EAAE,IADD;AAELE,MAAAA,KAAK,EAAEQ,MAAM,CAACC,OAAP,CAAeX,IAFjB;AAGLG,MAAAA,SAAS,EAAE,KAHN;AAILC,MAAAA,OAAO,EAAE;AAJJ,KAAP;AAMD;AATH,CAxBsB,EAmCtB;AACEG,EAAAA,EAAE,EAAEV,wBADN;AAEEW,EAAAA,OAFF,mBAEUC,KAFV,EAEiBC,MAFjB,EAEmD;AAC/C,QAAQL,GAAR,GAAsBI,KAAtB,CAAQJ,GAAR;AAAA,QAAaL,IAAb,GAAsBS,KAAtB,CAAaT,IAAb;AACA,QAAMa,QAAQ,GAAGH,MAAM,CAACC,OAAxB;AACAE,IAAAA,QAAQ,CAACC,OAAT,CAAiB,UAACC,CAAD,EAAO;AACtBf,MAAAA,IAAI,CAACe,CAAC,CAACC,GAAH,CAAJ,GAAcD,CAAd;AACAV,MAAAA,GAAG,CAACY,IAAJ,CAASF,CAAC,CAACC,GAAX;AACD,KAHD;AAIA,6BACKP,KADL;AAGD;AAZH,CAnCsB,EAiDtB;AACEF,EAAAA,EAAE,EAAET,sBADN;AAEEU,EAAAA,OAFF,mBAEUC,KAFV,EAEiBC,MAFjB,EAE+C;AAC3C,QAAQV,IAAR,GAAiBS,KAAjB,CAAQT,IAAR;AACAA,IAAAA,IAAI,CAACU,MAAM,CAACC,OAAR,CAAJ,CAAqBO,QAArB,GAAgC,IAAhC;AACA,6BAAYT,KAAZ;AACD;AANH,CAjDsB,CAAxB;AA2DA,eAAejB,KAAK,CAClB,EADkB,EAElBC,cAAc,CAAC,SAAD,EAAY,CAACa,eAAD,CAAZ,EAA+BP,mBAA/B,CAFI,CAApB","sourcesContent":["import { merge } from 'lodash';\nimport { IProduct, IReduxAction, IDataResponse } from 'src/interfaces';\nimport { createReducers } from '@lib/redux';\nimport {\n  gettingPerformerProduct,\n  getPerformerProductsSuccess,\n  getPerformerProductsFail,\n  loadMorePerformerProduct,\n  purchaseProductSuccess\n} from './actions';\n\nconst initialProductState = {\n  data: {},\n  total: 0,\n  error: null,\n  searching: false,\n  success: false,\n  ids: []\n};\n\nconst productReducers = [\n  {\n    on: gettingPerformerProduct,\n    reducer() {\n      return {\n        ...initialProductState,\n        searching: true\n      };\n    }\n  },\n  {\n    on: getPerformerProductsSuccess,\n    reducer(state, action: IReduxAction<any>) {\n      return {\n        ...state,\n        data: action.payload.data,\n        total: action.payload.total,\n        ids: action.payload.ids,\n        error: null,\n        searching: false,\n        success: true\n      };\n    }\n  },\n  {\n    on: getPerformerProductsFail,\n    reducer(_, action: IReduxAction<IDataResponse<any>>) {\n      return {\n        data: null,\n        error: action.payload.data,\n        searching: false,\n        success: false\n      };\n    }\n  },\n  {\n    on: loadMorePerformerProduct,\n    reducer(state, action: IReduxAction<IProduct[]>) {\n      const { ids, data } = state;\n      const products = action.payload;\n      products.forEach((p) => {\n        data[p._id] = p;\n        ids.push(p._id);\n      });\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: purchaseProductSuccess,\n    reducer(state, action: IReduxAction<string>) {\n      const { data } = state;\n      data[action.payload].isBought = true;\n      return { ...state };\n    }\n  }\n];\n\nexport default merge(\n  {},\n  createReducers('product', [productReducers], initialProductState)\n);\n"]},"metadata":{},"sourceType":"module"}