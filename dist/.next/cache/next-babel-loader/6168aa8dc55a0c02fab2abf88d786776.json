{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var UtilsService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(UtilsService, _APIRequest);\n\n  var _super = _createSuper(UtilsService);\n\n  function UtilsService() {\n    _classCallCheck(this, UtilsService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UtilsService, [{\n    key: \"countriesList\",\n    value: function countriesList() {\n      return this.get('/countries/list');\n    }\n  }, {\n    key: \"languagesList\",\n    value: function languagesList() {\n      return this.get('/languages/list');\n    }\n  }, {\n    key: \"phoneCodesList\",\n    value: function phoneCodesList() {\n      return this.get('/phone-codes/list');\n    }\n  }, {\n    key: \"statistics\",\n    value: function statistics() {\n      return this.get('/statistics/admin');\n    }\n  }, {\n    key: \"verifyRecaptcha\",\n    value: function verifyRecaptcha(token) {\n      return this.post('/re-captcha/verify', {\n        token: token\n      });\n    }\n  }]);\n\n  return UtilsService;\n}(APIRequest);\nexport var utilsService = new UtilsService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/utils.service.ts"],"names":["APIRequest","UtilsService","get","token","post","utilsService"],"mappings":";;;;;;;;;;AACA,SAASA,UAAT,QAAsC,eAAtC;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,yBAA8C;AAC5C,aAAO,KAAKC,GAAL,CAAS,iBAAT,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,yBAAgD;AAC9C,aAAO,KAAKA,GAAL,CAAS,iBAAT,CAAP;AACD;AAPH;AAAA;AAAA,WASE,0BAAkD;AAChD,aAAO,KAAKA,GAAL,CAAS,mBAAT,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,sBAAsC;AACpC,aAAO,KAAKA,GAAL,CAAS,mBAAT,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,yBAAgBC,KAAhB,EAA+B;AAC7B,aAAO,KAAKC,IAAL,CAAU,oBAAV,EAAgC;AAAED,QAAAA,KAAK,EAALA;AAAF,OAAhC,CAAP;AACD;AAnBH;;AAAA;AAAA,EAAkCH,UAAlC;AAsBA,OAAO,IAAMK,YAAY,GAAG,IAAIJ,YAAJ,EAArB","sourcesContent":["import { ICountry, ILangguges, IPhoneCodes } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\n\nexport class UtilsService extends APIRequest {\n  countriesList(): Promise<IResponse<ICountry>> {\n    return this.get('/countries/list');\n  }\n\n  languagesList(): Promise<IResponse<ILangguges>> {\n    return this.get('/languages/list');\n  }\n\n  phoneCodesList(): Promise<IResponse<IPhoneCodes>> {\n    return this.get('/phone-codes/list');\n  }\n\n  statistics(): Promise<IResponse<any>> {\n    return this.get('/statistics/admin');\n  }\n\n  verifyRecaptcha(token: string) {\n    return this.post('/re-captcha/verify', { token });\n  }\n}\n\nexport const utilsService = new UtilsService();\n"]},"metadata":{},"sourceType":"module"}