{"ast":null,"code":"/* eslint-disable func-names */\n\n/* eslint-disable no-param-reassign */\nimport { reduce, isArray, isEmpty, flatten } from 'lodash';\nimport { createSelector } from 'reselect';\nimport { takeLatest, delay } from 'redux-saga/effects';\nimport { createAction as ReduxCreateAction, handleActions as handleReduxActions } from 'redux-actions';\n\nfunction createAction(type) {\n  const action = ReduxCreateAction(type);\n\n  action.is = aType => action.toString() === aType;\n\n  return action;\n}\n/* tslint:disable-next-line */\n\n\nfunction createAsyncAction(action, type) {\n  return {\n    [action]: createAction(type),\n    [`${action}Success`]: createAction(`${type}_SUCCESS`),\n    [`${action}Fail`]: createAction(`${type}_FAIL`)\n  };\n}\n\nfunction createAsyncActions(type) {\n  return [createAction(type), createAction(`${type}_SUCCESS`), createAction(`${type}_FAIL`)];\n}\n/* tslint:disable */\n\n\nfunction handleActions(actions, initialState) {\n  return handleReduxActions(reduce(actions, (reducer, handler, action) => {\n    reducer[action] = (state, act) => handler(state.set('action', action), act);\n\n    return reducer;\n  }, {}), initialState);\n}\n\nfunction createReducers(stateContext, reducers, initialState, preventResetting = false) {\n  return {\n    [stateContext]: handleReduxActions(reduce(flatten(reducers), (reducer, action) => {\n      if (isArray(action.on)) {\n        action.on.forEach(act => {\n          reducer[act] = action.reducer;\n        });\n      } else reducer[action.on] = action.reducer;\n\n      return reducer;\n    }, preventResetting ? {} : {\n      APP_STATE_RESET: () => initialState\n    }), initialState)\n  };\n}\n\nexport function createSagas(sagas) {\n  return flatten(sagas).map(saga => {\n    const {\n      on,\n      effect = takeLatest,\n      worker\n    } = saga;\n    return function* () {\n      yield effect(on, function* (action) {\n        yield delay(0);\n        yield worker(action);\n      });\n    };\n  });\n}\n\nfunction createSelectorsA(context, keys = []) {\n  const stateSelector = state => state[context];\n\n  if (isEmpty(keys)) return stateSelector;\n  return keys.map(key => state => isArray(key) ? stateSelector(state).getIn(key) : stateSelector(state).get(key));\n}\n\nfunction createSelectors(context, keys) {\n  const stateSelector = state => state[context];\n\n  return reduce(keys, (selectors, key) => {\n    selectors[`${key}Selector`] = state => stateSelector(state).get(key);\n\n    return selectors;\n  }, {});\n}\n\nfunction createJSSelectors(context, keys) {\n  const stateSelector = state => state[context];\n\n  return reduce(keys, (selectors, key) => {\n    selectors[`${key}Selector`] = state => stateSelector(state)[key];\n\n    return selectors;\n  }, {});\n}\n\nexport { createAction, createAsyncAction, createAsyncActions, createSelectorsA, handleActions, createReducers, createSelectors, createSelector, createJSSelectors };","map":{"version":3,"sources":["E:/programData/React/user/src/lib/redux.ts"],"names":["reduce","isArray","isEmpty","flatten","createSelector","takeLatest","delay","createAction","ReduxCreateAction","handleActions","handleReduxActions","type","action","is","aType","toString","createAsyncAction","createAsyncActions","actions","initialState","reducer","handler","state","act","set","createReducers","stateContext","reducers","preventResetting","on","forEach","APP_STATE_RESET","createSagas","sagas","map","saga","effect","worker","createSelectorsA","context","keys","stateSelector","key","getIn","get","createSelectors","selectors","createJSSelectors"],"mappings":"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","sourcesContent":["/* eslint-disable func-names */\n/* eslint-disable no-param-reassign */\nimport {\n  reduce, isArray, isEmpty, flatten\n} from 'lodash';\nimport { createSelector } from 'reselect';\nimport { takeLatest, delay } from 'redux-saga/effects';\nimport {\n  createAction as ReduxCreateAction,\n  handleActions as handleReduxActions,\n  Action\n} from 'redux-actions';\n\nexport type ActionFunction1<T1, R> = (t1?: T1) => R;\n\nexport interface ActionFunction<Payload>\n  extends ActionFunction1<Payload, Action<Payload>> {\n  is: (type: string) => boolean;\n}\n\nfunction createAction<Payload = any>(type: string): ActionFunction<Payload> {\n  const action = ReduxCreateAction<Payload>(type) as ActionFunction<Payload>;\n  action.is = (aType: string) => action.toString() === aType;\n  return action;\n}\n\n/* tslint:disable-next-line */\nfunction createAsyncAction(action: string, type: string): any {\n  return {\n    [action]: createAction(type),\n    [`${action}Success`]: createAction(`${type}_SUCCESS`),\n    [`${action}Fail`]: createAction(`${type}_FAIL`)\n  };\n}\n\nfunction createAsyncActions<\n  ActionData = any,\n  SuccessData = any,\n  ErrorData = Error\n>(\n  type: string\n): [\n  ActionFunction<ActionData>,\n  ActionFunction<SuccessData>,\n  ActionFunction<ErrorData>\n] {\n  return [\n    createAction<ActionData>(type),\n    createAction<SuccessData>(`${type}_SUCCESS`),\n    createAction<ErrorData>(`${type}_FAIL`)\n  ];\n}\n\n/* tslint:disable */\nfunction handleActions(actions: any, initialState: any) {\n  return handleReduxActions(\n    reduce(\n      actions,\n      (reducer: any, handler, action) => {\n        reducer[action] = (state: any, act: any) => handler(state.set('action', action), act);\n        return reducer;\n      },\n      {}\n    ),\n    initialState\n  );\n}\n\nfunction createReducers(\n  stateContext: string,\n  reducers: any[],\n  initialState: any,\n  preventResetting: boolean = false\n): any {\n  return {\n    [stateContext]: handleReduxActions(\n      reduce(\n        flatten(reducers),\n        (reducer: any, action: any) => {\n          if (isArray(action.on)) {\n            action.on.forEach((act: any) => {\n              reducer[act] = action.reducer;\n            });\n          } else reducer[action.on] = action.reducer;\n          return reducer;\n        },\n        preventResetting\n          ? {}\n          : {\n            APP_STATE_RESET: () => initialState\n          }\n      ),\n      initialState\n    )\n  };\n}\n\nexport function createSagas(sagas: any[]): any[] {\n  return flatten(sagas).map((saga: any) => {\n    const { on, effect = takeLatest, worker } = saga;\n    return function* () {\n      yield effect(on, function* (action: any) {\n        yield delay(0);\n        yield worker(action);\n      });\n    };\n  });\n}\n\nfunction createSelectorsA(context: string, keys: any[] = []): any {\n  const stateSelector = (state: any) => state[context];\n\n  if (isEmpty(keys)) return stateSelector;\n\n  return keys.map((key: any) => (state: any) => (isArray(key)\n    ? stateSelector(state).getIn(key)\n    : stateSelector(state).get(key)));\n}\n\nfunction createSelectors(context: string, keys: string[]): any {\n  const stateSelector = (state: any) => state[context];\n\n  return reduce(\n    keys,\n    (selectors: any, key) => {\n      selectors[`${key}Selector`] = (state: any) => stateSelector(state).get(key);\n      return selectors;\n    },\n    {}\n  );\n}\n\nfunction createJSSelectors(context: string, keys: string[]): any {\n  const stateSelector = (state: any) => state[context];\n\n  return reduce(\n    keys,\n    (selectors: any, key) => {\n      selectors[`${key}Selector`] = (state: any) => stateSelector(state)[key];\n      return selectors;\n    },\n    {}\n  );\n}\n\nexport {\n  createAction,\n  createAsyncAction,\n  createAsyncActions,\n  createSelectorsA,\n  handleActions,\n  createReducers,\n  createSelectors,\n  createSelector,\n  createJSSelectors\n};\n"]},"metadata":{},"sourceType":"module"}