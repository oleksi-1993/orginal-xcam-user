{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\messages\\\\Messenger.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport '../stream-chat/Messenger.less';\nimport { connect } from 'react-redux';\nimport { deactiveConversation } from '@redux/message/actions';\nimport { Button } from 'antd';\nimport ConversationList from './ConversationList';\nimport MessageList from './MessageList';\n\nvar Messenger = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Messenger, _PureComponent);\n\n  var _super = _createSuper(Messenger);\n\n  function Messenger() {\n    _classCallCheck(this, Messenger);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Messenger, [{\n    key: \"onClose\",\n    value: function onClose() {\n      var dispatchDeactiveConversation = this.props.deactiveConversation;\n      dispatchDeactiveConversation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          toSource = _this$props.toSource,\n          toId = _this$props.toId,\n          activeConversation = _this$props.activeConversation;\n      return __jsx(\"div\", {\n        className: \"messenger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: !activeConversation._id ? 'sidebar' : 'sidebar active',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, __jsx(ConversationList, {\n        toSource: toSource,\n        toId: toId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: !activeConversation._id ? 'chat-content' : 'chat-content active',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        onClick: this.onClose.bind(this),\n        className: \"close-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"close\"), __jsx(MessageList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Messenger;\n}(PureComponent);\n\nvar mapStates = function mapStates(state) {\n  var activeConversation = state.conversation.activeConversation;\n  return {\n    activeConversation: activeConversation\n  };\n};\n\nvar mapDispatch = {\n  deactiveConversation: deactiveConversation\n};\nexport default connect(mapStates, mapDispatch)(Messenger);","map":{"version":3,"sources":["E:/programData/React/user/src/components/messages/Messenger.tsx"],"names":["React","PureComponent","connect","deactiveConversation","Button","ConversationList","MessageList","Messenger","dispatchDeactiveConversation","props","toSource","toId","activeConversation","_id","onClose","bind","mapStates","state","conversation","mapDispatch"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAO,+BAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAQMC,S;;;;;;;;;;;;;WACJ,mBAAU;AACR,UAA8BC,4BAA9B,GAA+D,KAAKC,KAApE,CAAQN,oBAAR;AACAK,MAAAA,4BAA4B;AAC7B;;;WAED,kBAAS;AACP,wBAA+C,KAAKC,KAApD;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,IAAlB,eAAkBA,IAAlB;AAAA,UAAwBC,kBAAxB,eAAwBA,kBAAxB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE,CAACA,kBAAkB,CAACC,GAApB,GAA0B,SAA1B,GAAsC,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEH,QAA5B;AAAsC,QAAA,IAAI,EAAEC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAE,CAACC,kBAAkB,CAACC,GAApB,GAA0B,cAA1B,GAA2C,qBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAjB;AAA0C,QAAA,SAAS,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,CADF;AAWD;;;;EAnBqBd,a;;AAqBxB,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAgB;AAChC,MAAQL,kBAAR,GAA+BK,KAAK,CAACC,YAArC,CAAQN,kBAAR;AACA,SAAO;AACLA,IAAAA,kBAAkB,EAAlBA;AADK,GAAP;AAGD,CALD;;AAOA,IAAMO,WAAW,GAAG;AAAEhB,EAAAA,oBAAoB,EAApBA;AAAF,CAApB;AACA,eAAeD,OAAO,CAACc,SAAD,EAAYG,WAAZ,CAAP,CAAgCZ,SAAhC,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport '../stream-chat/Messenger.less';\nimport { connect } from 'react-redux';\nimport { deactiveConversation } from '@redux/message/actions';\nimport { Button } from 'antd';\nimport ConversationList from './ConversationList';\nimport MessageList from './MessageList';\n\ninterface IProps {\n  toSource?: string;\n  toId?: string;\n  activeConversation?: any;\n  deactiveConversation: Function;\n}\nclass Messenger extends PureComponent<IProps> {\n  onClose() {\n    const { deactiveConversation: dispatchDeactiveConversation } = this.props;\n    dispatchDeactiveConversation();\n  }\n\n  render() {\n    const { toSource, toId, activeConversation } = this.props;\n    return (\n      <div className=\"messenger\">\n        <div className={!activeConversation._id ? 'sidebar' : 'sidebar active'}>\n          <ConversationList toSource={toSource} toId={toId} />\n        </div>\n        <div className={!activeConversation._id ? 'chat-content' : 'chat-content active'}>\n          <Button onClick={this.onClose.bind(this)} className=\"close-btn\">close</Button>\n          <MessageList />\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStates = (state: any) => {\n  const { activeConversation } = state.conversation;\n  return {\n    activeConversation\n  };\n};\n\nconst mapDispatch = { deactiveConversation };\nexport default connect(mapStates, mapDispatch)(Messenger);\n"]},"metadata":{},"sourceType":"module"}