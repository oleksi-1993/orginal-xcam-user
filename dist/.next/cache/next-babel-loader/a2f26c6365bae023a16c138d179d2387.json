{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\user\\\\performer-filter.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Row, Col, Drawer, Button, Menu, Space } from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport classnames from 'classnames';\nimport './performer-filter.less';\n\nconst PerformerFilter = ({\n  countries,\n  categories,\n  setFilter,\n  category,\n  country,\n  gender,\n  clearFilter\n}) => {\n  const [visible, setVisible] = React.useState(false);\n  const [selectedMenuKeys, setSelectedMenuKeys] = React.useState([]);\n  const [lastSelectedMenuKey, setLastSelectedMenuKey] = React.useState();\n\n  const onOpenChange = keys => {\n    const menuKeys = keys.filter(key => key !== lastSelectedMenuKey);\n    setSelectedMenuKeys(menuKeys);\n    setLastSelectedMenuKey(menuKeys[0]);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    align: \"middle\",\n    className: \"performer-filter\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    icon: __jsx(FilterOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }),\n    type: \"primary\",\n    onClick: () => setVisible(true),\n    className: \"mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Filter\"), __jsx(Space, {\n    className: \"ant-space-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Popular Filter:\"), __jsx(Button, {\n    onClick: clearFilter,\n    className: classnames(gender === '' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"All\"), __jsx(Button, {\n    onClick: () => setFilter('gender', gender === 'female' ? '' : 'female'),\n    className: classnames(gender === 'female' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Female\"), __jsx(Button, {\n    onClick: () => setFilter('gender', gender === 'transgender' ? '' : 'transgender'),\n    className: classnames(gender === 'transgender' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Transgender\"), __jsx(Button, {\n    onClick: () => setFilter('gender', gender === 'male' ? '' : 'male'),\n    className: classnames(gender === 'male' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Male\")))), __jsx(Drawer, {\n    visible: visible,\n    placement: \"left\",\n    onClose: () => setVisible(false),\n    title: __jsx(Row, {\n      justify: \"space-between\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Filter by:\"), __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      type: \"link\",\n      onClick: () => clearFilter(),\n      size: \"small\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Clear Filter\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: ({\n      key\n    }) => setFilter('category', key),\n    onDeselect: () => setFilter('category', ''),\n    selectedKeys: [category],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.SubMenu, {\n    title: \"Category\",\n    key: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, categories.length > 0 && categories.map(c => __jsx(Menu.Item, {\n    key: c._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, c.name)))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    onSelect: ({\n      key\n    }) => setFilter('gender', key),\n    onDeselect: () => setFilter('gender', ''),\n    selectedKeys: [gender],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.SubMenu, {\n    title: \"Gender\",\n    key: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(Menu.Item, {\n    key: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Female\"), __jsx(Menu.Item, {\n    key: \"transgender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Transgender\"), __jsx(Menu.Item, {\n    key: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Male\"))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: ({\n      key\n    }) => setFilter('country', key),\n    onDeselect: () => setFilter('country', ''),\n    selectedKeys: [country],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.SubMenu, {\n    title: \"Country\",\n    key: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, countries.length > 0 && countries.map(c => __jsx(Menu.Item, {\n    key: c.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, c.name))))));\n};\n\nPerformerFilter.defaultProps = {\n  countries: [],\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  country: ''\n};\nexport default PerformerFilter;","map":{"version":3,"sources":["E:/programData/React/user/src/components/user/performer-filter.tsx"],"names":["React","Row","Col","Drawer","Button","Menu","Space","FilterOutlined","classnames","PerformerFilter","countries","categories","setFilter","category","country","gender","clearFilter","visible","setVisible","useState","selectedMenuKeys","setSelectedMenuKeys","lastSelectedMenuKey","setLastSelectedMenuKey","onOpenChange","keys","menuKeys","filter","key","fontWeight","marginRight","borderRight","length","map","c","_id","name","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Row, Col, Drawer, Button, Menu, Space\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport { ICountries, IPerformerCategogies } from 'src/interfaces';\nimport classnames from 'classnames';\nimport './performer-filter.less';\n\ninterface IProps {\n  countries?: ICountries[];\n  categories?: IPerformerCategogies[];\n  // offset?: number;\n  // limit?: number;\n  gender?: string;\n  category?: string;\n  country?: string;\n  setFilter: Function;\n  clearFilter: () => void;\n}\n\nconst PerformerFilter = ({\n  countries,\n  categories,\n  setFilter,\n  category,\n  country,\n  gender,\n  clearFilter\n}: IProps) => {\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [selectedMenuKeys, setSelectedMenuKeys] = React.useState<string[]>([]);\n  const [lastSelectedMenuKey, setLastSelectedMenuKey] = React.useState<string>();\n  const onOpenChange = (keys: string[]) => {\n    const menuKeys = keys.filter((key) => key !== lastSelectedMenuKey);\n    setSelectedMenuKeys(menuKeys);\n    setLastSelectedMenuKey(menuKeys[0]);\n  };\n  return (\n    <>\n      <Row align=\"middle\" className=\"performer-filter\" justify=\"space-between\">\n        <Col>\n          <Button\n            icon={<FilterOutlined />}\n            type=\"primary\"\n            onClick={() => setVisible(true)}\n            className=\"mr-8\"\n          >\n            Filter\n          </Button>\n          <Space className=\"ant-space-wrap\">\n            <span style={{ fontWeight: 'bold' }}>Popular Filter:</span>\n            <Button\n              onClick={clearFilter}\n              className={classnames(gender === '' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              All\n            </Button>\n            <Button\n              onClick={() => setFilter('gender', gender === 'female' ? '' : 'female')}\n              className={classnames(gender === 'female' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              Female\n            </Button>\n            <Button\n              onClick={() => setFilter('gender', gender === 'transgender' ? '' : 'transgender')}\n              className={classnames(gender === 'transgender' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              Transgender\n            </Button>\n            <Button\n              onClick={() => setFilter('gender', gender === 'male' ? '' : 'male')}\n              className={classnames(gender === 'male' ? 'active' : '')}\n              type=\"dashed\"\n            >\n              Male\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n      <Drawer\n        visible={visible}\n        placement=\"left\"\n        onClose={() => setVisible(false)}\n        title={(\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col>Filter by:</Col>\n            <Col>\n              <Button\n                type=\"link\"\n                onClick={() => clearFilter()}\n                size=\"small\"\n                style={{ marginRight: 10 }}\n              >\n                Clear Filter\n              </Button>\n            </Col>\n          </Row>\n        )}\n      >\n        {/* Select multiple category */}\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          multiple={false}\n          onSelect={({ key }) => setFilter('category', key)}\n          onDeselect={() => setFilter('category', '')}\n          selectedKeys={[category]}\n          openKeys={selectedMenuKeys}\n          onOpenChange={onOpenChange}\n        >\n          <Menu.SubMenu title=\"Category\" key=\"category\">\n            {categories.length > 0\n              && categories.map((c) => (\n                <Menu.Item key={c._id}>{c.name}</Menu.Item>\n              ))}\n          </Menu.SubMenu>\n        </Menu>\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          onSelect={({ key }) => setFilter('gender', key)}\n          onDeselect={() => setFilter('gender', '')}\n          selectedKeys={[gender]}\n          openKeys={selectedMenuKeys}\n          onOpenChange={onOpenChange}\n        >\n          <Menu.SubMenu title=\"Gender\" key=\"gender\">\n            <Menu.Item key=\"female\">Female</Menu.Item>\n            <Menu.Item key=\"transgender\">Transgender</Menu.Item>\n            <Menu.Item key=\"male\">Male</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n        {/* Select multiple country */}\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          multiple={false}\n          onSelect={({ key }) => setFilter('country', key)}\n          onDeselect={() => setFilter('country', '')}\n          selectedKeys={[country]}\n          openKeys={selectedMenuKeys}\n          onOpenChange={onOpenChange}\n        >\n          <Menu.SubMenu title=\"Country\" key=\"country\">\n            {countries.length > 0\n              && countries.map((c) => (\n                <Menu.Item key={c.name}>{c.name}</Menu.Item>\n              ))}\n          </Menu.SubMenu>\n        </Menu>\n      </Drawer>\n    </>\n  );\n};\nPerformerFilter.defaultProps = {\n  countries: [],\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  country: ''\n};\n\nexport default PerformerFilter;\n"]},"metadata":{},"sourceType":"module"}