{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\common\\\\layout\\\\header.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { SettingOutlined, HeartOutlined, MessageOutlined, UserOutlined, LogoutOutlined, SearchOutlined, CloseOutlined, BellOutlined } from '@ant-design/icons';\nimport { FundsIcon } from '@components/common/base/icons';\nimport { Layout, Menu, Avatar, Input, Button, Dropdown, Badge, Card, message, Tooltip } from 'antd';\nimport { messageService } from 'src/services/index';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\nimport { logout } from '@redux/auth/actions';\nimport { getPerformerCategories, updateCurrentPerformerBalance } from '@redux/performer/actions';\nimport { getCountries } from '@redux/settings/actions';\nimport { SocketContext } from 'src/socket';\nimport { addPrivateRequest } from '@redux/streaming/actions';\nimport { formatDate } from 'src/lib';\nimport { getStudioStats } from 'src/redux/studio/actions';\nimport { countNotReadMessage } from '@redux/message/actions'; // import NumberFormat from '@components/common/layout/numberformat';\n\nimport './header.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport LeftHeaderContent from './left-header-content';\n\nvar roundBalance = function roundBalance(balance) {\n  if (balance < 10000) return Math.round(balance);\n  return '9999+';\n};\n\nvar EVENT = {\n  RECEIVED_PRIVATE_CHAT_REQUEST: 'private-chat-request',\n  NOTIFY_READ_MESSAGE: 'nofify_read_messages_in_conversation',\n  TIPPED: 'tipped'\n};\n\nvar Header = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Header, _PureComponent);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_audio\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMessage\", function (event) {\n      var dispatchCountNotReadMessage = _this.props.countNotReadMessage;\n      event && dispatchCountNotReadMessage(event.total);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePrivateChat\", function (data) {\n      var _this$props = _this.props,\n          dispatchAddPrivateRequest = _this$props.addPrivateRequest,\n          settings = _this$props.settings;\n      var path = settings[SETTING_KEYS.OPTION_FOR_PRIVATE] === 'webrtc' ? 'webrtc/' : '';\n      message.success({\n        content: __jsx(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }\n        }, data.user.username, ' ', \"sent you a private chat request.\"),\n        duration: 10,\n        key: data.conversationId,\n        onClick: function onClick() {\n          Router.push({\n            pathname: \"/live/\".concat(path, \"privatechat\"),\n            query: {\n              id: data.conversationId,\n              streamId: data.id\n            }\n          }, \"/live/\".concat(path, \"privatechat/\").concat(data.conversationId));\n          message.destroy(data.conversationId);\n        }\n      });\n      _this._audio && _this._audio.play();\n      dispatchAddPrivateRequest(_objectSpread(_objectSpread({}, data), {}, {\n        createdAt: new Date()\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendTipHandler\", function (_ref) {\n      var senderInfo = _ref.senderInfo,\n          netPrice = _ref.netPrice,\n          token = _ref.token;\n      var dispatchUpdateCurrentPerformerBalance = _this.props.updateCurrentPerformerBalance;\n      message.success(\"\".concat(senderInfo.username, \" has tipped \").concat(token === null || token === void 0 ? void 0 : token.toFixed(2), \" tokens. You have received \").concat(netPrice === null || netPrice === void 0 ? void 0 : netPrice.toFixed(2)), 10);\n      dispatchUpdateCurrentPerformerBalance(netPrice);\n      _this._audio && _this._audio.play();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initSocketEvent\", function () {\n      _this.socket = _this.context;\n      var currentUser = _this.props.currentUser;\n\n      if (_this.socket.connected) {\n        if (currentUser.role === 'performer') {\n          _this.socket.on(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST, _this.handlePrivateChat);\n\n          _this.socket.on(EVENT.TIPPED, _this.sendTipHandler);\n        }\n\n        _this.socket.on(EVENT.NOTIFY_READ_MESSAGE, _this.handleMessage);\n      } else {\n        _this.socket.on('connect', function () {\n          if (currentUser.role === 'performer') {\n            _this.socket.on(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST, _this.handlePrivateChat);\n\n            _this.socket.on(EVENT.TIPPED, _this.sendTipHandler);\n          }\n\n          _this.socket.on(EVENT.NOTIFY_READ_MESSAGE, _this.handleMessage);\n        });\n      }\n    });\n\n    _this.state = {\n      showSearch: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props2, dispatchGetPerformerCategories, dispatchGetCountries, dispatchGetStudioStats, currentUser, loggedIn, tipSound, dispatchCountNotReadMessage, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, dispatchGetPerformerCategories = _this$props2.getPerformerCategories, dispatchGetCountries = _this$props2.getCountries, dispatchGetStudioStats = _this$props2.getStudioStats, currentUser = _this$props2.currentUser, loggedIn = _this$props2.loggedIn, tipSound = _this$props2.tipSound, dispatchCountNotReadMessage = _this$props2.countNotReadMessage; // this.socket = this.context;\n\n                dispatchGetPerformerCategories({\n                  limit: 0\n                });\n                dispatchGetCountries();\n\n                if (!(currentUser !== null && currentUser !== void 0 && currentUser._id)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 6;\n                return messageService.countTotalNotRead();\n\n              case 6:\n                _context.next = 8;\n                return _context.sent.data;\n\n              case 8:\n                data = _context.sent;\n\n                if (data) {\n                  dispatchCountNotReadMessage(data.total);\n                }\n\n              case 10:\n                if (currentUser !== null && currentUser !== void 0 && currentUser._id && currentUser.role === 'studio') {\n                  dispatchGetStudioStats();\n                }\n\n                if (loggedIn) {\n                  this.initSocketEvent();\n                  this.checkPermissionAccess();\n                }\n\n                this._audio = new Audio(tipSound);\n                this._audio.volume = 0.5;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          loggedIn = _this$props3.loggedIn,\n          unauthorized = _this$props3.router.query.unauthorized;\n\n      if (loggedIn && prevProps.loggedIn !== loggedIn) {\n        setTimeout(this.initSocketEvent, 1000);\n      }\n\n      if (unauthorized !== prevProps.router.query.unauthorized) {\n        this.checkPermissionAccess();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.socket) {\n        this.socket.off(EVENT.NOTIFY_READ_MESSAGE);\n        this.socket.off(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST);\n        this.socket.off(EVENT.TIPPED);\n      }\n    }\n  }, {\n    key: \"onSearchPerformer\",\n    value: function onSearchPerformer(key) {\n      this.search(key);\n    }\n  }, {\n    key: \"onPressEnter\",\n    value: function onPressEnter(event) {\n      var target = event.currentTarget;\n      var key = target.value;\n      this.search(key);\n    }\n  }, {\n    key: \"search\",\n    value: function search(key) {\n      Router.push({\n        pathname: '/',\n        query: {\n          q: key\n        }\n      }, \"/?q=\".concat(key));\n    }\n  }, {\n    key: \"checkPermissionAccess\",\n    value: function () {\n      var _checkPermissionAccess = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this$props4, loggedIn, unauthorized;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props4 = this.props, loggedIn = _this$props4.loggedIn, unauthorized = _this$props4.router.query.unauthorized;\n\n                if (!(!loggedIn || !unauthorized)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.beforeLogout();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function checkPermissionAccess() {\n        return _checkPermissionAccess.apply(this, arguments);\n      }\n\n      return checkPermissionAccess;\n    }()\n  }, {\n    key: \"beforeLogout\",\n    value: function () {\n      var _beforeLogout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var dispatchLogout;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatchLogout = this.props.logout;\n                dispatchLogout();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function beforeLogout() {\n        return _beforeLogout.apply(this, arguments);\n      }\n\n      return beforeLogout;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          ui = _this$props5.ui,\n          loggedIn = _this$props5.loggedIn,\n          privateRequests = _this$props5.privateRequests,\n          currentUser = _this$props5.currentUser,\n          totalNotReadMessage = _this$props5.totalNotReadMessage,\n          settings = _this$props5.settings;\n      var showSearch = this.state.showSearch;\n      var path = settings[SETTING_KEYS.OPTION_FOR_PRIVATE] === 'webrtc' ? 'webrtc/' : '';\n      var rightContent = loggedIn ? __jsx(React.Fragment, null, __jsx(Link, {\n        href: currentUser.role === 'user' ? '/account/user/funds-tokens' : currentUser.role === 'performer' ? '/account/performer/payout-requests' : '#',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, __jsx(Tooltip, {\n        title: \"\".concat(currentUser.balance && currentUser.balance.toFixed(2) || 0, \" Tokens\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        style: {\n          margin: '0px 10px',\n          color: '#ff0066'\n        },\n        className: \"btn-tokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }, \"\".concat(roundBalance((currentUser === null || currentUser === void 0 ? void 0 : currentUser.balance) || 0), \" Tokens\"))))), currentUser.role === 'performer' && __jsx(Dropdown, {\n        overlay: __jsx(Menu, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }\n        }, privateRequests.length > 0 ? privateRequests.map(function (request) {\n          var _request$user, _request$user2, _request$user3;\n\n          return __jsx(Menu.Item, {\n            onClick: function onClick() {\n              return message.destroy(request.conversationId);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }\n          }, __jsx(Link, {\n            href: {\n              pathname: \"/live/\".concat(path, \"privatechat\"),\n              query: {\n                id: request.conversationId,\n                streamId: request.id\n              }\n            },\n            as: \"/live/\".concat(path, \"privatechat/\").concat(request.conversationId, \"?streamId=\").concat(request.id),\n            key: request.conversationId,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 23\n            }\n          }, __jsx(\"a\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 25\n            }\n          }, __jsx(Card, {\n            bordered: false,\n            hoverable: false,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 27\n            }\n          }, __jsx(Card.Meta, {\n            avatar: __jsx(Avatar, {\n              src: ((_request$user = request.user) === null || _request$user === void 0 ? void 0 : _request$user.avatar) || '/default-user-icon.png',\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }\n            }),\n            title: \"\".concat(((_request$user2 = request.user) === null || _request$user2 === void 0 ? void 0 : _request$user2.username) || 'N/A', \" (\").concat(roundBalance(((_request$user3 = request.user) === null || _request$user3 === void 0 ? void 0 : _request$user3.balance) || 0), \" token(s))\"),\n            description: formatDate(request === null || request === void 0 ? void 0 : request.createdAt),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }\n          })))));\n        }) : __jsx(Menu.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 19\n          }\n        }, \"There are no private request.\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"call-requests\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }\n      }, __jsx(Badge, {\n        count: privateRequests.length,\n        showZero: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }\n      }, __jsx(BellOutlined, {\n        style: {\n          color: '#ffffff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      })))), __jsx(Dropdown, {\n        overlay: __jsx(Menu, {\n          key: \"menu-right-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }\n        }, currentUser.role === 'user' && [__jsx(Menu.Item, {\n          key: \"settings-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/user/account-settings');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 19\n          }\n        }, __jsx(SettingOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 21\n          }\n        }), ' ', \"Profile\")), __jsx(Menu.Item, {\n          key: \"favorite-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/user/favorites');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }\n        }, __jsx(HeartOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 21\n          }\n        }), ' ', \"My Favorites\")), __jsx(Menu.Item, {\n          key: \"funds-tokens-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/user/funds-tokens');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 19\n          }\n        }, __jsx(\"span\", {\n          className: \"anticon primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 21\n          }\n        }, __jsx(FundsIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 23\n          }\n        })), ' ', \"Funds / Tokens\")), __jsx(Menu.Item, {\n          key: \"user-messages-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/messages');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 19\n          }\n        }, __jsx(MessageOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 21\n          }\n        }), ' ', \"Messages (\", totalNotReadMessage || 0, \")\"))], currentUser.role === 'performer' && [__jsx(Menu.Item, {\n          key: \"profile-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/performer/profile');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 19\n          }\n        }, __jsx(UserOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 21\n          }\n        }), ' ', \"Profile\")), __jsx(Menu.Item, {\n          key: \"account-settings-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/performer/account-settings');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 19\n          }\n        }, __jsx(SettingOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 21\n          }\n        }), ' ', \"Account Settings\")), __jsx(Menu.Item, {\n          key: \"model-messages-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/messages');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 19\n          }\n        }, __jsx(MessageOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 21\n          }\n        }), ' ', \"Messages (\", totalNotReadMessage, \")\"))], currentUser.role === 'studio' && [__jsx(Menu.Item, {\n          key: \"account-settings-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/studio/account-settings');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 19\n          }\n        }, __jsx(SettingOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 21\n          }\n        }), ' ', \"Account Settings\"))], __jsx(Menu.Item, {\n          key: \"log-out\",\n          onClick: this.beforeLogout.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }\n        }, __jsx(LogoutOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }\n        }), ' ', \"Log out\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }, __jsx(Avatar, {\n        style: {\n          margin: '0 15px',\n          cursor: 'pointer',\n          background: '#ffffff'\n        },\n        src: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.avatar) || '/default-user-icon.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }\n      }))) : __jsx(Button, {\n        className: \"btn-login\",\n        onClick: function onClick() {\n          return Router.push('/auth/login/user', '/auth/login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 7\n        }\n      }, \"Login\");\n      return __jsx(Layout.Header, {\n        className: \"header\",\n        id: \"layoutHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"left-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        className: \"header-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        src: typeof ui.logo === 'string' && ui.logo.length > 0 ? ui.logo : '/xcam-logo-white.png',\n        alt: \"header-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 15\n        }\n      }))), __jsx(\"div\", {\n        className: \"menu-left-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }\n      }, __jsx(LeftHeaderContent, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }\n      })))), __jsx(\"div\", {\n        className: \"right-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: showSearch ? 'search-icon active' : 'search-icon',\n        \"aria-hidden\": true,\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearch: !showSearch\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }\n      }, showSearch ? __jsx(CloseOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 27\n        }\n      }) : __jsx(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 47\n        }\n      })), __jsx(\"div\", {\n        className: !showSearch ? 'hide search-bar' : 'search-bar',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }\n      }, __jsx(Input.Search, {\n        placeholder: \"Enter keyword\",\n        loading: false,\n        allowClear: true,\n        enterButton: true,\n        onPressEnter: this.onPressEnter.bind(this),\n        onSearch: this.onSearchPerformer.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }\n      })), rightContent));\n    }\n  }]);\n\n  return Header;\n}(PureComponent);\n\nHeader.contextType = SocketContext;\n\nvar userSelecter = function userSelecter(state) {\n  return state.user.current;\n};\n\nvar performerSelecter = function performerSelecter(state) {\n  return state.performer.current;\n};\n\nvar studioSelecter = function studioSelecter(state) {\n  return state.studio.current;\n};\n\nvar authSelecter = function authSelecter(state) {\n  return state.auth;\n};\n\nvar currentUserSelecter = createSelector(userSelecter, performerSelecter, studioSelecter, authSelecter, function (user, performer, studio, auth) {\n  if (!auth.loggedIn) return {};\n\n  if (user !== null && user !== void 0 && user._id) {\n    return _objectSpread(_objectSpread({}, user), {}, {\n      role: 'user'\n    });\n  }\n\n  if (performer !== null && performer !== void 0 && performer._id) {\n    return _objectSpread(_objectSpread({}, performer), {}, {\n      role: 'performer'\n    });\n  }\n\n  if (studio !== null && studio !== void 0 && studio._id) {\n    return _objectSpread(_objectSpread({}, studio), {}, {\n      role: 'studio'\n    });\n  }\n\n  return {};\n});\nHeader.contextType = SocketContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({\n    ui: _objectSpread({}, state.ui),\n    currentUser: currentUserSelecter(state),\n    tipSound: state.settings.tipSound,\n    loggedIn: state.auth.loggedIn,\n    performerCategories: state.performer.categories,\n    totalNotReadMessage: state.message.totalNotReadMessage\n  }, state.streaming);\n};\n\nvar mapDispatch = {\n  logout: logout,\n  getPerformerCategories: getPerformerCategories,\n  getCountries: getCountries,\n  addPrivateRequest: addPrivateRequest,\n  getStudioStats: getStudioStats,\n  countNotReadMessage: countNotReadMessage,\n  updateCurrentPerformerBalance: updateCurrentPerformerBalance\n};\nexport default connect(mapStateToProps, mapDispatch)(withRouter(Header));","map":{"version":3,"sources":["E:/programData/React/user/src/components/common/layout/header.tsx"],"names":["React","PureComponent","SettingOutlined","HeartOutlined","MessageOutlined","UserOutlined","LogoutOutlined","SearchOutlined","CloseOutlined","BellOutlined","FundsIcon","Layout","Menu","Avatar","Input","Button","Dropdown","Badge","Card","message","Tooltip","messageService","createSelector","connect","Link","Router","withRouter","logout","getPerformerCategories","updateCurrentPerformerBalance","getCountries","SocketContext","addPrivateRequest","formatDate","getStudioStats","countNotReadMessage","SETTING_KEYS","LeftHeaderContent","roundBalance","balance","Math","round","EVENT","RECEIVED_PRIVATE_CHAT_REQUEST","NOTIFY_READ_MESSAGE","TIPPED","Header","props","event","dispatchCountNotReadMessage","total","data","dispatchAddPrivateRequest","settings","path","OPTION_FOR_PRIVATE","success","content","user","username","duration","key","conversationId","onClick","push","pathname","query","id","streamId","destroy","_audio","play","createdAt","Date","senderInfo","netPrice","token","dispatchUpdateCurrentPerformerBalance","toFixed","socket","context","currentUser","connected","role","on","handlePrivateChat","sendTipHandler","handleMessage","state","showSearch","dispatchGetPerformerCategories","dispatchGetCountries","dispatchGetStudioStats","loggedIn","tipSound","limit","_id","countTotalNotRead","initSocketEvent","checkPermissionAccess","Audio","volume","prevProps","unauthorized","router","setTimeout","off","search","target","currentTarget","value","q","beforeLogout","dispatchLogout","ui","privateRequests","totalNotReadMessage","rightContent","margin","color","length","map","request","avatar","bind","cursor","background","logo","setState","onPressEnter","onSearchPerformer","contextType","userSelecter","current","performerSelecter","performer","studioSelecter","studio","authSelecter","auth","currentUserSelecter","mapStateToProps","performerCategories","categories","streaming","mapDispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport {\n  SettingOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  UserOutlined,\n  LogoutOutlined,\n  SearchOutlined,\n  CloseOutlined,\n  BellOutlined\n} from '@ant-design/icons';\nimport { FundsIcon } from '@components/common/base/icons';\nimport {\n  Layout,\n  Menu,\n  Avatar,\n  Input,\n  Button,\n  Dropdown,\n  Badge,\n  Card,\n  message,\n  Tooltip\n} from 'antd';\nimport { messageService } from 'src/services/index';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Router, { withRouter, NextRouter } from 'next/router';\nimport {\n  IUser,\n  IPerformerCategogies,\n  IDataResponse,\n  IPerformer,\n  IStudio,\n  IUIConfig,\n  StreamSettings\n} from 'src/interfaces';\nimport { logout } from '@redux/auth/actions';\nimport { getPerformerCategories, updateCurrentPerformerBalance } from '@redux/performer/actions';\nimport { getCountries } from '@redux/settings/actions';\nimport { SocketContext } from 'src/socket';\nimport { addPrivateRequest } from '@redux/streaming/actions';\nimport { formatDate } from 'src/lib';\nimport { getStudioStats } from 'src/redux/studio/actions';\nimport { countNotReadMessage } from '@redux/message/actions';\n// import NumberFormat from '@components/common/layout/numberformat';\nimport './header.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport LeftHeaderContent from './left-header-content';\n\nconst roundBalance = (balance: number) => {\n  if (balance < 10000) return Math.round(balance);\n  return '9999+';\n};\n\nconst EVENT = {\n  RECEIVED_PRIVATE_CHAT_REQUEST: 'private-chat-request',\n  NOTIFY_READ_MESSAGE: 'nofify_read_messages_in_conversation',\n  TIPPED: 'tipped'\n};\n\ninterface P {\n  collapsed?: boolean;\n  onCollapseChange?: Function;\n  loggedIn?: boolean;\n  logout?: Function;\n  ui?: IUIConfig;\n  getCountries?: Function;\n  getPerformerCategories?: Function;\n  performerCategories?: IDataResponse<IPerformerCategogies>;\n  searchPerformer?: Function;\n  addPrivateRequest?: Function;\n  countNotReadMessage?: Function;\n  updateCurrentPerformerBalance?: Function;\n  totalNotReadMessage?: number;\n  router: NextRouter;\n  privateRequests?: any;\n  getStudioStats?: Function;\n  role?: string;\n  tipSound?: string;\n  currentUser?: IUser & IPerformer & IStudio;\n  settings?: StreamSettings;\n}\n\ninterface S {\n  showSearch: boolean;\n}\n\nclass Header extends PureComponent<P, S> {\n  private socket: SocketIOClient.Socket;\n\n  private _audio: HTMLAudioElement;\n\n  constructor(props: P) {\n    super(props);\n    this.state = {\n      showSearch: false\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      getPerformerCategories: dispatchGetPerformerCategories,\n      getCountries: dispatchGetCountries,\n      getStudioStats: dispatchGetStudioStats,\n      currentUser,\n      loggedIn,\n      tipSound,\n      countNotReadMessage: dispatchCountNotReadMessage\n    } = this.props;\n    // this.socket = this.context;\n    dispatchGetPerformerCategories({ limit: 0 });\n    dispatchGetCountries();\n    if (currentUser?._id) {\n      const data = await (await messageService.countTotalNotRead()).data;\n      if (data) {\n        dispatchCountNotReadMessage(data.total);\n      }\n    }\n\n    if (currentUser?._id && currentUser.role === 'studio') {\n      dispatchGetStudioStats();\n    }\n\n    if (loggedIn) {\n      this.initSocketEvent();\n      this.checkPermissionAccess();\n    }\n\n    this._audio = new Audio(tipSound);\n    this._audio.volume = 0.5;\n  }\n\n  componentDidUpdate(prevProps: P) {\n    const {\n      loggedIn,\n      router: {\n        query: { unauthorized }\n      }\n    } = this.props;\n    if (loggedIn && prevProps.loggedIn !== loggedIn) {\n      setTimeout(this.initSocketEvent, 1000);\n    }\n\n    if (unauthorized !== prevProps.router.query.unauthorized) {\n      this.checkPermissionAccess();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.off(EVENT.NOTIFY_READ_MESSAGE);\n      this.socket.off(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST);\n      this.socket.off(EVENT.TIPPED);\n    }\n  }\n\n  onSearchPerformer(key: string) {\n    this.search(key);\n  }\n\n  onPressEnter(event) {\n    const target = event.currentTarget as HTMLInputElement;\n    const key = target.value;\n    this.search(key);\n  }\n\n  handleMessage = (event) => {\n    const { countNotReadMessage: dispatchCountNotReadMessage } = this.props;\n    event && dispatchCountNotReadMessage(event.total);\n  };\n\n  handlePrivateChat = (data: {\n    conversationId: string;\n    user: IUser;\n    id: string;\n  }) => {\n    const { addPrivateRequest: dispatchAddPrivateRequest, settings } = this.props;\n    const path = settings[SETTING_KEYS.OPTION_FOR_PRIVATE] === 'webrtc' ? 'webrtc/' : '';\n    message.success({\n      content: (\n        <span>\n          {data.user.username}\n          {' '}\n          sent you a private chat request.\n        </span>\n      ),\n      duration: 10,\n      key: data.conversationId,\n      onClick: () => {\n        Router.push(\n          {\n            pathname: `/live/${path}privatechat`,\n            query: {\n              id: data.conversationId,\n              streamId: data.id\n            }\n          },\n          `/live/${path}privatechat/${data.conversationId}`\n        );\n        message.destroy(data.conversationId);\n      }\n    });\n    this._audio && this._audio.play();\n    dispatchAddPrivateRequest({ ...data, createdAt: new Date() });\n  };\n\n  sendTipHandler = ({ senderInfo, netPrice, token }) => {\n    const { updateCurrentPerformerBalance: dispatchUpdateCurrentPerformerBalance } = this.props;\n    message.success(\n      `${senderInfo.username} has tipped ${token?.toFixed(2)} tokens. You have received ${netPrice?.toFixed(2)}`,\n      10\n    );\n    dispatchUpdateCurrentPerformerBalance(netPrice);\n    this._audio && this._audio.play();\n  };\n\n  initSocketEvent = () => {\n    this.socket = this.context;\n    const { currentUser } = this.props;\n    if (this.socket.connected) {\n      if (currentUser.role === 'performer') {\n        this.socket.on(\n          EVENT.RECEIVED_PRIVATE_CHAT_REQUEST,\n          this.handlePrivateChat\n        );\n        this.socket.on(EVENT.TIPPED, this.sendTipHandler);\n      }\n\n      this.socket.on(EVENT.NOTIFY_READ_MESSAGE, this.handleMessage);\n    } else {\n      this.socket.on('connect', () => {\n        if (currentUser.role === 'performer') {\n          this.socket.on(\n            EVENT.RECEIVED_PRIVATE_CHAT_REQUEST,\n            this.handlePrivateChat\n          );\n          this.socket.on(EVENT.TIPPED, this.sendTipHandler);\n        }\n\n        this.socket.on(EVENT.NOTIFY_READ_MESSAGE, this.handleMessage);\n      });\n    }\n  };\n\n  search(key: string) {\n    Router.push({ pathname: '/', query: { q: key } }, `/?q=${key}`);\n  }\n\n  async checkPermissionAccess() {\n    const {\n      loggedIn,\n      router: {\n        query: { unauthorized }\n      }\n    } = this.props;\n    if (!loggedIn || !unauthorized) {\n      return;\n    }\n\n    this.beforeLogout();\n  }\n\n  async beforeLogout() {\n    const { logout: dispatchLogout } = this.props;\n    dispatchLogout();\n  }\n\n  render() {\n    const {\n      ui,\n      loggedIn,\n      privateRequests,\n      currentUser,\n      totalNotReadMessage,\n      settings\n    } = this.props;\n    const { showSearch } = this.state;\n    const path = settings[SETTING_KEYS.OPTION_FOR_PRIVATE] === 'webrtc' ? 'webrtc/' : '';\n    const rightContent = loggedIn ? (\n      <>\n        <Link\n          href={\n            currentUser.role === 'user'\n              ? '/account/user/funds-tokens'\n              : currentUser.role === 'performer'\n                ? '/account/performer/payout-requests'\n                : '#'\n          }\n        >\n          <a>\n            <Tooltip\n              title={`${\n                (currentUser.balance && currentUser.balance.toFixed(2)) || 0\n              } Tokens`}\n            >\n              <Button\n                style={{ margin: '0px 10px', color: '#ff0066' }}\n                className=\"btn-tokens\"\n              >\n                {`${roundBalance(currentUser?.balance || 0)} Tokens`}\n              </Button>\n            </Tooltip>\n          </a>\n        </Link>\n        {currentUser.role === 'performer' && (\n          <Dropdown\n            overlay={(\n              <Menu>\n                {privateRequests.length > 0 ? (\n                  privateRequests.map((request) => (\n                    <Menu.Item\n                      onClick={() => message.destroy(request.conversationId)}\n                    >\n                      <Link\n                        href={{\n                          pathname: `/live/${path}privatechat`,\n                          query: {\n                            id: request.conversationId,\n                            streamId: request.id\n                          }\n                        }}\n                        as={`/live/${path}privatechat/${request.conversationId}?streamId=${request.id}`}\n                        key={request.conversationId}\n                      >\n                        <a>\n                          <Card bordered={false} hoverable={false}>\n                            <Card.Meta\n                              avatar={(\n                                <Avatar\n                                  src={\n                                    request.user?.avatar\n                                    || '/default-user-icon.png'\n                                  }\n                                />\n                              )}\n                              title={`${request.user?.username || 'N/A'} (${roundBalance(request.user?.balance || 0)} token(s))`}\n                              description={formatDate(request?.createdAt)}\n                            />\n                          </Card>\n                        </a>\n                      </Link>\n                    </Menu.Item>\n                  ))\n                ) : (\n                  <Menu.Item>There are no private request.</Menu.Item>\n                )}\n              </Menu>\n            )}\n          >\n            <span className=\"call-requests\">\n              <Badge count={privateRequests.length} showZero>\n                <BellOutlined style={{ color: '#ffffff' }} />\n              </Badge>\n            </span>\n          </Dropdown>\n        )}\n        <Dropdown\n          overlay={(\n            <Menu key=\"menu-right-content\">\n              {currentUser.role === 'user' && [\n                <Menu.Item\n                  key=\"settings-menu-right-content\"\n                  onClick={() => Router.push('/account/user/account-settings')}\n                >\n                  <span>\n                    <SettingOutlined className=\"primary-icon\" />\n                    {' '}\n                    Profile\n                  </span>\n                </Menu.Item>,\n                <Menu.Item\n                  key=\"favorite-menu-right-content\"\n                  onClick={() => Router.push('/account/user/favorites')}\n                >\n                  <span>\n                    <HeartOutlined className=\"primary-icon\" />\n                    {' '}\n                    My Favorites\n                  </span>\n                </Menu.Item>,\n                <Menu.Item\n                  key=\"funds-tokens-menu-right-content\"\n                  onClick={() => Router.push('/account/user/funds-tokens')}\n                >\n                  <span>\n                    <span className=\"anticon primary-icon\">\n                      <FundsIcon />\n                    </span>\n                    {' '}\n                    Funds / Tokens\n                  </span>\n                </Menu.Item>,\n                <Menu.Item\n                  key=\"user-messages-menu-right-content\"\n                  onClick={() => Router.push('/messages')}\n                >\n                  <span>\n                    <MessageOutlined className=\"primary-icon\" />\n                    {' '}\n                    Messages (\n                    {totalNotReadMessage || 0}\n                    )\n                  </span>\n                </Menu.Item>\n              ]}\n\n              {currentUser.role === 'performer' && [\n                <Menu.Item\n                  key=\"profile-menu-right-content\"\n                  onClick={() => Router.push('/account/performer/profile')}\n                >\n                  <span>\n                    <UserOutlined className=\"primary-icon\" />\n                    {' '}\n                    Profile\n                  </span>\n                </Menu.Item>,\n                <Menu.Item\n                  key=\"account-settings-menu-right-content\"\n                  onClick={() => Router.push('/account/performer/account-settings')}\n                >\n                  <span>\n                    <SettingOutlined className=\"primary-icon\" />\n                    {' '}\n                    Account\n                    Settings\n                  </span>\n                </Menu.Item>,\n                <Menu.Item\n                  key=\"model-messages-menu-right-content\"\n                  onClick={() => Router.push('/messages')}\n                >\n                  <span>\n                    <MessageOutlined className=\"primary-icon\" />\n                    {' '}\n                    Messages (\n                    {totalNotReadMessage}\n                    )\n                  </span>\n                </Menu.Item>\n              ]}\n              {currentUser.role === 'studio' && [\n                <Menu.Item\n                  key=\"account-settings-menu-right-content\"\n                  onClick={() => Router.push('/studio/account-settings')}\n                >\n                  <span>\n                    <SettingOutlined className=\"primary-icon\" />\n                    {' '}\n                    Account\n                    Settings\n                  </span>\n                </Menu.Item>\n              ]}\n              <Menu.Item key=\"log-out\" onClick={this.beforeLogout.bind(this)}>\n                <LogoutOutlined className=\"primary-icon\" />\n                {' '}\n                Log out\n              </Menu.Item>\n            </Menu>\n          )}\n        >\n          <Avatar\n            style={{\n              margin: '0 15px',\n              cursor: 'pointer',\n              background: '#ffffff'\n            }}\n            src={currentUser?.avatar || '/default-user-icon.png'}\n          />\n        </Dropdown>\n      </>\n    ) : (\n      <Button\n        className=\"btn-login\"\n        onClick={() => Router.push('/auth/login/user', '/auth/login')}\n      >\n        Login\n      </Button>\n    );\n\n    return (\n      <Layout.Header className=\"header\" id=\"layoutHeader\">\n        <div className=\"left-container\">\n          <Link href=\"/\">\n            <a className=\"header-logo\">\n              <img\n                src={\n                  typeof ui.logo === 'string' && ui.logo.length > 0\n                    ? ui.logo\n                    : '/xcam-logo-white.png'\n                }\n                alt=\"header-logo\"\n              />\n            </a>\n          </Link>\n          <div className=\"menu-left-header\">\n            <LeftHeaderContent {...this.props} />\n          </div>\n        </div>\n        <div className=\"right-container\">\n          <div\n            className={showSearch ? 'search-icon active' : 'search-icon'}\n            aria-hidden\n            onClick={() => this.setState({ showSearch: !showSearch })}\n          >\n            {showSearch ? <CloseOutlined /> : <SearchOutlined />}\n          </div>\n          <div className={!showSearch ? 'hide search-bar' : 'search-bar'}>\n            <Input.Search\n              placeholder=\"Enter keyword\"\n              loading={false}\n              allowClear\n              enterButton\n              onPressEnter={this.onPressEnter.bind(this)}\n              onSearch={this.onSearchPerformer.bind(this)}\n            />\n          </div>\n          {rightContent}\n        </div>\n      </Layout.Header>\n    );\n  }\n}\n\nHeader.contextType = SocketContext;\n\nconst userSelecter = (state) => state.user.current;\nconst performerSelecter = (state) => state.performer.current;\nconst studioSelecter = (state) => state.studio.current;\nconst authSelecter = (state) => state.auth;\n\nconst currentUserSelecter = createSelector(\n  userSelecter,\n  performerSelecter,\n  studioSelecter,\n  authSelecter,\n  (user, performer, studio, auth) => {\n    if (!auth.loggedIn) return {};\n\n    if (user?._id) {\n      return { ...user, role: 'user' };\n    }\n\n    if (performer?._id) {\n      return { ...performer, role: 'performer' };\n    }\n\n    if (studio?._id) {\n      return { ...studio, role: 'studio' };\n    }\n\n    return {};\n  }\n);\n\nHeader.contextType = SocketContext;\n\nconst mapStateToProps = (state: any) => ({\n  ui: { ...state.ui },\n  currentUser: currentUserSelecter(state),\n  tipSound: state.settings.tipSound,\n  loggedIn: state.auth.loggedIn,\n  performerCategories: state.performer.categories,\n  totalNotReadMessage: state.message.totalNotReadMessage,\n  ...state.streaming\n});\nconst mapDispatch = {\n  logout,\n  getPerformerCategories,\n  getCountries,\n  addPrivateRequest,\n  getStudioStats,\n  countNotReadMessage,\n  updateCurrentPerformerBalance\n};\nexport default connect(mapStateToProps, mapDispatch)(withRouter(Header));\n"]},"metadata":{},"sourceType":"module"}