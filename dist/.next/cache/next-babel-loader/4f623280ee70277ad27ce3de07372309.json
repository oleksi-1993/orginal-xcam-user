{"ast":null,"code":"import { createAction, createAsyncAction } from '@lib/redux';\nexport var updateCurrentStudio = createAction('updateCurrentStudio');\n\nvar _createAsyncAction = createAsyncAction('updateStudio', 'UPDATE_STUDIO'),\n    updateStudio = _createAsyncAction.updateStudio,\n    updateStudioSuccess = _createAsyncAction.updateStudioSuccess,\n    updateStudioFail = _createAsyncAction.updateStudioFail;\n\nexport { updateStudio, updateStudioSuccess, updateStudioFail };\nexport var setUpdatingStudio = createAction('updatingStudio');\nexport var updateStudioPaymentInfo = createAction('UPDATE_STUDIO_PAYMENT_INFO');\nexport var updateStudioDirectDeposit = createAction('UPDATE_STUDIO_DIRECT_DEPOSIT');\nexport var updateStudioPaxum = createAction('UPDATE_STUDIO_PAXUM');\nexport var updateStudioBitpay = createAction('UPDATE_STUDIO_BITPAY');\n\nvar _createAsyncAction2 = createAsyncAction('getStudioEarning', 'GET_STUDIO_EARNING'),\n    getStudioEarning = _createAsyncAction2.getStudioEarning,\n    getStudioEarningSuccess = _createAsyncAction2.getStudioEarningSuccess,\n    getStudioEarningFail = _createAsyncAction2.getStudioEarningFail;\n\nexport { getStudioEarning, getStudioEarningSuccess, getStudioEarningFail };\nexport var setGettingStudioEarning = createAction('SET_GETTING_STUDIO_EARNIG');\n\nvar _createAsyncAction3 = createAsyncAction('getStudioPayoutRequest', 'GET_STUDIO_PAYOUT_REQUEST'),\n    getStudioPayoutRequest = _createAsyncAction3.getStudioPayoutRequest,\n    getStudioPayoutRequestSuccess = _createAsyncAction3.getStudioPayoutRequestSuccess,\n    getStudioPayoutRequestFail = _createAsyncAction3.getStudioPayoutRequestFail;\n\nexport { getStudioPayoutRequest, getStudioPayoutRequestSuccess, getStudioPayoutRequestFail };\nexport var setGettingStudioPayoutRequest = createAction('SET_GETTING_STUDIO_PAYOUT_REQUEST');\nexport var removeStudioPayoutRequest = createAction('REMOVE_STUDIO_PAYOUT_REQUEST');\n\nvar _createAsyncAction4 = createAsyncAction('getPerformerRequest', 'GET_PERFORMER_REQUEST'),\n    getPerformerRequest = _createAsyncAction4.getPerformerRequest,\n    getPerformerRequestSuccess = _createAsyncAction4.getPerformerRequestSuccess,\n    getPerformerRequestFail = _createAsyncAction4.getPerformerRequestFail;\n\nexport { getPerformerRequest, getPerformerRequestSuccess, getPerformerRequestFail };\nexport var setGettingPerformerRequest = createAction('SET_GETTING_PERFORMER_REQUEST');\n\nvar _createAsyncAction5 = createAsyncAction('getMembers', 'GET_MEMBERS'),\n    getMembers = _createAsyncAction5.getMembers,\n    getMembersSuccess = _createAsyncAction5.getMembersSuccess,\n    getMembersFail = _createAsyncAction5.getMembersFail;\n\nexport { getMembers, getMembersSuccess, getMembersFail };\nexport var getMembersSearching = createAction('GET_MEMBER_SEACHING');\nexport var updateMemberStatus = createAction('UPDATE_MEMBER_STATUS');\n\nvar _createAsyncAction6 = createAsyncAction('getMembersCommissions', 'GET_MEMBERS_COMMSSIONS'),\n    getMembersCommissions = _createAsyncAction6.getMembersCommissions,\n    getMembersCommissionsSuccess = _createAsyncAction6.getMembersCommissionsSuccess,\n    getMembersCommissionsFail = _createAsyncAction6.getMembersCommissionsFail;\n\nexport { getMembersCommissions, getMembersCommissionsSuccess, getMembersCommissionsFail };\nexport var getMembersCommissionsSearching = createAction('GET_MEMBER_COMMSSIO_SEACHING');\nexport var updateMemberCommision = createAction('UPDATE_MEMBER_COMMISSION');\n\nvar _createAsyncAction7 = createAsyncAction('getStudioStats', 'GET_STUDIO_STATS'),\n    getStudioStats = _createAsyncAction7.getStudioStats,\n    getStudioStatsSuccess = _createAsyncAction7.getStudioStatsSuccess,\n    getStudioStatsFail = _createAsyncAction7.getStudioStatsFail;\n\nexport { getStudioStats, getStudioStatsSuccess, getStudioStatsFail };\nexport var updateTotalPerformer = createAction('UPDATE_TOTAL_PERFORMER');","map":{"version":3,"sources":["E:/programData/React/user/src/redux/studio/actions.ts"],"names":["createAction","createAsyncAction","updateCurrentStudio","updateStudio","updateStudioSuccess","updateStudioFail","setUpdatingStudio","updateStudioPaymentInfo","updateStudioDirectDeposit","updateStudioPaxum","updateStudioBitpay","getStudioEarning","getStudioEarningSuccess","getStudioEarningFail","setGettingStudioEarning","getStudioPayoutRequest","getStudioPayoutRequestSuccess","getStudioPayoutRequestFail","setGettingStudioPayoutRequest","removeStudioPayoutRequest","getPerformerRequest","getPerformerRequestSuccess","getPerformerRequestFail","setGettingPerformerRequest","getMembers","getMembersSuccess","getMembersFail","getMembersSearching","updateMemberStatus","getMembersCommissions","getMembersCommissionsSuccess","getMembersCommissionsFail","getMembersCommissionsSearching","updateMemberCommision","getStudioStats","getStudioStatsSuccess","getStudioStatsFail","updateTotalPerformer"],"mappings":"AAAA,SACEA,YADF,EAEEC,iBAFF,QAGO,YAHP;AAKA,OAAO,IAAMC,mBAAmB,GAAGF,YAAY,CAAC,qBAAD,CAAxC;;AAEA,yBAIHC,iBAAiB,CAAC,cAAD,EAAiB,eAAjB,CAJd;AAAA,IACLE,YADK,sBACLA,YADK;AAAA,IAELC,mBAFK,sBAELA,mBAFK;AAAA,IAGLC,gBAHK,sBAGLA,gBAHK;;;AAMP,OAAO,IAAMC,iBAAiB,GAAGN,YAAY,CAAC,gBAAD,CAAtC;AAEP,OAAO,IAAMO,uBAAuB,GAAGP,YAAY,CACjD,4BADiD,CAA5C;AAGP,OAAO,IAAMQ,yBAAyB,GAAGR,YAAY,CACnD,8BADmD,CAA9C;AAGP,OAAO,IAAMS,iBAAiB,GAAGT,YAAY,CAAC,qBAAD,CAAtC;AACP,OAAO,IAAMU,kBAAkB,GAAGV,YAAY,CAAC,sBAAD,CAAvC;;AAEA,0BAIHC,iBAAiB,CAAC,kBAAD,EAAqB,oBAArB,CAJd;AAAA,IACLU,gBADK,uBACLA,gBADK;AAAA,IAELC,uBAFK,uBAELA,uBAFK;AAAA,IAGLC,oBAHK,uBAGLA,oBAHK;;;AAKP,OAAO,IAAMC,uBAAuB,GAAGd,YAAY,CACjD,2BADiD,CAA5C;;AAIA,0BAIHC,iBAAiB,CAAC,wBAAD,EAA2B,2BAA3B,CAJd;AAAA,IACLc,sBADK,uBACLA,sBADK;AAAA,IAELC,6BAFK,uBAELA,6BAFK;AAAA,IAGLC,0BAHK,uBAGLA,0BAHK;;;AAKP,OAAO,IAAMC,6BAA6B,GAAGlB,YAAY,CACvD,mCADuD,CAAlD;AAGP,OAAO,IAAMmB,yBAAyB,GAAGnB,YAAY,CACnD,8BADmD,CAA9C;;AAIA,0BAIHC,iBAAiB,CAAC,qBAAD,EAAwB,uBAAxB,CAJd;AAAA,IACLmB,mBADK,uBACLA,mBADK;AAAA,IAELC,0BAFK,uBAELA,0BAFK;AAAA,IAGLC,uBAHK,uBAGLA,uBAHK;;;AAKP,OAAO,IAAMC,0BAA0B,GAAGvB,YAAY,CACpD,+BADoD,CAA/C;;AAIA,0BAIHC,iBAAiB,CAAC,YAAD,EAAe,aAAf,CAJd;AAAA,IACLuB,UADK,uBACLA,UADK;AAAA,IAELC,iBAFK,uBAELA,iBAFK;AAAA,IAGLC,cAHK,uBAGLA,cAHK;;;AAKP,OAAO,IAAMC,mBAAmB,GAAG3B,YAAY,CAAC,qBAAD,CAAxC;AACP,OAAO,IAAM4B,kBAAkB,GAAG5B,YAAY,CAAC,sBAAD,CAAvC;;AAEA,0BAIHC,iBAAiB,CAAC,uBAAD,EAA0B,wBAA1B,CAJd;AAAA,IACL4B,qBADK,uBACLA,qBADK;AAAA,IAELC,4BAFK,uBAELA,4BAFK;AAAA,IAGLC,yBAHK,uBAGLA,yBAHK;;;AAKP,OAAO,IAAMC,8BAA8B,GAAGhC,YAAY,CACxD,8BADwD,CAAnD;AAGP,OAAO,IAAMiC,qBAAqB,GAAGjC,YAAY,CAAC,0BAAD,CAA1C;;AAEA,0BAIHC,iBAAiB,CAAC,gBAAD,EAAmB,kBAAnB,CAJd;AAAA,IACLiC,cADK,uBACLA,cADK;AAAA,IAELC,qBAFK,uBAELA,qBAFK;AAAA,IAGLC,kBAHK,uBAGLA,kBAHK;;;AAKP,OAAO,IAAMC,oBAAoB,GAAGrC,YAAY,CAAC,wBAAD,CAAzC","sourcesContent":["import {\n  createAction,\n  createAsyncAction\n} from '@lib/redux';\n\nexport const updateCurrentStudio = createAction('updateCurrentStudio');\n\nexport const {\n  updateStudio,\n  updateStudioSuccess,\n  updateStudioFail\n} = createAsyncAction('updateStudio', 'UPDATE_STUDIO');\n\nexport const setUpdatingStudio = createAction('updatingStudio');\n\nexport const updateStudioPaymentInfo = createAction(\n  'UPDATE_STUDIO_PAYMENT_INFO'\n);\nexport const updateStudioDirectDeposit = createAction(\n  'UPDATE_STUDIO_DIRECT_DEPOSIT'\n);\nexport const updateStudioPaxum = createAction('UPDATE_STUDIO_PAXUM');\nexport const updateStudioBitpay = createAction('UPDATE_STUDIO_BITPAY');\n\nexport const {\n  getStudioEarning,\n  getStudioEarningSuccess,\n  getStudioEarningFail\n} = createAsyncAction('getStudioEarning', 'GET_STUDIO_EARNING');\nexport const setGettingStudioEarning = createAction(\n  'SET_GETTING_STUDIO_EARNIG'\n);\n\nexport const {\n  getStudioPayoutRequest,\n  getStudioPayoutRequestSuccess,\n  getStudioPayoutRequestFail\n} = createAsyncAction('getStudioPayoutRequest', 'GET_STUDIO_PAYOUT_REQUEST');\nexport const setGettingStudioPayoutRequest = createAction(\n  'SET_GETTING_STUDIO_PAYOUT_REQUEST'\n);\nexport const removeStudioPayoutRequest = createAction(\n  'REMOVE_STUDIO_PAYOUT_REQUEST'\n);\n\nexport const {\n  getPerformerRequest,\n  getPerformerRequestSuccess,\n  getPerformerRequestFail\n} = createAsyncAction('getPerformerRequest', 'GET_PERFORMER_REQUEST');\nexport const setGettingPerformerRequest = createAction(\n  'SET_GETTING_PERFORMER_REQUEST'\n);\n\nexport const {\n  getMembers,\n  getMembersSuccess,\n  getMembersFail\n} = createAsyncAction('getMembers', 'GET_MEMBERS');\nexport const getMembersSearching = createAction('GET_MEMBER_SEACHING');\nexport const updateMemberStatus = createAction('UPDATE_MEMBER_STATUS');\n\nexport const {\n  getMembersCommissions,\n  getMembersCommissionsSuccess,\n  getMembersCommissionsFail\n} = createAsyncAction('getMembersCommissions', 'GET_MEMBERS_COMMSSIONS');\nexport const getMembersCommissionsSearching = createAction(\n  'GET_MEMBER_COMMSSIO_SEACHING'\n);\nexport const updateMemberCommision = createAction('UPDATE_MEMBER_COMMISSION');\n\nexport const {\n  getStudioStats,\n  getStudioStatsSuccess,\n  getStudioStatsFail\n} = createAsyncAction('getStudioStats', 'GET_STUDIO_STATS');\nexport const updateTotalPerformer = createAction('UPDATE_TOTAL_PERFORMER');\n"]},"metadata":{},"sourceType":"module"}