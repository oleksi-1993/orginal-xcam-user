{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\common\\\\layout\\\\menu.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Menu } from 'antd';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\n\nclass SiderMenu extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedKeys: ['dashboard'],\n      openKeys: []\n    });\n\n    _defineProperty(this, \"onOpenChange\", openKeys => {\n      const {\n        menus\n      } = this.props;\n      const rootSubmenuKeys = menus.filter(_ => !_.menuParentId).map(_ => _.id);\n      const latestOpenKey = openKeys.find(key => openKeys.indexOf(key) === -1);\n      let newOpenKeys = openKeys;\n\n      if (rootSubmenuKeys.indexOf(latestOpenKey) !== -1) {\n        newOpenKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n\n      this.setState({\n        openKeys: newOpenKeys\n      });\n    });\n\n    _defineProperty(this, \"generateMenus\", data => {\n      const {\n        totalNotReadMessage\n      } = this.props;\n      return data.map((item, index) => {\n        if (item.children) {\n          return __jsx(Menu.SubMenu, {\n            icon: item.icon,\n            key: `sub-${index}`,\n            title: __jsx(React.Fragment, null, __jsx(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }\n            }, item.name)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }\n          }, this.generateMenus(item.children));\n        }\n\n        return __jsx(Menu.Item, {\n          key: item.id,\n          icon: item.icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }\n        }, __jsx(Link, {\n          href: item.route,\n          as: item.as || item.route,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, item.name, ' ', item.id === 'messages' && `(${totalNotReadMessage})`)));\n      });\n    });\n  }\n\n  componentDidMount() {\n    // Router.events.on('routeChangeStart', this.routerChange.bind(this));\n    const {\n      menus\n    } = this.props;\n    const selectedKeys = false ? this.getSelectedKeys(menus) : [];\n    this.setSelectedKeys(selectedKeys);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      menus,\n      router\n    } = this.props;\n\n    if (router.pathname !== prevProps.router.pathname) {\n      const selectedKeys = false ? this.getSelectedKeys(menus) : [];\n      this.setSelectedKeys(selectedKeys);\n    }\n  }\n\n  onSelect({\n    key\n  }) {\n    const {\n      menus\n    } = this.props;\n    const flatTree = this.flatten(menus);\n    const selectedKeys = flatTree.filter(m => m.id === key).map(m => m.id);\n    this.setSelectedKeys(selectedKeys);\n  }\n\n  getSelectedKeys(menus) {\n    const pathname = false ? Router.pathname : '';\n    const flatTree = this.flatten(menus);\n    return flatTree // .filter((m) => pathname.includes(m.as || m.route))\n    .filter(m => pathname === m.route || pathname === m.as).map(m => m.id);\n  }\n\n  setSelectedKeys(selectedKeys) {\n    this.setState({\n      selectedKeys\n    });\n  }\n\n  flatten(menus, flattenMenus = []) {\n    menus.forEach(m => {\n      if (m.children) {\n        this.flatten(m.children, flattenMenus);\n      }\n\n      const tmp = _objectSpread({}, m);\n\n      delete tmp.children;\n      flattenMenus.push(tmp);\n    });\n    return flattenMenus;\n  }\n\n  render() {\n    const {\n      theme,\n      menus,\n      collapsed,\n      onClick\n    } = this.props;\n    const {\n      selectedKeys,\n      openKeys\n    } = this.state;\n    const menuProps = collapsed ? {} : {\n      openKeys\n    };\n    return __jsx(Menu, _extends({\n      key: \"profile-menu\",\n      mode: \"inline\",\n      theme: theme,\n      selectedKeys: selectedKeys,\n      onOpenChange: this.onOpenChange.bind(this),\n      onSelect: this.onSelect.bind(this),\n      onClick: onClick // onClick={\n      //   isMobile\n      //     ? () => {\n      //         onCollapseChange(true);\n      //       }\n      //     : undefined\n      // }\n\n    }, menuProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }), this.generateMenus(menus));\n  }\n\n}\n\nexport default withRouter(SiderMenu);","map":{"version":3,"sources":["E:/programData/React/user/src/components/common/layout/menu.tsx"],"names":["React","PureComponent","Menu","Link","Router","withRouter","SiderMenu","selectedKeys","openKeys","menus","props","rootSubmenuKeys","filter","_","menuParentId","map","id","latestOpenKey","find","key","indexOf","newOpenKeys","setState","data","totalNotReadMessage","item","index","children","icon","name","generateMenus","route","as","componentDidMount","getSelectedKeys","setSelectedKeys","componentDidUpdate","prevProps","router","pathname","onSelect","flatTree","flatten","m","flattenMenus","forEach","tmp","push","render","theme","collapsed","onClick","state","menuProps","onOpenChange","bind"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Menu } from 'antd';\nimport Link from 'next/link';\nimport Router, { withRouter, NextRouter } from 'next/router';\n\ninterface IProps {\n  theme?: string;\n  isMobile?: boolean;\n  menus?: any;\n  collapsed?: boolean;\n  router: NextRouter;\n  totalNotReadMessage?: number;\n  onClick?: () => void;\n}\n\nclass SiderMenu extends PureComponent<IProps> {\n  state = {\n    selectedKeys: ['dashboard'],\n    openKeys: []\n  };\n\n  componentDidMount() {\n    // Router.events.on('routeChangeStart', this.routerChange.bind(this));\n    const { menus } = this.props;\n    const selectedKeys = process.browser\n      ? this.getSelectedKeys(menus)\n      : [];\n    this.setSelectedKeys(selectedKeys);\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    const { menus, router } = this.props;\n    if (router.pathname !== prevProps.router.pathname) {\n      const selectedKeys = process.browser\n        ? this.getSelectedKeys(menus)\n        : [];\n      this.setSelectedKeys(selectedKeys);\n    }\n  }\n\n  onOpenChange = (openKeys) => {\n    const { menus } = this.props;\n    const rootSubmenuKeys = menus\n      .filter((_) => !_.menuParentId)\n      .map((_) => _.id);\n\n    const latestOpenKey = openKeys.find(\n      (key) => openKeys.indexOf(key) === -1\n    );\n\n    let newOpenKeys = openKeys;\n    if (rootSubmenuKeys.indexOf(latestOpenKey) !== -1) {\n      newOpenKeys = latestOpenKey ? [latestOpenKey] : [];\n    }\n\n    this.setState({\n      openKeys: newOpenKeys\n    });\n  };\n\n  onSelect({ key }) {\n    const { menus } = this.props;\n    const flatTree = this.flatten(menus);\n    const selectedKeys = flatTree.filter((m) => m.id === key).map((m) => m.id);\n    this.setSelectedKeys(selectedKeys);\n  }\n\n  getSelectedKeys(menus: any) {\n    const pathname = process.browser ? Router.pathname : '';\n    const flatTree = this.flatten(menus);\n    return (\n      flatTree\n        // .filter((m) => pathname.includes(m.as || m.route))\n        .filter((m) => (pathname === m.route || pathname === m.as))\n        .map((m) => m.id)\n    );\n  }\n\n  setSelectedKeys(selectedKeys) {\n    this.setState({ selectedKeys });\n  }\n\n  generateMenus = (data) => {\n    const { totalNotReadMessage } = this.props;\n    return data.map((item, index) => {\n      if (item.children) {\n        return (\n          <Menu.SubMenu\n            icon={item.icon}\n            key={`sub-${index}`}\n            title={(\n              <>\n                <span>{item.name}</span>\n              </>\n            )}\n          >\n            {this.generateMenus(item.children)}\n          </Menu.SubMenu>\n        );\n      }\n      return (\n        <Menu.Item key={item.id} icon={item.icon}>\n          <Link href={item.route} as={item.as || item.route}>\n            <a>\n              {item.name}\n              {' '}\n              {item.id === 'messages' && `(${totalNotReadMessage})`}\n            </a>\n          </Link>\n        </Menu.Item>\n      );\n    });\n  };\n\n  flatten(menus, flattenMenus = []) {\n    menus.forEach((m) => {\n      if (m.children) {\n        this.flatten(m.children, flattenMenus);\n      }\n      const tmp = { ...m };\n      delete tmp.children;\n      flattenMenus.push(tmp);\n    });\n\n    return flattenMenus;\n  }\n\n  render() {\n    const {\n      theme, menus, collapsed, onClick\n    } = this.props;\n    const { selectedKeys, openKeys } = this.state;\n    const menuProps = collapsed\n      ? {}\n      : {\n        openKeys\n      };\n\n    return (\n      <Menu\n        key=\"profile-menu\"\n        mode=\"inline\"\n        theme={theme as any}\n        selectedKeys={selectedKeys}\n        onOpenChange={this.onOpenChange.bind(this)}\n        onSelect={this.onSelect.bind(this)}\n        onClick={onClick}\n        // onClick={\n        //   isMobile\n        //     ? () => {\n        //         onCollapseChange(true);\n        //       }\n        //     : undefined\n        // }\n        {...menuProps}\n      >\n        {this.generateMenus(menus)}\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(SiderMenu);\n"]},"metadata":{},"sourceType":"module"}