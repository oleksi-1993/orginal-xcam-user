{"ast":null,"code":"import { createAsyncAction, createAction } from '@lib/redux';\n\nvar _createAsyncAction = createAsyncAction('login', 'LOGIN'),\n    login = _createAsyncAction.login,\n    loginSuccess = _createAsyncAction.loginSuccess,\n    loginFail = _createAsyncAction.loginFail;\n\nexport { login, loginSuccess, loginFail };\nexport var loginRequesting = createAction('LOGIN_REQUESTING');\n\nvar _createAsyncAction2 = createAsyncAction('performerlogin', 'PERFORMER_LOGIN'),\n    performerlogin = _createAsyncAction2.performerlogin,\n    performerloginSuccess = _createAsyncAction2.performerloginSuccess,\n    performerloginFail = _createAsyncAction2.performerloginFail;\n\nexport { performerlogin, performerloginSuccess, performerloginFail };\nexport var resetLoginData = createAction('resetLoginData');\n\nvar _createAsyncAction3 = createAsyncAction('studioLogin', 'STUDIO_LOGIN'),\n    studioLogin = _createAsyncAction3.studioLogin,\n    studioLoginSuccess = _createAsyncAction3.studioLoginSuccess,\n    studioLoginFail = _createAsyncAction3.studioLoginFail;\n\nexport { studioLogin, studioLoginSuccess, studioLoginFail };\n\nvar _createAsyncAction4 = createAsyncAction('performerRegister', 'PERFORMER_REGISTER'),\n    performerRegister = _createAsyncAction4.performerRegister,\n    performerRegisterSuccess = _createAsyncAction4.performerRegisterSuccess,\n    performerRegisterFail = _createAsyncAction4.performerRegisterFail;\n\nexport { performerRegister, performerRegisterSuccess, performerRegisterFail };\nexport var setPerformerRegisterSubmitting = createAction('SET_PERFORMER_REGISTER_SUBMITTING');\n\nvar _createAsyncAction5 = createAsyncAction('userRegister', 'USER_REGISTER'),\n    userRegister = _createAsyncAction5.userRegister,\n    userRegisterSuccess = _createAsyncAction5.userRegisterSuccess,\n    userRegisterFail = _createAsyncAction5.userRegisterFail;\n\nexport { userRegister, userRegisterSuccess, userRegisterFail };\nexport var setUserRegisterSubmitting = createAction('SET_USER_REGISTER_SUBMITTING');\n\nvar _createAsyncAction6 = createAsyncAction('updatePassword', 'UPDATE_PASSWORD'),\n    updatePassword = _createAsyncAction6.updatePassword,\n    updatePasswordSuccess = _createAsyncAction6.updatePasswordSuccess,\n    updatePasswordFail = _createAsyncAction6.updatePasswordFail;\n\nexport { updatePassword, updatePasswordSuccess, updatePasswordFail };\nexport var setUpdatePasswordSubmitting = createAction('SET_UPDATE_PASSWORD_SUBMITTING');\nexport var logout = createAction('logout');","map":{"version":3,"sources":["E:/programData/React/user/src/redux/auth/actions.ts"],"names":["createAsyncAction","createAction","login","loginSuccess","loginFail","loginRequesting","performerlogin","performerloginSuccess","performerloginFail","resetLoginData","studioLogin","studioLoginSuccess","studioLoginFail","performerRegister","performerRegisterSuccess","performerRegisterFail","setPerformerRegisterSubmitting","userRegister","userRegisterSuccess","userRegisterFail","setUserRegisterSubmitting","updatePassword","updatePasswordSuccess","updatePasswordFail","setUpdatePasswordSubmitting","logout"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,YAA5B,QAAgD,YAAhD;;AAEO,yBAA2CD,iBAAiB,CACjE,OADiE,EAEjE,OAFiE,CAA5D;AAAA,IAAQE,KAAR,sBAAQA,KAAR;AAAA,IAAeC,YAAf,sBAAeA,YAAf;AAAA,IAA6BC,SAA7B,sBAA6BA,SAA7B;;;AAIP,OAAO,IAAMC,eAAe,GAAGJ,YAAY,CAAC,kBAAD,CAApC;;AAEA,0BAIHD,iBAAiB,CAAC,gBAAD,EAAmB,iBAAnB,CAJd;AAAA,IACLM,cADK,uBACLA,cADK;AAAA,IAELC,qBAFK,uBAELA,qBAFK;AAAA,IAGLC,kBAHK,uBAGLA,kBAHK;;;AAMP,OAAO,IACLC,cAAc,GAAGR,YAAY,CAAC,gBAAD,CADxB;;AAGA,0BAIHD,iBAAiB,CAAC,aAAD,EAAgB,cAAhB,CAJd;AAAA,IACLU,WADK,uBACLA,WADK;AAAA,IAELC,kBAFK,uBAELA,kBAFK;AAAA,IAGLC,eAHK,uBAGLA,eAHK;;;;AAMA,0BAIHZ,iBAAiB,CAAC,mBAAD,EAAsB,oBAAtB,CAJd;AAAA,IACLa,iBADK,uBACLA,iBADK;AAAA,IAELC,wBAFK,uBAELA,wBAFK;AAAA,IAGLC,qBAHK,uBAGLA,qBAHK;;;AAKP,OAAO,IAAMC,8BAA8B,GAAGf,YAAY,CACxD,mCADwD,CAAnD;;AAIA,0BAIHD,iBAAiB,CAAC,cAAD,EAAiB,eAAjB,CAJd;AAAA,IACLiB,YADK,uBACLA,YADK;AAAA,IAELC,mBAFK,uBAELA,mBAFK;AAAA,IAGLC,gBAHK,uBAGLA,gBAHK;;;AAKP,OAAO,IAAMC,yBAAyB,GAAGnB,YAAY,CACnD,8BADmD,CAA9C;;AAIA,0BAIHD,iBAAiB,CAAC,gBAAD,EAAmB,iBAAnB,CAJd;AAAA,IACLqB,cADK,uBACLA,cADK;AAAA,IAELC,qBAFK,uBAELA,qBAFK;AAAA,IAGLC,kBAHK,uBAGLA,kBAHK;;;AAKP,OAAO,IAAMC,2BAA2B,GAAGvB,YAAY,CACrD,gCADqD,CAAhD;AAIP,OAAO,IAAMwB,MAAM,GAAGxB,YAAY,CAAC,QAAD,CAA3B","sourcesContent":["import { createAsyncAction, createAction } from '@lib/redux';\n\nexport const { login, loginSuccess, loginFail } = createAsyncAction(\n  'login',\n  'LOGIN'\n);\nexport const loginRequesting = createAction('LOGIN_REQUESTING');\n\nexport const {\n  performerlogin,\n  performerloginSuccess,\n  performerloginFail\n} = createAsyncAction('performerlogin', 'PERFORMER_LOGIN');\n\nexport const\n  resetLoginData = createAction('resetLoginData');\n\nexport const {\n  studioLogin,\n  studioLoginSuccess,\n  studioLoginFail\n} = createAsyncAction('studioLogin', 'STUDIO_LOGIN');\n\nexport const {\n  performerRegister,\n  performerRegisterSuccess,\n  performerRegisterFail\n} = createAsyncAction('performerRegister', 'PERFORMER_REGISTER');\nexport const setPerformerRegisterSubmitting = createAction(\n  'SET_PERFORMER_REGISTER_SUBMITTING'\n);\n\nexport const {\n  userRegister,\n  userRegisterSuccess,\n  userRegisterFail\n} = createAsyncAction('userRegister', 'USER_REGISTER');\nexport const setUserRegisterSubmitting = createAction(\n  'SET_USER_REGISTER_SUBMITTING'\n);\n\nexport const {\n  updatePassword,\n  updatePasswordSuccess,\n  updatePasswordFail\n} = createAsyncAction('updatePassword', 'UPDATE_PASSWORD');\nexport const setUpdatePasswordSubmitting = createAction(\n  'SET_UPDATE_PASSWORD_SUBMITTING'\n);\n\nexport const logout = createAction('logout');\n"]},"metadata":{},"sourceType":"module"}