{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\auth\\\\password-change.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Button, Input } from 'antd';\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  }\n};\n\nvar PasswordChange = function PasswordChange(_ref) {\n  var onFinish = _ref.onFinish,\n      submiting = _ref.submiting;\n  return __jsx(Form, _extends({\n    layout: \"vertical\",\n    onFinish: onFinish\n  }, formItemLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }), __jsx(Form.Item, {\n    name: \"prePassword\",\n    label: \"Old Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your old password!'\n    }, {\n      min: 6,\n      max: 14,\n      message: '6-14 characters'\n    }],\n    hasFeedback: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Input.Password, {\n    placeholder: \"Old Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    label: \"New Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 6,\n      max: 14,\n      message: '6-14 characters'\n    }],\n    hasFeedback: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Input.Password, {\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  })), __jsx(Form.Item, {\n    name: \"confirm\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    label: \"Retype password\",\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, function (_ref2) {\n      var getFieldValue = _ref2.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Input.Password, {\n    placeholder: \"Confirm Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  })), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: submiting,\n    disabled: submiting,\n    className: \"btn-submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Save Changes\")));\n};\n\n_c = PasswordChange;\nPasswordChange.defaultProps = {\n  submiting: false\n};\nexport default PasswordChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordChange\");","map":{"version":3,"sources":["E:/programData/React/user/src/components/auth/password-change.tsx"],"names":["Form","Button","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","PasswordChange","onFinish","submiting","required","message","min","max","getFieldValue","validator","rule","value","Promise","resolve","reject","Error","defaultProps"],"mappings":"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","sourcesContent":["import { Form, Button, Input } from 'antd';\n\ninterface P {\n  onFinish: (v) => void;\n  submiting?: boolean;\n}\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  }\n};\n\nconst PasswordChange = ({ onFinish, submiting }: P) => (\n  <Form layout=\"vertical\" onFinish={onFinish} {...formItemLayout}>\n    <Form.Item\n      name=\"prePassword\"\n      label=\"Old Password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your old password!'\n        },\n        {\n          min: 6,\n          max: 14,\n          message: '6-14 characters'\n        }\n      ]}\n      hasFeedback\n    >\n      <Input.Password placeholder=\"Old Password\" />\n    </Form.Item>\n    <Form.Item\n      name=\"password\"\n      label=\"New Password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!'\n        },\n        {\n          min: 6,\n          max: 14,\n          message: '6-14 characters'\n        }\n      ]}\n      hasFeedback\n    >\n      <Input.Password placeholder=\"Password\" />\n    </Form.Item>\n    <Form.Item\n      name=\"confirm\"\n      dependencies={['password']}\n      hasFeedback\n      label=\"Retype password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please confirm your password!'\n        },\n        ({ getFieldValue }) => ({\n          validator(rule, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(\n              new Error('The two passwords that you entered do not match!')\n            );\n          }\n        })\n      ]}\n    >\n      <Input.Password placeholder=\"Confirm Password\" />\n    </Form.Item>\n    <Form.Item>\n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        loading={submiting}\n        disabled={submiting}\n        className=\"btn-submit\"\n      >\n        Save Changes\n      </Button>\n    </Form.Item>\n  </Form>\n);\n\nPasswordChange.defaultProps = {\n  submiting: false\n};\nexport default PasswordChange;\n"]},"metadata":{},"sourceType":"module"}