{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\pages\\\\auth\\\\register\\\\user.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport '../index.less';\nimport { PureComponent } from 'react';\nimport { message, Alert } from 'antd';\nimport { connect } from 'react-redux';\nimport Head from 'next/head';\nimport RegisterForm from '@components/auth/register/user-register-form';\nimport { userRegister } from '@redux/auth/actions';\nimport Router from 'next/router';\nimport { settingService } from '@services/setting.service';\nimport { getResponseError } from '@lib/utils';\nimport moment from 'moment';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\n\nvar UserRegisterPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(UserRegisterPage, _PureComponent);\n\n  var _super = _createSuper(UserRegisterPage);\n\n  function UserRegisterPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserRegisterPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: false,\n      errorMessage: '',\n      countries: []\n    };\n    return _this;\n  }\n\n  _createClass(UserRegisterPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getContries();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          success = _this$props.success,\n          error = _this$props.error;\n\n      if (prevProps.success !== success && success) {\n        message.success('Congrats, your account has been created');\n        Router.push('/auth/login');\n      }\n\n      if (prevProps.error !== error && error) {\n        message.error(getResponseError(error));\n      }\n    }\n  }, {\n    key: \"getContries\",\n    value: function () {\n      var _getContries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var countries;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return settingService.getCountries();\n\n              case 3:\n                countries = _context.sent;\n                this.setState({\n                  countries: countries.data\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  error: true,\n                  errorMessage: getResponseError(_context.t0)\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getContries() {\n        return _getContries.apply(this, arguments);\n      }\n\n      return getContries;\n    }()\n  }, {\n    key: \"submit\",\n    value: function submit(data) {\n      var dispatchUserRegister = this.props.userRegister;\n\n      var newData = _objectSpread({}, data);\n\n      if (data.dateOfBirth) {\n        newData = _objectSpread(_objectSpread({}, data), {}, {\n          dateOfBirth: moment(data.dateOfBirth).toISOString()\n        }); // if (data.dateOfBirth) {\n        //   data.dateOfBirth = moment(data.dateOfBirth).toISOString();\n      }\n\n      dispatchUserRegister(newData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          requesting = _this$props2.requesting,\n          ui = _this$props2.ui;\n      var _this$state = this.state,\n          error = _this$state.error,\n          errorMessage = _this$state.errorMessage,\n          countries = _this$state.countries;\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"User Register\")), __jsx(\"div\", {\n        className: \"register-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"form-register-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, errorMessage && __jsx(Alert, {\n        type: \"error\",\n        message: \"Error request\",\n        banner: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }\n      }), __jsx(RegisterForm, {\n        singularTextModel: (ui === null || ui === void 0 ? void 0 : ui.singularTextModel) || 'Performer',\n        error: error,\n        onFinish: this.submit.bind(this),\n        submiting: requesting,\n        countries: countries,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      })), __jsx(FormRegisterPlaceHolder, {\n        ui: ui,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return UserRegisterPage;\n}(PureComponent);\n\n_defineProperty(UserRegisterPage, \"authenticate\", false);\n\n_defineProperty(UserRegisterPage, \"layout\", 'public');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({\n    ui: state.ui,\n    loggedIn: state.auth.loggedIn\n  }, state.auth.userRegister);\n};\n\nvar mapDispatch = {\n  userRegister: userRegister\n};\nexport default connect(mapStateToProps, mapDispatch)(UserRegisterPage);","map":{"version":3,"sources":["E:/programData/React/user/pages/auth/register/user.tsx"],"names":["PureComponent","message","Alert","connect","Head","RegisterForm","userRegister","Router","settingService","getResponseError","moment","FormRegisterPlaceHolder","UserRegisterPage","props","state","error","errorMessage","countries","getContries","prevProps","success","push","getCountries","setState","data","dispatchUserRegister","newData","dateOfBirth","toISOString","requesting","ui","singularTextModel","submit","bind","mapStateToProps","loggedIn","auth","mapDispatch"],"mappings":"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","sourcesContent":["import '../index.less';\nimport { PureComponent } from 'react';\nimport { message, Alert } from 'antd';\nimport { connect } from 'react-redux';\nimport Head from 'next/head';\nimport RegisterForm from '@components/auth/register/user-register-form';\nimport { IUserRegisterFormData, ICountries, IUIConfig } from 'src/interfaces';\nimport { userRegister } from '@redux/auth/actions';\nimport Router from 'next/router';\nimport { settingService } from '@services/setting.service';\nimport { getResponseError } from '@lib/utils';\nimport moment from 'moment';\nimport { FormRegisterPlaceHolder } from '@components/common/layout';\n\ninterface UserRegisterProps {\n  requesting: boolean;\n  userRegister: Function;\n  loggedIn: boolean;\n  success: boolean;\n  error: any;\n  ui: IUIConfig;\n}\ninterface UserRegisterStates {\n  error: boolean;\n  errorMessage: string;\n  countries: ICountries[];\n}\n\nclass UserRegisterPage extends PureComponent<\n  UserRegisterProps,\n  UserRegisterStates\n> {\n  static authenticate = false;\n\n  static layout: string = 'public';\n\n  constructor(props: UserRegisterProps) {\n    super(props);\n    this.state = {\n      error: false,\n      errorMessage: '',\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    this.getContries();\n  }\n\n  componentDidUpdate(prevProps: UserRegisterProps) {\n    const { success, error } = this.props;\n    if (prevProps.success !== success && success) {\n      message.success(\n        'Congrats, your account has been created'\n      );\n      Router.push('/auth/login');\n    }\n\n    if (prevProps.error !== error && error) {\n      message.error(getResponseError(error));\n    }\n  }\n\n  async getContries() {\n    try {\n      const countries = await settingService.getCountries();\n      this.setState({ countries: countries.data });\n    } catch (error) {\n      this.setState({ error: true, errorMessage: getResponseError(error) });\n    }\n  }\n\n  submit(data: IUserRegisterFormData) {\n    const { userRegister: dispatchUserRegister } = this.props;\n    let newData = { ...data };\n    if (data.dateOfBirth) {\n      newData = { ...data, dateOfBirth: moment(data.dateOfBirth).toISOString() };\n    // if (data.dateOfBirth) {\n    //   data.dateOfBirth = moment(data.dateOfBirth).toISOString();\n    }\n\n    dispatchUserRegister(newData);\n  }\n\n  render() {\n    const { requesting, ui } = this.props;\n    const { error, errorMessage, countries } = this.state;\n    return (\n      <>\n        <Head>\n          <title>User Register</title>\n        </Head>\n        <div className=\"register-page\">\n          <div className=\"form-register-container\">\n            {errorMessage && (<Alert type=\"error\" message=\"Error request\" banner />)}\n            <RegisterForm\n              singularTextModel={ui?.singularTextModel || 'Performer'}\n              error={error}\n              onFinish={this.submit.bind(this)}\n              submiting={requesting}\n              countries={countries}\n            />\n          </div>\n          <FormRegisterPlaceHolder ui={ui} />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ui: state.ui,\n  loggedIn: state.auth.loggedIn,\n  ...state.auth.userRegister\n});\nconst mapDispatch = { userRegister };\nexport default connect(mapStateToProps, mapDispatch)(UserRegisterPage);\n"]},"metadata":{},"sourceType":"module"}