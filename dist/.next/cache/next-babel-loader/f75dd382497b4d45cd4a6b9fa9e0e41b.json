{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class GalleryService extends APIRequest {\n  search(params, isPerformer = true) {\n    return this.get(this.buildUrl(isPerformer ? '/performer/performer-assets/galleries/search' : '/user/performer-assets/galleries/search', params));\n  }\n\n  purchased(params) {\n    return this.get(this.buildUrl('/purchased-items/user/galleries', params));\n  }\n\n  create(data) {\n    return this.post('/performer/performer-assets/galleries', data);\n  }\n\n  update(id, data) {\n    return this.put(`/performer/performer-assets/galleries/${id}`, data);\n  }\n\n  details(id, headers) {\n    return this.get(`/performer/performer-assets/galleries/${id}/view`, headers);\n  }\n\n  publicdetails(id, headers) {\n    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);\n  }\n\n  remove(id) {\n    return this.del(`/performer/performer-assets/galleries/${id}`);\n  }\n\n}\nexport const galleryService = new GalleryService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/gallery.service.ts"],"names":["APIRequest","GalleryService","search","params","isPerformer","get","buildUrl","purchased","create","data","post","update","id","put","details","headers","publicdetails","remove","del","galleryService"],"mappings":"AACA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,cAAN,SAA6BD,UAA7B,CAAwC;AAC7CE,EAAAA,MAAM,CACJC,MADI,EAEJC,WAAW,GAAG,IAFV,EAGkD;AACtD,WAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CACEF,WAAW,GACP,8CADO,GAEP,yCAHN,EAIED,MAJF,CADK,CAAP;AAQD;;AAEDI,EAAAA,SAAS,CAACJ,MAAD,EAEgD;AACvD,WAAO,KAAKE,GAAL,CAAS,KAAKC,QAAL,CAAc,iCAAd,EAAiDH,MAAjD,CAAT,CAAP;AACD;;AAEDK,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAO,KAAKC,IAAL,CAAU,uCAAV,EAAmDD,IAAnD,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACC,EAAD,EAAKH,IAAL,EAAW;AACf,WAAO,KAAKI,GAAL,CAAU,yCAAwCD,EAAG,EAArD,EAAwDH,IAAxD,CAAP;AACD;;AAEDK,EAAAA,OAAO,CAACF,EAAD,EAAaG,OAAb,EAAkD;AACvD,WAAO,KAAKV,GAAL,CACJ,yCAAwCO,EAAG,OADvC,EAELG,OAFK,CAAP;AAID;;AAEDC,EAAAA,aAAa,CAACJ,EAAD,EAAaG,OAAb,EAAkD;AAC7D,WAAO,KAAKV,GAAL,CAAU,oCAAmCO,EAAG,OAAhD,EAAwDG,OAAxD,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACL,EAAD,EAAa;AACjB,WAAO,KAAKM,GAAL,CAAU,yCAAwCN,EAAG,EAArD,CAAP;AACD;;AA1C4C;AA6C/C,OAAO,MAAMO,cAAc,GAAG,IAAIlB,cAAJ,EAAvB","sourcesContent":["import { IResponse, IDataResponse, IPerformerGallery } from 'src/interfaces';\nimport { APIRequest } from './api-request';\n\nexport class GalleryService extends APIRequest {\n  search(\n    params?: { [key: string]: any },\n    isPerformer = true\n  ): Promise<IResponse<IDataResponse<IPerformerGallery>>> {\n    return this.get(\n      this.buildUrl(\n        isPerformer\n          ? '/performer/performer-assets/galleries/search'\n          : '/user/performer-assets/galleries/search',\n        params\n      )\n    );\n  }\n\n  purchased(params?: {\n    [key: string]: any;\n  }): Promise<IResponse<IDataResponse<IPerformerGallery>>> {\n    return this.get(this.buildUrl('/purchased-items/user/galleries', params));\n  }\n\n  create(data) {\n    return this.post('/performer/performer-assets/galleries', data);\n  }\n\n  update(id, data) {\n    return this.put(`/performer/performer-assets/galleries/${id}`, data);\n  }\n\n  details(id: string, headers?: { [key: string]: string }) {\n    return this.get(\n      `/performer/performer-assets/galleries/${id}/view`,\n      headers\n    );\n  }\n\n  publicdetails(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);\n  }\n\n  remove(id: string) {\n    return this.del(`/performer/performer-assets/galleries/${id}`);\n  }\n}\n\nexport const galleryService = new GalleryService();\n"]},"metadata":{},"sourceType":"module"}