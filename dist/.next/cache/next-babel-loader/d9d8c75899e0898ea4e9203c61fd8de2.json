{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { logout } from '@redux/auth/actions';\nimport { getPerformerCategoriesFail, getPerformerCategoriesSuccess, setPerformerSearching, searchPerformerSuccess, searchPerformerFail, updatePerformerProfile, updatePerformerProfileFail, updatePerformerProfileSuccess, setupdatingPerformerProfile, updateCurrentPerformer, getPerformerDetailsSuccess, getPerformerDetailsFail, setGettingPerformerDetails, setPerformerDetails, setFavoritePerformerDetails, getMyProductsSuccess, getMyProductsFail, setGettingMyProducts, addMyProduct, removeMyProduct, getMyVideosSuccess, getMyVideosFail, setgettingMyVideos, removeMyVideo, addMyVideos, getMyPhotosSuccess, getMyPhotosFail, addMyPhotos, removeMyPhoto, setgettingMyPhotos, getMyGalleriesSuccess, getMyGalleriesFail, addMyGalleries, setgettingMyGalleries, updatePerformerFavourite, removeMyGalleries, getPayoutRequestSuccess, getEarningFail, getEarningSuccess, setGettingEarning, getPayoutRequestFail, setGettingPayoutRequest, updatePerformerAsset, updateCurrentPerformerBalance } from './actions';\nexport const initialState = {\n  current: {\n    _id: null,\n    avatar: '/no-avatar.png',\n    name: '',\n    steamingStatus: '',\n    email: ''\n  },\n  earning: {\n    data: [],\n    stats: null,\n    total: 0,\n    searching: false,\n    success: false,\n    error: null,\n    fromDate: null,\n    toDate: null\n  },\n  payout: {\n    data: [],\n    total: 0,\n    searching: false,\n    success: false,\n    error: null\n  },\n  assets: {\n    products: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    },\n    videos: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    },\n    photos: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    },\n    galleries: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    }\n  },\n  categories: {\n    data: [],\n    total: 0\n  },\n  performers: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  performerDetails: {\n    data: {\n      _id: null,\n      avatar: '/no-avatar.png',\n      name: '',\n      email: '',\n      products: [],\n      videos: [],\n      photos: [],\n      galleries: [],\n      relatedPerformer: [],\n      tags: [],\n      categoryIds: [],\n      categories: [],\n      languages: []\n    },\n    products: {},\n    videos: {},\n    photos: {},\n    galleries: {},\n    success: false,\n    searching: false,\n    error: null\n  },\n  getCagetoriesError: null,\n  updateSuccess: false,\n  updating: false,\n  updateError: null\n};\nconst performerReducers = [{\n  on: getPerformerCategoriesSuccess,\n\n  reducer(state, actions) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      categories: _objectSpread({}, actions.payload),\n      getCagetoriesError: null\n    });\n  }\n\n}, {\n  on: getPerformerCategoriesFail,\n\n  reducer(state, actions) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      getCagetoriesError: actions.payload\n    });\n  }\n\n}, {\n  on: searchPerformerSuccess,\n\n  reducer(state, actions) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performers: {\n        success: true,\n        searching: false,\n        error: null,\n        data: actions.payload.data,\n        total: actions.payload.total\n      }\n    });\n  }\n\n}, {\n  on: searchPerformerFail,\n\n  reducer(state, actions) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performers: {\n        success: false,\n        error: actions.payload,\n        searching: false,\n        data: []\n      }\n    });\n  }\n\n}, {\n  on: setPerformerSearching,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performers: _objectSpread(_objectSpread({}, state.performers), {}, {\n        searching: true\n      })\n    });\n  }\n\n}, {\n  on: updatePerformerProfile,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updating: true\n    });\n  }\n\n}, {\n  on: updatePerformerProfileSuccess,\n\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: data.payload,\n      updateSuccess: true,\n      updating: false,\n      updateError: null\n    });\n  }\n\n}, {\n  on: updatePerformerProfileFail,\n\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updateSuccess: false,\n      updating: false,\n      updateError: data.payload\n    });\n  }\n\n}, {\n  on: setupdatingPerformerProfile,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updating: true,\n      updateSuccess: false\n    });\n  }\n\n}, {\n  on: setPerformerDetails,\n\n  reducer(state, action) {\n    const {\n      performerDetails\n    } = state;\n    performerDetails.data = _objectSpread(_objectSpread({}, performerDetails.data), action.payload);\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: setFavoritePerformerDetails,\n\n  reducer(state, action) {\n    const {\n      performerDetails\n    } = state;\n    const {\n      data\n    } = performerDetails;\n    data.isFavorite = action.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerDetails: _objectSpread({}, performerDetails)\n    });\n  }\n\n}, {\n  on: getPerformerDetailsSuccess,\n\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerDetails: {\n        data: data.payload.performer,\n        products: data.payload.products,\n        videos: data.payload.videos,\n        photos: data.payload.photos,\n        galleries: data.payload.galleries,\n        searching: false,\n        success: true,\n        error: null\n      }\n    });\n  }\n\n}, {\n  on: getPerformerDetailsFail,\n\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerDetails: {\n        error: data.payload,\n        success: false,\n        searching: false\n      }\n    });\n  }\n\n}, {\n  on: setGettingPerformerDetails,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerDetails: _objectSpread(_objectSpread({}, state.performerDetails), {}, {\n        success: false,\n        searching: true\n      })\n    });\n  }\n\n}, {\n  on: getMyProductsSuccess,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        products: {\n          data: action.payload.data,\n          total: action.payload.total,\n          searching: false,\n          success: true,\n          error: null\n        }\n      })\n    });\n  }\n\n}, {\n  on: getMyProductsFail,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        products: _objectSpread(_objectSpread({}, state.assets.products), {}, {\n          searching: false,\n          success: false,\n          error: action.payload\n        })\n      })\n    });\n  }\n\n}, {\n  on: setGettingMyProducts,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        products: _objectSpread(_objectSpread({}, state.assets.products), {}, {\n          searching: true,\n          success: false\n        })\n      })\n    });\n  }\n\n}, {\n  on: getEarningSuccess,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      earning: {\n        data: action.payload.data.data,\n        total: action.payload.data.total,\n        fromDate: action.payload.fromDate,\n        toDate: action.payload.toDate,\n        stats: action.payload.stats,\n        searching: false,\n        success: true,\n        error: null\n      }\n    });\n  }\n\n}, {\n  on: getEarningFail,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      earning: _objectSpread(_objectSpread({}, state.earning), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n\n}, {\n  on: setGettingEarning,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      earning: _objectSpread(_objectSpread({}, state.earning), {}, {\n        searching: true,\n        success: false\n      })\n    });\n  }\n\n}, {\n  on: addMyProduct,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        products: _objectSpread(_objectSpread({}, state.assets.products), {}, {\n          data: [...state.assets.products.data, action.payload],\n          total: state.assets.products.total + 1\n        })\n      })\n    });\n  }\n\n}, {\n  on: removeMyProduct,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        products: _objectSpread(_objectSpread({}, state.assets.products), {}, {\n          data: state.assets.products.data.filter(product => product._id !== action.payload),\n          total: state.assets.products.total - 1\n        })\n      })\n    });\n  }\n\n}, {\n  on: getMyVideosSuccess,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        videos: {\n          data: action.payload.data,\n          total: action.payload.total,\n          searching: false,\n          success: true,\n          error: null\n        }\n      })\n    });\n  }\n\n}, {\n  on: getMyVideosFail,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        videos: _objectSpread(_objectSpread({}, state.assets.videos), {}, {\n          searching: false,\n          success: false,\n          error: action.payload\n        })\n      })\n    });\n  }\n\n}, {\n  on: setgettingMyVideos,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        videos: _objectSpread(_objectSpread({}, state.assets.videos), {}, {\n          searching: true,\n          success: false\n        })\n      })\n    });\n  }\n\n}, {\n  on: removeMyVideo,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        videos: _objectSpread(_objectSpread({}, state.assets.videos), {}, {\n          data: state.assets.videos.data.filter(video => video._id !== action.payload),\n          total: state.assets.videos.total - 1\n        })\n      })\n    });\n  }\n\n}, {\n  on: addMyVideos,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      assets: _objectSpread(_objectSpread({}, state.assets), {}, {\n        videos: _objectSpread(_objectSpread({}, state.assets.videos), {}, {\n          data: [...state.assets.videos.data, ...action.payload]\n        })\n      })\n    });\n  }\n\n}, {\n  on: getMyPhotosSuccess,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.photos = {\n      data: action.payload.data,\n      total: action.payload.total,\n      searching: false,\n      success: true,\n      error: null\n    };\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: getMyPhotosFail,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.photos = _objectSpread(_objectSpread({}, state.assets.photos), {}, {\n      searching: false,\n      success: false,\n      error: action.payload\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: setgettingMyPhotos,\n\n  reducer(state) {\n    const {\n      assets\n    } = state;\n    assets.photos = _objectSpread(_objectSpread({}, state.assets.photos), {}, {\n      searching: true,\n      success: false\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: removeMyPhoto,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.photos = _objectSpread(_objectSpread({}, state.assets.photos), {}, {\n      data: state.assets.photos.data.filter(p => p._id !== action.payload),\n      total: state.assets.photos.total - 1\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: addMyPhotos,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.photos = _objectSpread(_objectSpread({}, state.assets.photos), {}, {\n      data: [...state.assets.photos.data, ...action.payload]\n    });\n    return _objectSpread({}, state);\n  }\n\n}, // galleries\n{\n  on: setgettingMyGalleries,\n\n  reducer(state) {\n    const {\n      assets\n    } = state;\n    assets.galleries = _objectSpread(_objectSpread({}, state.assets.galleries), {}, {\n      searching: true,\n      success: false\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: getMyGalleriesSuccess,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.galleries = {\n      data: action.payload.data,\n      total: action.payload.total,\n      searching: false,\n      success: true,\n      error: null\n    };\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: getMyGalleriesFail,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.galleries = _objectSpread(_objectSpread({}, state.assets.galleries), {}, {\n      searching: false,\n      success: false,\n      error: action.payload\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: removeMyGalleries,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.galleries = _objectSpread(_objectSpread({}, state.assets.galleries), {}, {\n      data: state.assets.galleries.data.filter(p => p._id !== action.payload),\n      total: state.assets.galleries.total - 1\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: addMyGalleries,\n\n  reducer(state, action) {\n    const {\n      assets\n    } = state;\n    assets.galleries = _objectSpread(_objectSpread({}, state.assets.galleries), {}, {\n      data: [...state.assets.galleries.data, ...action.payload]\n    });\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: getPayoutRequestSuccess,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      payout: {\n        data: action.payload.data,\n        total: action.payload.total,\n        searching: false,\n        success: true,\n        error: null\n      }\n    });\n  }\n\n}, {\n  on: getPayoutRequestFail,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      payout: _objectSpread(_objectSpread({}, state.payout), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n\n}, {\n  on: setGettingPayoutRequest,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      payout: _objectSpread(_objectSpread({}, state.payout), {}, {\n        searching: true,\n        error: null\n      })\n    });\n  }\n\n}, // ======================================\n{\n  on: updateCurrentPerformerBalance,\n\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: _objectSpread(_objectSpread({}, state.current), {}, {\n        balance: state.current.balance + action.payload\n      })\n    });\n  }\n\n}, {\n  on: updateCurrentPerformer,\n\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: data.payload\n    });\n  }\n\n}, {\n  on: updatePerformerFavourite,\n\n  reducer(state, action) {\n    const {\n      data\n    } = state.performers;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performers: _objectSpread(_objectSpread({}, state.performers), {}, {\n        data: data.map(d => {\n          if (d._id === action.payload) {\n            return _objectSpread(_objectSpread({}, d), {}, {\n              isFavorite: !d.isFavorite\n            });\n          }\n\n          return d;\n        })\n      })\n    });\n  }\n\n}, {\n  on: updatePerformerAsset,\n\n  reducer(state, action) {\n    const {\n      type,\n      id,\n      payload\n    } = action.payload;\n    const {\n      performerDetails\n    } = state;\n\n    if (type === 'gallery') {\n      const {\n        galleries\n      } = performerDetails;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        performerDetails: _objectSpread(_objectSpread({}, performerDetails), {}, {\n          galleries: _objectSpread(_objectSpread({}, galleries), {}, {\n            [id]: _objectSpread(_objectSpread({}, galleries[id]), payload)\n          })\n        })\n      });\n    }\n\n    if (type === 'product') {\n      const {\n        products\n      } = performerDetails;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        performerDetails: _objectSpread(_objectSpread({}, performerDetails), {}, {\n          products: _objectSpread(_objectSpread({}, products), {}, {\n            [id]: _objectSpread(_objectSpread({}, products[id]), payload)\n          })\n        })\n      });\n    }\n\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: logout,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, initialState), {}, {\n      performers: state.performers,\n      categories: state.categories\n    });\n  }\n\n}];\nexport default merge({}, createReducers('performer', [performerReducers], initialState));","map":{"version":3,"sources":["E:/programData/React/user/src/redux/performer/reducers.ts"],"names":["merge","createReducers","logout","getPerformerCategoriesFail","getPerformerCategoriesSuccess","setPerformerSearching","searchPerformerSuccess","searchPerformerFail","updatePerformerProfile","updatePerformerProfileFail","updatePerformerProfileSuccess","setupdatingPerformerProfile","updateCurrentPerformer","getPerformerDetailsSuccess","getPerformerDetailsFail","setGettingPerformerDetails","setPerformerDetails","setFavoritePerformerDetails","getMyProductsSuccess","getMyProductsFail","setGettingMyProducts","addMyProduct","removeMyProduct","getMyVideosSuccess","getMyVideosFail","setgettingMyVideos","removeMyVideo","addMyVideos","getMyPhotosSuccess","getMyPhotosFail","addMyPhotos","removeMyPhoto","setgettingMyPhotos","getMyGalleriesSuccess","getMyGalleriesFail","addMyGalleries","setgettingMyGalleries","updatePerformerFavourite","removeMyGalleries","getPayoutRequestSuccess","getEarningFail","getEarningSuccess","setGettingEarning","getPayoutRequestFail","setGettingPayoutRequest","updatePerformerAsset","updateCurrentPerformerBalance","initialState","current","_id","avatar","name","steamingStatus","email","earning","data","stats","total","searching","success","error","fromDate","toDate","payout","assets","products","videos","photos","galleries","categories","performers","performerDetails","relatedPerformer","tags","categoryIds","languages","getCagetoriesError","updateSuccess","updating","updateError","performerReducers","on","reducer","state","actions","payload","action","isFavorite","performer","filter","product","video","p","balance","map","d","type","id"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport {\n  IReduxAction,\n  IDataResponse,\n  IPerformerCategogies,\n  IPerformer,\n  IProduct,\n  IVideo,\n  IPhoto,\n  IPerformerGallery\n} from 'src/interfaces';\nimport { logout } from '@redux/auth/actions';\nimport { AnyARecord } from 'dns';\nimport {\n  getPerformerCategoriesFail,\n  getPerformerCategoriesSuccess,\n  setPerformerSearching,\n  searchPerformerSuccess,\n  searchPerformerFail,\n  updatePerformerProfile,\n  updatePerformerProfileFail,\n  updatePerformerProfileSuccess,\n  setupdatingPerformerProfile,\n  updateCurrentPerformer,\n  getPerformerDetailsSuccess,\n  getPerformerDetailsFail,\n  setGettingPerformerDetails,\n  setPerformerDetails,\n  setFavoritePerformerDetails,\n  getMyProductsSuccess,\n  getMyProductsFail,\n  setGettingMyProducts,\n  addMyProduct,\n  removeMyProduct,\n  getMyVideosSuccess,\n  getMyVideosFail,\n  setgettingMyVideos,\n  removeMyVideo,\n  addMyVideos,\n  getMyPhotosSuccess,\n  getMyPhotosFail,\n  addMyPhotos,\n  removeMyPhoto,\n  setgettingMyPhotos,\n  getMyGalleriesSuccess,\n  getMyGalleriesFail,\n  addMyGalleries,\n  setgettingMyGalleries,\n  updatePerformerFavourite,\n  removeMyGalleries,\n  getPayoutRequestSuccess,\n  getEarningFail,\n  getEarningSuccess,\n  setGettingEarning,\n  getPayoutRequestFail,\n  setGettingPayoutRequest,\n  updatePerformerAsset,\n  updateCurrentPerformerBalance\n} from './actions';\n\nexport const initialState = {\n  current: {\n    _id: null,\n    avatar: '/no-avatar.png',\n    name: '',\n    steamingStatus: '',\n    email: ''\n  },\n  earning: {\n    data: [],\n    stats: null,\n    total: 0,\n    searching: false,\n    success: false,\n    error: null,\n    fromDate: null,\n    toDate: null\n  },\n  payout: {\n    data: [],\n    total: 0,\n    searching: false,\n    success: false,\n    error: null\n  },\n  assets: {\n    products: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    },\n    videos: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    },\n    photos: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    },\n    galleries: {\n      data: [],\n      total: 0,\n      searching: false,\n      success: false\n    }\n  },\n  categories: {\n    data: [],\n    total: 0\n  },\n  performers: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  performerDetails: {\n    data: {\n      _id: null,\n      avatar: '/no-avatar.png',\n      name: '',\n      email: '',\n      products: [],\n      videos: [],\n      photos: [],\n      galleries: [],\n      relatedPerformer: [],\n      tags: [],\n      categoryIds: [],\n      categories: [],\n      languages: []\n    },\n    products: {},\n    videos: {},\n    photos: {},\n    galleries: {},\n    success: false,\n    searching: false,\n    error: null\n  },\n  getCagetoriesError: null,\n  updateSuccess: false,\n  updating: false,\n  updateError: null\n};\n\nconst performerReducers = [\n  {\n    on: getPerformerCategoriesSuccess,\n    reducer(\n      state: any,\n      actions: IReduxAction<IDataResponse<IPerformerCategogies>>\n    ) {\n      return {\n        ...state,\n        categories: { ...actions.payload },\n        getCagetoriesError: null\n      };\n    }\n  },\n  {\n    on: getPerformerCategoriesFail,\n    reducer(state: any, actions: any) {\n      return {\n        ...state,\n        getCagetoriesError: actions.payload\n      };\n    }\n  },\n  {\n    on: searchPerformerSuccess,\n    reducer(state: any, actions: IReduxAction<any>) {\n      return {\n        ...state,\n        performers: {\n          success: true,\n          searching: false,\n          error: null,\n          data: actions.payload.data,\n          total: actions.payload.total\n        }\n      };\n    }\n  },\n  {\n    on: searchPerformerFail,\n    reducer(state: any, actions: any) {\n      return {\n        ...state,\n        performers: {\n          success: false,\n          error: actions.payload,\n          searching: false,\n          data: []\n        }\n      };\n    }\n  },\n  {\n    on: setPerformerSearching,\n    reducer(state: any) {\n      return {\n        ...state,\n        performers: {\n          ...state.performers,\n          searching: true\n        }\n      };\n    }\n  },\n  {\n    on: updatePerformerProfile,\n    reducer(state: AnyARecord) {\n      return {\n        ...state,\n        updating: true\n      };\n    }\n  },\n  {\n    on: updatePerformerProfileSuccess,\n    reducer(state: any, data: IReduxAction<IPerformer>) {\n      return {\n        ...state,\n        current: data.payload,\n        updateSuccess: true,\n        updating: false,\n        updateError: null\n      };\n    }\n  },\n  {\n    on: updatePerformerProfileFail,\n    reducer(state, data) {\n      return {\n        ...state,\n        updateSuccess: false,\n        updating: false,\n        updateError: data.payload\n      };\n    }\n  },\n  {\n    on: setupdatingPerformerProfile,\n    reducer(state) {\n      return {\n        ...state,\n        updating: true,\n        updateSuccess: false\n      };\n    }\n  },\n  {\n    on: setPerformerDetails,\n    reducer(state: any, action: IReduxAction<IPerformer>) {\n      const { performerDetails } = state;\n      performerDetails.data = { ...performerDetails.data, ...action.payload };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: setFavoritePerformerDetails,\n    reducer(state: any, action: IReduxAction<boolean>) {\n      const { performerDetails } = state;\n      const { data } = performerDetails;\n      data.isFavorite = action.payload;\n      return {\n        ...state,\n        performerDetails: { ...performerDetails }\n      };\n    }\n  },\n  {\n    on: getPerformerDetailsSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      return {\n        ...state,\n        performerDetails: {\n          data: data.payload.performer,\n          products: data.payload.products,\n          videos: data.payload.videos,\n          photos: data.payload.photos,\n          galleries: data.payload.galleries,\n          searching: false,\n          success: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getPerformerDetailsFail,\n    reducer(state, data) {\n      return {\n        ...state,\n        performerDetails: {\n          error: data.payload,\n          success: false,\n          searching: false\n        }\n      };\n    }\n  },\n  {\n    on: setGettingPerformerDetails,\n    reducer(state) {\n      return {\n        ...state,\n        performerDetails: {\n          ...state.performerDetails,\n          success: false,\n          searching: true\n        }\n      };\n    }\n  },\n  {\n    on: getMyProductsSuccess,\n    reducer(state: any, action: IReduxAction<IDataResponse<IProduct>>) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          products: {\n            data: action.payload.data,\n            total: action.payload.total,\n            searching: false,\n            success: true,\n            error: null\n          }\n        }\n      };\n    }\n  },\n  {\n    on: getMyProductsFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          products: {\n            ...state.assets.products,\n            searching: false,\n            success: false,\n            error: action.payload\n          }\n        }\n      };\n    }\n  },\n  {\n    on: setGettingMyProducts,\n    reducer(state) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          products: {\n            ...state.assets.products,\n            searching: true,\n            success: false\n          }\n        }\n      };\n    }\n  },\n  {\n    on: getEarningSuccess,\n    reducer(state: any, action: IReduxAction<any>) {\n      return {\n        ...state,\n        earning: {\n          data: action.payload.data.data,\n          total: action.payload.data.total,\n          fromDate: action.payload.fromDate,\n          toDate: action.payload.toDate,\n          stats: action.payload.stats,\n          searching: false,\n          success: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getEarningFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        earning: {\n          ...state.earning,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: setGettingEarning,\n    reducer(state) {\n      return {\n        ...state,\n        earning: {\n          ...state.earning,\n          searching: true,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: addMyProduct,\n    reducer(state, action) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          products: {\n            ...state.assets.products,\n            data: [...state.assets.products.data, action.payload],\n            total: state.assets.products.total + 1\n          }\n        }\n      };\n    }\n  },\n  {\n    on: removeMyProduct,\n    reducer(state, action) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          products: {\n            ...state.assets.products,\n            data: state.assets.products.data.filter(\n              (product: IProduct) => product._id !== action.payload\n            ),\n            total: state.assets.products.total - 1\n          }\n        }\n      };\n    }\n  },\n  {\n    on: getMyVideosSuccess,\n    reducer(state: any, action: IReduxAction<IDataResponse<IVideo>>) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          videos: {\n            data: action.payload.data,\n            total: action.payload.total,\n            searching: false,\n            success: true,\n            error: null\n          }\n        }\n      };\n    }\n  },\n  {\n    on: getMyVideosFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          videos: {\n            ...state.assets.videos,\n            searching: false,\n            success: false,\n            error: action.payload\n          }\n        }\n      };\n    }\n  },\n  {\n    on: setgettingMyVideos,\n    reducer(state) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          videos: {\n            ...state.assets.videos,\n            searching: true,\n            success: false\n          }\n        }\n      };\n    }\n  },\n  {\n    on: removeMyVideo,\n    reducer(state, action) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          videos: {\n            ...state.assets.videos,\n            data: state.assets.videos.data.filter(\n              (video: IVideo) => video._id !== action.payload\n            ),\n            total: state.assets.videos.total - 1\n          }\n        }\n      };\n    }\n  },\n  {\n    on: addMyVideos,\n    reducer(state, action) {\n      return {\n        ...state,\n        assets: {\n          ...state.assets,\n          videos: {\n            ...state.assets.videos,\n            data: [...state.assets.videos.data, ...action.payload]\n          }\n        }\n      };\n    }\n  },\n  {\n    on: getMyPhotosSuccess,\n    reducer(state: any, action: IReduxAction<IDataResponse<IPhoto>>) {\n      const { assets } = state;\n      assets.photos = {\n        data: action.payload.data,\n        total: action.payload.total,\n        searching: false,\n        success: true,\n        error: null\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: getMyPhotosFail,\n    reducer(state, action) {\n      const { assets } = state;\n      assets.photos = {\n        ...state.assets.photos,\n        searching: false,\n        success: false,\n        error: action.payload\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: setgettingMyPhotos,\n    reducer(state) {\n      const { assets } = state;\n      assets.photos = {\n        ...state.assets.photos,\n        searching: true,\n        success: false\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: removeMyPhoto,\n    reducer(state, action) {\n      const { assets } = state;\n      assets.photos = {\n        ...state.assets.photos,\n        data: state.assets.photos.data.filter(\n          (p: IPhoto) => p._id !== action.payload\n        ),\n        total: state.assets.photos.total - 1\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: addMyPhotos,\n    reducer(state, action) {\n      const { assets } = state;\n      assets.photos = {\n        ...state.assets.photos,\n        data: [...state.assets.photos.data, ...action.payload]\n      };\n      return {\n        ...state\n      };\n    }\n  },\n\n  // galleries\n  {\n    on: setgettingMyGalleries,\n    reducer(state) {\n      const { assets } = state;\n      assets.galleries = {\n        ...state.assets.galleries,\n        searching: true,\n        success: false\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: getMyGalleriesSuccess,\n    reducer(\n      state: any,\n      action: IReduxAction<IDataResponse<IPerformerGallery>>\n    ) {\n      const { assets } = state;\n      assets.galleries = {\n        data: action.payload.data,\n        total: action.payload.total,\n        searching: false,\n        success: true,\n        error: null\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: getMyGalleriesFail,\n    reducer(state, action) {\n      const { assets } = state;\n      assets.galleries = {\n        ...state.assets.galleries,\n        searching: false,\n        success: false,\n        error: action.payload\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: removeMyGalleries,\n    reducer(state, action) {\n      const { assets } = state;\n      assets.galleries = {\n        ...state.assets.galleries,\n        data: state.assets.galleries.data.filter(\n          (p: IPhoto) => p._id !== action.payload\n        ),\n        total: state.assets.galleries.total - 1\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: addMyGalleries,\n    reducer(state, action) {\n      const { assets } = state;\n      assets.galleries = {\n        ...state.assets.galleries,\n        data: [...state.assets.galleries.data, ...action.payload]\n      };\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: getPayoutRequestSuccess,\n    reducer(state, action: IReduxAction<any>) {\n      return {\n        ...state,\n        payout: {\n          data: action.payload.data,\n          total: action.payload.total,\n          searching: false,\n          success: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getPayoutRequestFail,\n    reducer(state, action: IReduxAction<any>) {\n      return {\n        ...state,\n        payout: {\n          ...state.payout,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: setGettingPayoutRequest,\n    reducer(state) {\n      return {\n        ...state,\n        payout: {\n          ...state.payout,\n          searching: true,\n          error: null\n        }\n      };\n    }\n  },\n\n  // ======================================\n  {\n    on: updateCurrentPerformerBalance,\n    reducer(state: any, action: IReduxAction<number>) {\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          balance: state.current.balance + action.payload\n        }\n      };\n    }\n  },\n  {\n    on: updateCurrentPerformer,\n    reducer(state: any, data: IReduxAction<IPerformer>) {\n      return {\n        ...state,\n        current: data.payload\n      };\n    }\n  },\n  {\n    on: updatePerformerFavourite,\n    reducer(state: any, action: IReduxAction<string>) {\n      const { data } = state.performers;\n      return {\n        ...state,\n        performers: {\n          ...state.performers,\n          data: data.map((d) => {\n            if (d._id === action.payload) {\n              return { ...d, isFavorite: !d.isFavorite };\n            }\n\n            return d;\n          })\n        }\n      };\n    }\n  },\n  {\n    on: updatePerformerAsset,\n    reducer(state: any, action: IReduxAction<any>) {\n      const { type, id, payload } = action.payload;\n      const { performerDetails } = state;\n      if (type === 'gallery') {\n        const { galleries } = performerDetails;\n        return {\n          ...state,\n          performerDetails: {\n            ...performerDetails,\n            galleries: { ...galleries, [id]: { ...galleries[id], ...payload } }\n          }\n        };\n      }\n      if (type === 'product') {\n        const { products } = performerDetails;\n        return {\n          ...state,\n          performerDetails: {\n            ...performerDetails,\n            products: { ...products, [id]: { ...products[id], ...payload } }\n          }\n        };\n      }\n\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: logout,\n    reducer(state) {\n      return {\n        ...initialState,\n        performers: state.performers,\n        categories: state.categories\n      };\n    }\n  }\n];\nexport default merge(\n  {},\n  createReducers('performer', [performerReducers], initialState)\n);\n"]},"metadata":{},"sourceType":"module"}