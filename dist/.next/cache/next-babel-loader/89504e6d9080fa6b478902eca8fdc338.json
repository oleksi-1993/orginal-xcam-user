{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\layouts\\\\base-layout.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport Loader from '@components/common/base/loader';\nimport PrimaryLayout from './primary-layout';\nimport PublicLayout from './public-layout';\nimport DefaultLayout from './default-layout';\nimport AuthLayout from './auth-layout';\nimport MaintenanceLayout from './maintenance-layout';\nconst LayoutMap = {\n  maintenance: MaintenanceLayout,\n  primary: PrimaryLayout,\n  public: PublicLayout,\n  auth: AuthLayout,\n  default: DefaultLayout\n};\nexport default class BaseLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onRouteChangeStart\", () => {\n      this.setState({\n        routerChange: true\n      });\n    });\n\n    _defineProperty(this, \"onRouteChangeComplete\", () => {\n      this.setState({\n        routerChange: false\n      });\n    });\n\n    this.state = {\n      routerChange: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleStateChange();\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.onRouteChangeStart);\n    Router.events.off('routeChangeComplete', this.onRouteChangeComplete);\n  }\n\n  handleStateChange() {\n    Router.events.on('routeChangeStart', this.onRouteChangeStart);\n    Router.events.on('routeChangeComplete', this.onRouteChangeComplete);\n  }\n\n  render() {\n    const {\n      children,\n      layout,\n      maintenanceMode = false\n    } = this.props;\n    const {\n      routerChange\n    } = this.state;\n\n    if (maintenanceMode) {\n      return __jsx(MaintenanceLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const Container = layout && LayoutMap[layout] ? LayoutMap[layout] : LayoutMap.public;\n    return __jsx(React.Fragment, null, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, routerChange && __jsx(Loader, {\n      spinning: true,\n      fullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }\n    }), children));\n  }\n\n}","map":{"version":3,"sources":["E:/programData/React/user/src/layouts/base-layout.tsx"],"names":["React","Router","Loader","PrimaryLayout","PublicLayout","DefaultLayout","AuthLayout","MaintenanceLayout","LayoutMap","maintenance","primary","public","auth","default","BaseLayout","PureComponent","constructor","props","setState","routerChange","state","componentDidMount","handleStateChange","componentWillUnmount","events","off","onRouteChangeStart","onRouteChangeComplete","on","render","children","layout","maintenanceMode","Container"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAaA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAEF,iBADG;AAEhBG,EAAAA,OAAO,EAAEP,aAFO;AAGhBQ,EAAAA,MAAM,EAAEP,YAHQ;AAIhBQ,EAAAA,IAAI,EAAEN,UAJU;AAKhBO,EAAAA,OAAO,EAAER;AALO,CAAlB;AAQA,eAAe,MAAMS,UAAN,SAAyBd,KAAK,CAACe,aAA/B,CAA0E;AACvFC,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC/B,UAAMA,KAAN;;AAD+B,gDAqBZ,MAAM;AACzB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAvBgC;;AAAA,mDAyBT,MAAM;AAC5B,WAAKD,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KA3BgC;;AAE/B,SAAKC,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,iBAAL;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBtB,IAAAA,MAAM,CAACuB,MAAP,CAAcC,GAAd,CAAkB,kBAAlB,EAAsC,KAAKC,kBAA3C;AACAzB,IAAAA,MAAM,CAACuB,MAAP,CAAcC,GAAd,CAAkB,qBAAlB,EAAyC,KAAKE,qBAA9C;AACD;;AAEDL,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,MAAM,CAACuB,MAAP,CAAcI,EAAd,CAAiB,kBAAjB,EAAqC,KAAKF,kBAA1C;AACAzB,IAAAA,MAAM,CAACuB,MAAP,CAAcI,EAAd,CAAiB,qBAAjB,EAAwC,KAAKD,qBAA7C;AACD;;AAUDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA,eAAe,GAAG;AAAtC,QAAgD,KAAKf,KAA3D;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;;AACA,QAAIY,eAAJ,EAAqB;AACnB,aAAO,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,UAAMC,SAAS,GAAGF,MAAM,IAAIvB,SAAS,CAACuB,MAAD,CAAnB,GAA8BvB,SAAS,CAACuB,MAAD,CAAvC,GAAkDvB,SAAS,CAACG,MAA9E;AACA,WACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,YAAY,IAAI,MAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,UAAU,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEGW,QAFH,CADF,CADF;AAQD;;AA9CsF","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router';\r\nimport { IUIConfig } from 'src/interfaces';\r\nimport Loader from '@components/common/base/loader';\r\nimport PrimaryLayout from './primary-layout';\r\nimport PublicLayout from './public-layout';\r\nimport DefaultLayout from './default-layout';\r\nimport AuthLayout from './auth-layout';\r\nimport MaintenanceLayout from './maintenance-layout';\r\n\r\ninterface DefaultProps {\r\n  children: any;\r\n  appConfig?: IUIConfig;\r\n  layout?: string;\r\n  maintenanceMode?: boolean;\r\n}\r\n\r\ninterface DefaultStates {\r\n  routerChange: boolean;\r\n}\r\n\r\nconst LayoutMap = {\r\n  maintenance: MaintenanceLayout,\r\n  primary: PrimaryLayout,\r\n  public: PublicLayout,\r\n  auth: AuthLayout,\r\n  default: DefaultLayout\r\n};\r\n\r\nexport default class BaseLayout extends React.PureComponent<DefaultProps, DefaultStates> {\r\n  constructor(props: DefaultProps) {\r\n    super(props);\r\n    this.state = {\r\n      routerChange: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleStateChange();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Router.events.off('routeChangeStart', this.onRouteChangeStart);\r\n    Router.events.off('routeChangeComplete', this.onRouteChangeComplete);\r\n  }\r\n\r\n  handleStateChange() {\r\n    Router.events.on('routeChangeStart', this.onRouteChangeStart);\r\n    Router.events.on('routeChangeComplete', this.onRouteChangeComplete);\r\n  }\r\n\r\n  onRouteChangeStart = () => {\r\n    this.setState({ routerChange: true });\r\n  }\r\n\r\n  onRouteChangeComplete = () => {\r\n    this.setState({ routerChange: false });\r\n  }\r\n\r\n  render() {\r\n    const { children, layout, maintenanceMode = false } = this.props;\r\n    const { routerChange } = this.state;\r\n    if (maintenanceMode) {\r\n      return <MaintenanceLayout />;\r\n    }\r\n\r\n    const Container = layout && LayoutMap[layout] ? LayoutMap[layout] : LayoutMap.public;\r\n    return (\r\n      <>\r\n        <Container>\r\n          {routerChange && <Loader spinning fullScreen />}\r\n          {children}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}