{"ast":null,"code":"import { createAction, createAsyncAction } from '@lib/redux';\nexport const {\n  getConversations,\n  getConversationsSuccess,\n  getConversationsFail\n} = createAsyncAction('getConversations', 'LOAD_CONVERSATIONS');\nexport const {\n  searchConversations,\n  searchConversationsSuccess,\n  searchConversationsFail\n} = createAsyncAction('searchConversations', 'SEARCH_CONVERSATIONS');\nexport const {\n  readMessages\n} = createAsyncAction('readMessages', 'READ_MESSAGES');\nexport const {\n  sendMessage,\n  sendMessageSuccess,\n  sendMessageFail\n} = createAsyncAction('sendMessage', 'SEND_MESSAGE');\nexport const {\n  receiveMessageSuccess\n} = createAsyncAction('receiveMessageSuccess', 'RECEIVE_MESSAGE_SUCCESS');\nexport const {\n  sentFileSuccess\n} = createAsyncAction('sentFileSuccess', 'SENT_FILE_SUCCESS');\nexport const {\n  deactiveConversation\n} = createAsyncAction('deactiveConversation', 'DEACTIVE_CONVERSATION');\nexport const updateLastMessage = createAction('updateLastMessage');\nexport const {\n  setActiveConversation,\n  setActiveConversationSuccess,\n  setActiveConversationFail\n} = createAsyncAction('setActiveConversation', 'SET_ACTIVE_CONVERSATION_RECEIVER');\nexport const {\n  loadMessages,\n  loadMessagesSuccess,\n  loadMessagesFail\n} = createAsyncAction('loadMessages', 'LOAD_MESSAGES');\nexport const {\n  loadMoreMessages,\n  loadMoreMessagesSuccess,\n  loadMoreMessagesFail\n} = createAsyncAction('loadMoreMessages', 'LOAD_MORE_MESSAGES');\nexport const fetchingMessage = createAction('fetchingMessage');\nexport const resetMessageState = createAction('resetMessageState');\nexport const {\n  getConversationDetail,\n  getConversationDetailSuccess,\n  getConversationDetailFail\n} = createAsyncAction('getConversationDetail', 'LOAD_CONVERSATION_ITEM');\nexport const countNotReadMessage = createAction('COUNT_TOTAL_NOT_READ_MESSAGE');","map":{"version":3,"sources":["E:/programData/React/user/src/redux/message/actions.ts"],"names":["createAction","createAsyncAction","getConversations","getConversationsSuccess","getConversationsFail","searchConversations","searchConversationsSuccess","searchConversationsFail","readMessages","sendMessage","sendMessageSuccess","sendMessageFail","receiveMessageSuccess","sentFileSuccess","deactiveConversation","updateLastMessage","setActiveConversation","setActiveConversationSuccess","setActiveConversationFail","loadMessages","loadMessagesSuccess","loadMessagesFail","loadMoreMessages","loadMoreMessagesSuccess","loadMoreMessagesFail","fetchingMessage","resetMessageState","getConversationDetail","getConversationDetailSuccess","getConversationDetailFail","countNotReadMessage"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,QAAgD,YAAhD;AAEA,OAAO,MAAM;AACXC,EAAAA,gBADW;AAEXC,EAAAA,uBAFW;AAGXC,EAAAA;AAHW,IAITH,iBAAiB,CAAC,kBAAD,EAAqB,oBAArB,CAJd;AAMP,OAAO,MAAM;AACXI,EAAAA,mBADW;AAEXC,EAAAA,0BAFW;AAGXC,EAAAA;AAHW,IAITN,iBAAiB,CAAC,qBAAD,EAAwB,sBAAxB,CAJd;AAMP,OAAO,MAAM;AACXO,EAAAA;AADW,IAETP,iBAAiB,CAAC,cAAD,EAAiB,eAAjB,CAFd;AAIP,OAAO,MAAM;AACXQ,EAAAA,WADW;AAEXC,EAAAA,kBAFW;AAGXC,EAAAA;AAHW,IAITV,iBAAiB,CAAC,aAAD,EAAgB,cAAhB,CAJd;AAMP,OAAO,MAAM;AACXW,EAAAA;AADW,IAETX,iBAAiB,CAAC,uBAAD,EAA0B,yBAA1B,CAFd;AAIP,OAAO,MAAM;AACXY,EAAAA;AADW,IAETZ,iBAAiB,CAAC,iBAAD,EAAoB,mBAApB,CAFd;AAIP,OAAO,MAAM;AACXa,EAAAA;AADW,IAETb,iBAAiB,CAAC,sBAAD,EAAyB,uBAAzB,CAFd;AAIP,OAAO,MAAMc,iBAAiB,GAAGf,YAAY,CAAC,mBAAD,CAAtC;AAEP,OAAO,MAAM;AACXgB,EAAAA,qBADW;AAEXC,EAAAA,4BAFW;AAGXC,EAAAA;AAHW,IAITjB,iBAAiB,CACnB,uBADmB,EAEnB,kCAFmB,CAJd;AASP,OAAO,MAAM;AACXkB,EAAAA,YADW;AAEXC,EAAAA,mBAFW;AAGXC,EAAAA;AAHW,IAITpB,iBAAiB,CAAC,cAAD,EAAiB,eAAjB,CAJd;AAMP,OAAO,MAAM;AACXqB,EAAAA,gBADW;AAEXC,EAAAA,uBAFW;AAGXC,EAAAA;AAHW,IAITvB,iBAAiB,CAAC,kBAAD,EAAqB,oBAArB,CAJd;AAMP,OAAO,MAAMwB,eAAe,GAAGzB,YAAY,CAAC,iBAAD,CAApC;AAEP,OAAO,MAAM0B,iBAAiB,GAAG1B,YAAY,CAAC,mBAAD,CAAtC;AAEP,OAAO,MAAM;AACX2B,EAAAA,qBADW;AAEXC,EAAAA,4BAFW;AAGXC,EAAAA;AAHW,IAIT5B,iBAAiB,CAAC,uBAAD,EAA0B,wBAA1B,CAJd;AAMP,OAAO,MAAM6B,mBAAmB,GAAG9B,YAAY,CAAC,8BAAD,CAAxC","sourcesContent":["import { createAction, createAsyncAction } from '@lib/redux';\n\nexport const {\n  getConversations,\n  getConversationsSuccess,\n  getConversationsFail\n} = createAsyncAction('getConversations', 'LOAD_CONVERSATIONS');\n\nexport const {\n  searchConversations,\n  searchConversationsSuccess,\n  searchConversationsFail\n} = createAsyncAction('searchConversations', 'SEARCH_CONVERSATIONS');\n\nexport const {\n  readMessages\n} = createAsyncAction('readMessages', 'READ_MESSAGES');\n\nexport const {\n  sendMessage,\n  sendMessageSuccess,\n  sendMessageFail\n} = createAsyncAction('sendMessage', 'SEND_MESSAGE');\n\nexport const {\n  receiveMessageSuccess\n} = createAsyncAction('receiveMessageSuccess', 'RECEIVE_MESSAGE_SUCCESS');\n\nexport const {\n  sentFileSuccess\n} = createAsyncAction('sentFileSuccess', 'SENT_FILE_SUCCESS');\n\nexport const {\n  deactiveConversation\n} = createAsyncAction('deactiveConversation', 'DEACTIVE_CONVERSATION');\n\nexport const updateLastMessage = createAction('updateLastMessage');\n\nexport const {\n  setActiveConversation,\n  setActiveConversationSuccess,\n  setActiveConversationFail\n} = createAsyncAction(\n  'setActiveConversation',\n  'SET_ACTIVE_CONVERSATION_RECEIVER'\n);\n\nexport const {\n  loadMessages,\n  loadMessagesSuccess,\n  loadMessagesFail\n} = createAsyncAction('loadMessages', 'LOAD_MESSAGES');\n\nexport const {\n  loadMoreMessages,\n  loadMoreMessagesSuccess,\n  loadMoreMessagesFail\n} = createAsyncAction('loadMoreMessages', 'LOAD_MORE_MESSAGES');\n\nexport const fetchingMessage = createAction('fetchingMessage');\n\nexport const resetMessageState = createAction('resetMessageState');\n\nexport const {\n  getConversationDetail,\n  getConversationDetailSuccess,\n  getConversationDetailFail\n} = createAsyncAction('getConversationDetail', 'LOAD_CONVERSATION_ITEM');\n\nexport const countNotReadMessage = createAction('COUNT_TOTAL_NOT_READ_MESSAGE');\n"]},"metadata":{},"sourceType":"module"}