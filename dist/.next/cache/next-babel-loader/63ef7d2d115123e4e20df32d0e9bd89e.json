{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport BaseLayout from '@layouts/base-layout';\nimport { authService, userService, performerService, studioService, bannerService } from '@services/index';\nimport Router from 'next/router';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentPerformer } from '@redux/performer/actions';\nimport { settingService } from '@services/setting.service';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { PERFORMER_ROLE, USER_ROLE } from 'src/services/api-request';\nimport { Socket } from 'src/socket';\nimport '../style/index.less';\nimport { updateSettings } from '@redux/settings/actions';\nimport { getBannersSuccess } from '@redux/banner/actions';\nimport { SETTING_KEYS } from 'src/constants';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { pick } from 'lodash';\nimport Head from 'next/head';\nimport cookie from 'cookie';\nimport { setGlobalConfig } from '@services/config';\nexport const ROLE = {\n  STUDIO: 'studio',\n  PERFORMER: 'performer',\n  USER: 'user'\n};\n\nfunction redirectLogin(ctx, authenticate) {\n  if (false) {\n    authService.removeToken();\n    authService.removeRemember();\n\n    if (authenticate && authenticate === ROLE.STUDIO) {\n      Router.push('/studio/login');\n      return;\n    }\n\n    Router.push('/auth/login/user');\n    return;\n  } // fix for production build\n  // ctx.res.clearCookie && ctx.res.clearCookie('token');\n\n\n  const authCookie = cookie.serialize('token', '', {\n    maxAge: -1\n  });\n  ctx.res.writeHead && ctx.res.writeHead(302, {\n    'Set-Cookie': authCookie,\n    Location: authenticate && authenticate === ROLE.STUDIO ? '/studio/login' : '/auth/login/user'\n  });\n  ctx.res.end && ctx.res.end();\n}\n\nasync function auth(ctx, authenticate) {\n  try {\n    if (false && !authenticate) return;\n    const {\n      store\n    } = ctx;\n    const state = store.getState();\n\n    if (state.auth && state.auth.loggedIn) {\n      return;\n    } // TODO - move to a service\n\n\n    const {\n      token,\n      role\n    } = nextCookie(ctx);\n\n    if (token && role) {\n      authService.setAuthHeaderToken(token);\n      let resp;\n\n      if (role === PERFORMER_ROLE) {\n        resp = await performerService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentPerformer(resp.data));\n      }\n\n      if (role === USER_ROLE) {\n        resp = await userService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentUser(resp.data));\n      }\n\n      if (role === ROLE.STUDIO) {\n        resp = await studioService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentStudio(resp.data));\n      } // TODO - check permission\n\n\n      store.dispatch(loginSuccess());\n    } else if (authenticate) {\n      redirectLogin(ctx, authenticate);\n      return;\n    }\n  } catch (e) {\n    if (authenticate) {\n      redirectLogin(ctx, authenticate);\n    }\n  }\n}\n\nasync function updateSettingsStore(ctx, settings) {\n  try {\n    const {\n      store\n    } = ctx;\n    store.dispatch(updateSettings({\n      tipSound: settings.tipSound,\n      metaKeywords: settings.metaKeywords,\n      metaDescription: settings.metaDescription,\n      siteName: settings.siteName,\n      logoUrl: settings.logoUrl,\n      defaultOfflineModelImage: settings.defaultOfflineModelImage,\n      defaultPrivateCallImage: settings.defaultPrivateCallImage,\n      defaultGroupChatImage: settings.defaultGroupChatImage\n    }));\n    store.dispatch(getBannersSuccess(settings.banners));\n    store.dispatch(updateUIValue({\n      placeholderLoginUrl: settings.placeholderLoginUrl,\n      placeholderAvatarUrl: settings.placeholderAvatarUrl,\n      logo: settings.logoUrl,\n      siteName: settings.siteName,\n      menus: settings.menus,\n      footerContent: settings.footerContent,\n      currencySymbol: settings.currencySymbol,\n      singularTextModel: settings.singularTextModel,\n      pluralTextModel: settings.pluralTextModel,\n      popup18Enabled: settings.popup18Enabled,\n      popup18ContentId: settings.popup18ContentId,\n      googleReCaptchaEnabled: settings.googleReCaptchaEnabled,\n      googleReCaptchaSiteKey: settings.googleReCaptchaSiteKey\n    }));\n    store.dispatch(updateLiveStreamSettings(pick(settings, [SETTING_KEYS.VIEWER_URL, SETTING_KEYS.PUBLISHER_URL, SETTING_KEYS.SUBSCRIBER_URL, SETTING_KEYS.OPTION_FOR_BROADCAST, SETTING_KEYS.OPTION_FOR_PRIVATE, SETTING_KEYS.OPTION_FOR_GROUP, SETTING_KEYS.DEFAULT_OFFLINE_MODEL_IMAGE, SETTING_KEYS.DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE, SETTING_KEYS.DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE, SETTING_KEYS.ANT_MEDIA_APPNAME]))); // TODO - update others like meta data\n  } catch (e) {\n    // TODO - implement me\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\nconst publicConfig = {};\n\nclass Application extends App {\n  // TODO - consider if we need to use get static props in children component instead?\n  // or check in render?\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // load configuration from ENV and put to config\n    if (!false) {\n      // eslint-disable-next-line global-require\n      const dotenv = require('dotenv');\n\n      const myEnv = dotenv.config().parsed; // publish to server config with app\n\n      setGlobalConfig(myEnv); // load public config and api-endpoint?\n\n      Object.keys(myEnv).forEach(key => {\n        if (key.indexOf('NEXT_PUBLIC_') === 0) {\n          publicConfig[key] = myEnv[key];\n        }\n      });\n    } // won't check auth for un-authenticated page such as login, register\n    // use static field in the component\n\n\n    await auth(ctx, Component.authenticate); // server side to load settings, once time only\n\n    let settings = {};\n\n    if (!false) {\n      var _banner$data;\n\n      const [_settings, _banner] = await Promise.all([settingService.all(), bannerService.search({\n        status: 'active'\n      })]); // TODO encrypt, decypt header script, footer script or other info if needed\n\n      settings = _settings.data || {};\n      await updateSettingsStore(ctx, _objectSpread(_objectSpread({}, settings), {}, {\n        banners: (_banner === null || _banner === void 0 ? void 0 : (_banner$data = _banner.data) === null || _banner$data === void 0 ? void 0 : _banner$data.data) || []\n      }));\n    }\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({\n        ctx\n      });\n    } // TODO - overwrite for ui config by using redux-store\n\n\n    return {\n      settings,\n      pageProps,\n      layout: Component.layout,\n      config: publicConfig\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    setGlobalConfig(this.props.config);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store,\n      settings\n    } = this.props;\n    const {\n      layout\n    } = Component;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, typeof settings.siteName === 'string' && settings.siteName.length > 0 ? settings.siteName : 'Application'), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, width=device-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    })), __jsx(Socket, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    }, __jsx(BaseLayout, {\n      layout: layout,\n      maintenanceMode: settings.maintenanceMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\n_defineProperty(Application, \"settingQuery\", false);\n\nexport default withReduxSaga(Application);","map":{"version":3,"sources":["E:/programData/React/user/pages/_app.tsx"],"names":["App","React","Provider","nextCookie","withReduxSaga","BaseLayout","authService","userService","performerService","studioService","bannerService","Router","loginSuccess","updateCurrentUser","updateCurrentPerformer","settingService","updateCurrentStudio","updateUIValue","PERFORMER_ROLE","USER_ROLE","Socket","updateSettings","getBannersSuccess","SETTING_KEYS","updateLiveStreamSettings","pick","Head","cookie","setGlobalConfig","ROLE","STUDIO","PERFORMER","USER","redirectLogin","ctx","authenticate","removeToken","removeRemember","push","authCookie","serialize","maxAge","res","writeHead","Location","end","auth","store","state","getState","loggedIn","token","role","setAuthHeaderToken","resp","me","Authorization","dispatch","data","e","updateSettingsStore","settings","tipSound","metaKeywords","metaDescription","siteName","logoUrl","defaultOfflineModelImage","defaultPrivateCallImage","defaultGroupChatImage","banners","placeholderLoginUrl","placeholderAvatarUrl","logo","menus","footerContent","currencySymbol","singularTextModel","pluralTextModel","popup18Enabled","popup18ContentId","googleReCaptchaEnabled","googleReCaptchaSiteKey","VIEWER_URL","PUBLISHER_URL","SUBSCRIBER_URL","OPTION_FOR_BROADCAST","OPTION_FOR_PRIVATE","OPTION_FOR_GROUP","DEFAULT_OFFLINE_MODEL_IMAGE","DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE","DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE","ANT_MEDIA_APPNAME","console","log","publicConfig","Application","getInitialProps","Component","dotenv","require","myEnv","config","parsed","Object","keys","forEach","key","indexOf","_settings","_banner","Promise","all","search","status","pageProps","layout","constructor","props","render","length","maintenanceMode"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport { Store } from 'redux';\nimport BaseLayout from '@layouts/base-layout';\nimport {\n  authService,\n  userService,\n  performerService,\n  studioService,\n  bannerService\n} from '@services/index';\nimport Router from 'next/router';\nimport { NextPageContext } from 'next';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentPerformer } from '@redux/performer/actions';\nimport { settingService } from '@services/setting.service';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { PERFORMER_ROLE, USER_ROLE, IResponse } from 'src/services/api-request';\nimport { Socket } from 'src/socket';\nimport '../style/index.less';\nimport { updateSettings } from '@redux/settings/actions';\nimport { getBannersSuccess } from '@redux/banner/actions';\nimport { SETTING_KEYS } from 'src/constants';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { pick } from 'lodash';\nimport Head from 'next/head';\nimport cookie from 'cookie';\nimport { IUIConfig } from 'src/interfaces';\nimport { setGlobalConfig } from '@services/config';\n\ndeclare global {\n  interface Window {\n    ReactSocketIO: any;\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n  }\n}\n\nexport const ROLE = {\n  STUDIO: 'studio',\n  PERFORMER: 'performer',\n  USER: 'user'\n};\nfunction redirectLogin(ctx: NextPageContext, authenticate: boolean | string) {\n  if (process.browser) {\n    authService.removeToken();\n    authService.removeRemember();\n    if (authenticate && authenticate === ROLE.STUDIO) {\n      Router.push('/studio/login');\n      return;\n    }\n\n    Router.push('/auth/login/user');\n    return;\n  }\n\n  // fix for production build\n  // ctx.res.clearCookie && ctx.res.clearCookie('token');\n  const authCookie = cookie.serialize('token', '', {\n    maxAge: -1\n  });\n  ctx.res.writeHead\n    && ctx.res.writeHead(302, {\n      'Set-Cookie': authCookie,\n      Location:\n        authenticate && authenticate === ROLE.STUDIO\n          ? '/studio/login'\n          : '/auth/login/user'\n    });\n  ctx.res.end && ctx.res.end();\n}\n\nasync function auth(ctx: NextPageContext, authenticate: boolean | string) {\n  try {\n    if (process.browser && !authenticate) return;\n\n    const { store } = ctx;\n    const state = store.getState();\n    if (state.auth && state.auth.loggedIn) {\n      return;\n    }\n\n    // TODO - move to a service\n    const { token, role } = nextCookie(ctx);\n    if (token && role) {\n      authService.setAuthHeaderToken(token);\n      let resp: IResponse<any>;\n      if (role === PERFORMER_ROLE) {\n        resp = await performerService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentPerformer(resp.data));\n      }\n\n      if (role === USER_ROLE) {\n        resp = await userService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentUser(resp.data));\n      }\n\n      if (role === ROLE.STUDIO) {\n        resp = await studioService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentStudio(resp.data));\n      }\n\n      // TODO - check permission\n      store.dispatch(loginSuccess());\n    } else if (authenticate) {\n      redirectLogin(ctx, authenticate);\n      return;\n    }\n  } catch (e) {\n    if (authenticate) {\n      redirectLogin(ctx, authenticate);\n    }\n  }\n}\n\nasync function updateSettingsStore(ctx: NextPageContext, settings) {\n  try {\n    const { store } = ctx;\n    store.dispatch(updateSettings({\n      tipSound: settings.tipSound,\n      metaKeywords: settings.metaKeywords,\n      metaDescription: settings.metaDescription,\n      siteName: settings.siteName,\n      logoUrl: settings.logoUrl,\n      defaultOfflineModelImage: settings.defaultOfflineModelImage,\n      defaultPrivateCallImage: settings.defaultPrivateCallImage,\n      defaultGroupChatImage: settings.defaultGroupChatImage\n    }));\n    store.dispatch(getBannersSuccess(settings.banners));\n    store.dispatch(\n      updateUIValue({\n        placeholderLoginUrl: settings.placeholderLoginUrl,\n        placeholderAvatarUrl: settings.placeholderAvatarUrl,\n        logo: settings.logoUrl,\n        siteName: settings.siteName,\n        menus: settings.menus,\n        footerContent: settings.footerContent,\n        currencySymbol: settings.currencySymbol,\n        singularTextModel: settings.singularTextModel,\n        pluralTextModel: settings.pluralTextModel,\n        popup18Enabled: settings.popup18Enabled,\n        popup18ContentId: settings.popup18ContentId,\n        googleReCaptchaEnabled: settings.googleReCaptchaEnabled,\n        googleReCaptchaSiteKey: settings.googleReCaptchaSiteKey\n      })\n    );\n    store.dispatch(\n      updateLiveStreamSettings(\n        pick(settings, [\n          SETTING_KEYS.VIEWER_URL,\n          SETTING_KEYS.PUBLISHER_URL,\n          SETTING_KEYS.SUBSCRIBER_URL,\n          SETTING_KEYS.OPTION_FOR_BROADCAST,\n          SETTING_KEYS.OPTION_FOR_PRIVATE,\n          SETTING_KEYS.OPTION_FOR_GROUP,\n          SETTING_KEYS.DEFAULT_OFFLINE_MODEL_IMAGE,\n          SETTING_KEYS.DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE,\n          SETTING_KEYS.DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE,\n          SETTING_KEYS.ANT_MEDIA_APPNAME\n        ])\n      )\n    );\n    // TODO - update others like meta data\n  } catch (e) {\n    // TODO - implement me\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\ninterface AppComponent extends NextPageContext {\n  layout: string;\n}\n\ninterface IApp {\n  store: Store;\n  layout: string;\n  authenticate: boolean;\n  Component: AppComponent;\n  settings: IUIConfig;\n  config: any;\n}\n\nconst publicConfig = {} as any;\nclass Application extends App<IApp> {\n  static settingQuery = false;\n\n  // TODO - consider if we need to use get static props in children component instead?\n  // or check in render?\n  static async getInitialProps({ Component, ctx }) {\n    // load configuration from ENV and put to config\n    if (!process.browser) {\n      // eslint-disable-next-line global-require\n      const dotenv = require('dotenv');\n      const myEnv = dotenv.config().parsed;\n\n      // publish to server config with app\n      setGlobalConfig(myEnv);\n\n      // load public config and api-endpoint?\n      Object.keys(myEnv).forEach((key) => {\n        if (key.indexOf('NEXT_PUBLIC_') === 0) {\n          publicConfig[key] = myEnv[key];\n        }\n      });\n    }\n    // won't check auth for un-authenticated page such as login, register\n    // use static field in the component\n    await auth(ctx, Component.authenticate);\n\n    // server side to load settings, once time only\n    let settings = {};\n    if (!process.browser) {\n      const [_settings, _banner] = await Promise.all([\n        settingService.all(),\n        bannerService.search({ status: 'active' })\n      ]);\n      // TODO encrypt, decypt header script, footer script or other info if needed\n      settings = _settings.data || {};\n      await updateSettingsStore(ctx, {\n        ...settings,\n        banners: _banner?.data?.data || []\n      });\n    }\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    // TODO - overwrite for ui config by using redux-store\n    return {\n      settings,\n      pageProps,\n      layout: Component.layout,\n      config: publicConfig\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    setGlobalConfig(this.props.config);\n  }\n\n  render() {\n    const {\n      Component, pageProps, store, settings\n    } = this.props;\n\n    const { layout } = Component;\n    return (\n      <Provider store={store}>\n        <Head>\n          <title>\n            {typeof settings.siteName === 'string'\n            && settings.siteName.length > 0\n              ? settings.siteName\n              : 'Application'}\n          </title>\n          <meta\n            name=\"viewport\"\n            content=\"initial-scale=1.0, width=device-width\"\n          />\n        </Head>\n        <Socket>\n          <BaseLayout\n            layout={layout}\n            maintenanceMode={settings.maintenanceMode}\n          >\n            <Component {...pageProps} />\n          </BaseLayout>\n        </Socket>\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxSaga(Application);\n"]},"metadata":{},"sourceType":"module"}