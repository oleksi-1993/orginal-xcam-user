{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\nexport var StudioService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(StudioService, _APIRequest);\n\n  var _super = _createSuper(StudioService);\n\n  function StudioService() {\n    _classCallCheck(this, StudioService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StudioService, [{\n    key: \"me\",\n    value: function me(headers) {\n      return this.get('/studio/me', headers);\n    }\n  }, {\n    key: \"update\",\n    value: function update(payload) {\n      return this.put('/studio/update', payload);\n    }\n  }, {\n    key: \"updatePaymentInfo\",\n    value: function updatePaymentInfo(payload) {\n      return this.post('/studio/bank-transfer/update', payload);\n    }\n  }, {\n    key: \"updateDirectDepost\",\n    value: function updateDirectDepost(payload) {\n      return this.post('/studio/direct-deposit/update', payload);\n    }\n  }, {\n    key: \"updatePaxum\",\n    value: function updatePaxum(payload) {\n      return this.post('/studio/paxum/update', payload);\n    }\n  }, {\n    key: \"updateBitpay\",\n    value: function updateBitpay(payload) {\n      return this.post('/studio/bitpay/update', payload);\n    }\n  }, {\n    key: \"getCommission\",\n    value: function getCommission() {\n      return this.get('/settings/studio/commission');\n    }\n  }, {\n    key: \"addModel\",\n    value: function addModel(payload) {\n      return this.post('/studio/members', payload);\n    }\n  }, {\n    key: \"getMembers\",\n    value: function getMembers(params) {\n      return this.get(this.buildUrl('/studio/members', params));\n    }\n  }, {\n    key: \"getMemberCommissions\",\n    value: function getMemberCommissions(params) {\n      return this.get(this.buildUrl('/studio/commission', params));\n    }\n  }, {\n    key: \"updateMemberCommission\",\n    value: function updateMemberCommission(id, payload) {\n      return this.put(\"/studio/commission/member/\".concat(id), payload);\n    }\n  }, {\n    key: \"getPerformerRequest\",\n    value: function getPerformerRequest(params) {\n      return this.get(this.buildUrl('/payout-requests/studio/performer-request', params));\n    }\n  }, {\n    key: \"updateStatusPerformerRequest\",\n    value: function updateStatusPerformerRequest(id, payload) {\n      return this.put(\"/payout-requests/studio/update/\".concat(id), _objectSpread({}, payload));\n    }\n  }, {\n    key: \"updateMemberStatus\",\n    value: function updateMemberStatus(id, status) {\n      return this.post(\"/studio/members/\".concat(id, \"/\").concat(status));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats() {\n      return this.get('/studio/stats');\n    }\n  }, {\n    key: \"getDocumentsUploadUrl\",\n    value: function getDocumentsUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/studio/documents/upload\");\n    }\n  }]);\n\n  return StudioService;\n}(APIRequest);\nexport var studioService = new StudioService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/studio.service.ts"],"names":["APIRequest","getGlobalConfig","StudioService","headers","get","payload","put","post","params","buildUrl","id","status","config","NEXT_PUBLIC_API_ENDPOINT","studioService"],"mappings":";;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAAsC,eAAtC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,YAAGC,OAAH,EAAqE;AACnE,aAAO,KAAKC,GAAL,CAAS,YAAT,EAAuBD,OAAvB,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,gBAAOE,OAAP,EAAqB;AACnB,aAAO,KAAKC,GAAL,CAAS,gBAAT,EAA2BD,OAA3B,CAAP;AACD;AAPH;AAAA;AAAA,WASE,2BAAkBA,OAAlB,EAAwD;AACtD,aAAO,KAAKE,IAAL,CAAU,8BAAV,EAA0CF,OAA1C,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,4BAAmBA,OAAnB,EAAyD;AACvD,aAAO,KAAKE,IAAL,CAAU,+BAAV,EAA2CF,OAA3C,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,qBAAYA,OAAZ,EAAkD;AAChD,aAAO,KAAKE,IAAL,CAAU,sBAAV,EAAkCF,OAAlC,CAAP;AACD;AAnBH;AAAA;AAAA,WAqBE,sBAAaA,OAAb,EAAmD;AACjD,aAAO,KAAKE,IAAL,CAAU,uBAAV,EAAmCF,OAAnC,CAAP;AACD;AAvBH;AAAA;AAAA,WAyBE,yBAAgB;AACd,aAAO,KAAKD,GAAL,CAAS,6BAAT,CAAP;AACD;AA3BH;AAAA;AAAA,WA6BE,kBAASC,OAAT,EAAkB;AAChB,aAAO,KAAKE,IAAL,CAAU,iBAAV,EAA6BF,OAA7B,CAAP;AACD;AA/BH;AAAA;AAAA,WAiCE,oBAAWG,MAAX,EAA+C;AAC7C,aAAO,KAAKJ,GAAL,CAAS,KAAKK,QAAL,CAAc,iBAAd,EAAiCD,MAAjC,CAAT,CAAP;AACD;AAnCH;AAAA;AAAA,WAqCE,8BAAqBA,MAArB,EAAyD;AACvD,aAAO,KAAKJ,GAAL,CAAS,KAAKK,QAAL,CAAc,oBAAd,EAAoCD,MAApC,CAAT,CAAP;AACD;AAvCH;AAAA;AAAA,WAyCE,gCAAuBE,EAAvB,EAAmCL,OAAnC,EAAiD;AAC/C,aAAO,KAAKC,GAAL,qCAAsCI,EAAtC,GAA4CL,OAA5C,CAAP;AACD;AA3CH;AAAA;AAAA,WA6CE,6BAAoBG,MAApB,EAAwD;AACtD,aAAO,KAAKJ,GAAL,CACL,KAAKK,QAAL,CAAc,2CAAd,EAA2DD,MAA3D,CADK,CAAP;AAGD;AAjDH;AAAA;AAAA,WAmDE,sCAA6BE,EAA7B,EAAyCL,OAAzC,EAAkD;AAChD,aAAO,KAAKC,GAAL,0CAA2CI,EAA3C,qBAAsDL,OAAtD,EAAP;AACD;AArDH;AAAA;AAAA,WAuDE,4BAAmBK,EAAnB,EAA+BC,MAA/B,EAA+C;AAC7C,aAAO,KAAKJ,IAAL,2BAA6BG,EAA7B,cAAmCC,MAAnC,EAAP;AACD;AAzDH;AAAA;AAAA,WA2DE,iBAAQ;AACN,aAAO,KAAKP,GAAL,CAAS,eAAT,CAAP;AACD;AA7DH;AAAA;AAAA,WA+DE,iCAAwB;AACtB,UAAMQ,MAAM,GAAGX,eAAe,EAA9B;AACA,uBAAUW,MAAM,CAACC,wBAAjB;AACD;AAlEH;;AAAA;AAAA,EAAmCb,UAAnC;AAqEA,OAAO,IAAMc,aAAa,GAAG,IAAIZ,aAAJ,EAAtB","sourcesContent":["import { IStudio } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\nimport { getGlobalConfig } from './config';\n\nexport class StudioService extends APIRequest {\n  me(headers?: { [key: string]: string }): Promise<IResponse<IStudio>> {\n    return this.get('/studio/me', headers);\n  }\n\n  update(payload: any) {\n    return this.put('/studio/update', payload);\n  }\n\n  updatePaymentInfo(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/bank-transfer/update', payload);\n  }\n\n  updateDirectDepost(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/direct-deposit/update', payload);\n  }\n\n  updatePaxum(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/paxum/update', payload);\n  }\n\n  updateBitpay(payload): Promise<IResponse<IStudio>> {\n    return this.post('/studio/bitpay/update', payload);\n  }\n\n  getCommission() {\n    return this.get('/settings/studio/commission');\n  }\n\n  addModel(payload) {\n    return this.post('/studio/members', payload);\n  }\n\n  getMembers(params?: { [key: string]: string }) {\n    return this.get(this.buildUrl('/studio/members', params));\n  }\n\n  getMemberCommissions(params?: { [key: string]: string }) {\n    return this.get(this.buildUrl('/studio/commission', params));\n  }\n\n  updateMemberCommission(id: string, payload: any) {\n    return this.put(`/studio/commission/member/${id}`, payload);\n  }\n\n  getPerformerRequest(params?: { [key: string]: string }) {\n    return this.get(\n      this.buildUrl('/payout-requests/studio/performer-request', params)\n    );\n  }\n\n  updateStatusPerformerRequest(id: string, payload) {\n    return this.put(`/payout-requests/studio/update/${id}`, { ...payload });\n  }\n\n  updateMemberStatus(id: string, status: string) {\n    return this.post(`/studio/members/${id}/${status}`);\n  }\n\n  stats() {\n    return this.get('/studio/stats');\n  }\n\n  getDocumentsUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/studio/documents/upload`;\n  }\n}\n\nexport const studioService = new StudioService();\n"]},"metadata":{},"sourceType":"module"}