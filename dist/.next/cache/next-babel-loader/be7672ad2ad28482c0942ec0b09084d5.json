{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\studio\\\\studio-login-form.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Form, Input, Button, Checkbox, Alert, Space, message } from 'antd';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport { getResponseError } from '@lib/utils';\nimport FormFooterLogin from '@components/auth/login/footer-login-form';\nimport Recaptcha from 'src/components/common/recaptcha';\nimport { utilsService } from '@services/utils.service';\nvar FormItem = Form.Item;\n\nvar StudioFormLogin = function StudioFormLogin(_ref) {\n  _s();\n\n  var requesting = _ref.requesting,\n      submit = _ref.submit,\n      error = _ref.error,\n      success = _ref.success,\n      onRemember = _ref.onRemember,\n      singularTextModel = _ref.singularTextModel,\n      googleReCaptchaEnabled = _ref.googleReCaptchaEnabled,\n      googleReCaptchaSiteKey = _ref.googleReCaptchaSiteKey;\n  var reCAPTCHARef = /*#__PURE__*/React.createRef();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reCAPTCHAError = _React$useState2[0],\n      setreCAPTCHAError = _React$useState2[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var onPressEnter = function onPressEnter() {\n    form.submit();\n  };\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var token, err;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!googleReCaptchaEnabled) {\n                _context.next = 10;\n                break;\n              }\n\n              token = reCAPTCHARef.current.getValue(); // const token = await reCAPTCHARef.current.executeAsync();\n\n              if (token) {\n                _context.next = 6;\n                break;\n              }\n\n              setreCAPTCHAError('Please verify that you are not a robot.');\n              return _context.abrupt(\"return\");\n\n            case 6:\n              reCAPTCHARef.current.reset();\n              setreCAPTCHAError('');\n              _context.next = 10;\n              return utilsService.verifyRecaptcha(token);\n\n            case 10:\n              submit(data);\n              _context.next = 20;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (googleReCaptchaEnabled && reCAPTCHARef.current.getValue()) {\n                reCAPTCHARef.current.reset();\n              }\n\n              _context.next = 18;\n              return Promise.resolve(_context.t0);\n\n            case 18:\n              err = _context.sent;\n              message.error(getResponseError(err));\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Form, {\n    layout: \"vertical\",\n    onFinish: onFinish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Studio Sign-in\"), __jsx(FormItem, {\n    hasFeedback: true,\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your email!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    onPressEnter: onPressEnter,\n    placeholder: \"youremail@example.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), __jsx(FormItem, {\n    hasFeedback: true,\n    label: __jsx(Space, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Password\")),\n    className: \"input-password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 6,\n      max: 14,\n      message: '6-14 characters'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Input.Password, {\n    onPressEnter: onPressEnter,\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), __jsx(FormItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(Recaptcha, {\n    ref: reCAPTCHARef,\n    googleReCaptchaEnabled: googleReCaptchaEnabled,\n    googleReCaptchaSiteKey: googleReCaptchaSiteKey,\n    error: reCAPTCHAError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '100%',\n      margin: '15px 0'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    onChange: function onChange(e) {\n      return onRemember(e.target.checked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Remember me\"), __jsx(Link, {\n    href: \"/auth/forgot-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Forgot password?\"))), (error || success) && __jsx(FormItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, error && __jsx(Alert, {\n    message: \"Error\",\n    description: getResponseError(error),\n    type: \"error\",\n    showIcon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), success && __jsx(Alert, {\n    message: \"Login success\",\n    type: \"success\",\n    description: \"Redirecting...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), __jsx(FormItem, {\n    className: \"row-button-auth\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: requesting,\n    loading: requesting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Sign-in\")), __jsx(FormFooterLogin, {\n    account: \"studio\",\n    singularTextModel: singularTextModel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(StudioFormLogin, \"ik+CKPQ1iYUNus7dTl3MWHHi3is=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = StudioFormLogin;\nStudioFormLogin.defaultProps = {\n  requesting: false,\n  error: '',\n  success: false,\n  singularTextModel: ''\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.ui);\n};\n\nvar mapDispatchs = {\n  updateUIValue: updateUIValue\n};\nStudioFormLogin.defaultProps = {\n  googleReCaptchaEnabled: false,\n  googleReCaptchaSiteKey: ''\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioFormLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"StudioFormLogin\");","map":{"version":3,"sources":["E:/programData/React/user/src/components/studio/studio-login-form.tsx"],"names":["React","Link","Form","Input","Button","Checkbox","Alert","Space","message","connect","updateUIValue","getResponseError","FormFooterLogin","Recaptcha","utilsService","FormItem","Item","StudioFormLogin","requesting","submit","error","success","onRemember","singularTextModel","googleReCaptchaEnabled","googleReCaptchaSiteKey","reCAPTCHARef","createRef","useState","reCAPTCHAError","setreCAPTCHAError","useForm","form","onPressEnter","onFinish","data","token","current","getValue","reset","verifyRecaptcha","Promise","resolve","err","type","required","min","max","display","justifyContent","width","margin","e","target","checked","defaultProps","mapStateToProps","state","ui","mapDispatchs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { ILogin } from 'src/interfaces';\nimport {\n  Form, Input, Button, Checkbox, Alert, Space, message\n} from 'antd';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport { getResponseError } from '@lib/utils';\nimport FormFooterLogin from '@components/auth/login/footer-login-form';\nimport { ReCAPTCHA } from 'react-google-recaptcha';\nimport Recaptcha from 'src/components/common/recaptcha';\nimport { utilsService } from '@services/utils.service';\n\ninterface IProps {\n  requesting?: boolean;\n  submit(data: ILogin): Function;\n  error?: string;\n  success?: boolean;\n  onRemember: Function;\n  singularTextModel?: string;\n  googleReCaptchaEnabled?: boolean;\n  googleReCaptchaSiteKey?: string;\n}\n\nconst FormItem = Form.Item;\n\nconst StudioFormLogin = ({\n  requesting,\n  submit,\n  error,\n  success,\n  onRemember,\n  singularTextModel,\n  googleReCaptchaEnabled,\n  googleReCaptchaSiteKey\n}: IProps) => {\n  const reCAPTCHARef = React.createRef<ReCAPTCHA>();\n  const [reCAPTCHAError, setreCAPTCHAError] = React.useState('');\n  const [form] = Form.useForm();\n  const onPressEnter = () => {\n    form.submit();\n  };\n  const onFinish = async (data: ILogin) => {\n    try {\n      if (googleReCaptchaEnabled) {\n        const token = reCAPTCHARef.current.getValue();\n        // const token = await reCAPTCHARef.current.executeAsync();\n        if (!token) {\n          setreCAPTCHAError('Please verify that you are not a robot.');\n          return;\n        }\n\n        reCAPTCHARef.current.reset();\n        setreCAPTCHAError('');\n        await utilsService.verifyRecaptcha(token);\n      }\n\n      submit(data);\n    } catch (e) {\n      if (googleReCaptchaEnabled && reCAPTCHARef.current.getValue()) {\n        reCAPTCHARef.current.reset();\n      }\n\n      const err = await Promise.resolve(e);\n      message.error(getResponseError(err));\n    }\n  };\n  return (\n    <Form layout=\"vertical\" onFinish={onFinish}>\n      <h1>Studio Sign-in</h1>\n      <FormItem\n        hasFeedback\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          { type: 'email', message: 'The input is not valid E-mail!' },\n          { required: true, message: 'Please input your email!' }\n        ]}\n      >\n        <Input\n          onPressEnter={onPressEnter}\n          placeholder=\"youremail@example.com\"\n        />\n      </FormItem>\n      <FormItem\n        hasFeedback\n        label={(\n          <Space>\n            <span>Password</span>\n          </Space>\n        )}\n        className=\"input-password\"\n        name=\"password\"\n        rules={[\n          { required: true, message: 'Please input your password!' },\n          {\n            min: 6,\n            max: 14,\n            message: '6-14 characters'\n          }\n        ]}\n      >\n        <Input.Password\n          onPressEnter={onPressEnter}\n          placeholder=\"Password\"\n        />\n      </FormItem>\n      <FormItem>\n        <Recaptcha\n          ref={reCAPTCHARef}\n          googleReCaptchaEnabled={googleReCaptchaEnabled}\n          googleReCaptchaSiteKey={googleReCaptchaSiteKey}\n          error={reCAPTCHAError}\n        />\n      </FormItem>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%',\n          margin: '15px 0'\n        }}\n      >\n        <Checkbox onChange={(e) => onRemember(e.target.checked)}>\n          Remember me\n        </Checkbox>\n        <Link href=\"/auth/forgot-password\">\n          <a>Forgot password?</a>\n        </Link>\n      </div>\n      {(error || success) && (\n        <FormItem>\n          {error && (\n            <Alert\n              message=\"Error\"\n              description={getResponseError(error)}\n              type=\"error\"\n              showIcon\n            />\n          )}\n          {success && (\n            <Alert\n              message=\"Login success\"\n              type=\"success\"\n              description=\"Redirecting...\"\n            />\n          )}\n        </FormItem>\n      )}\n      <FormItem className=\"row-button-auth\">\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          disabled={requesting}\n          loading={requesting}\n        >\n          Sign-in\n        </Button>\n      </FormItem>\n      <FormFooterLogin account=\"studio\" singularTextModel={singularTextModel} />\n    </Form>\n  );\n};\nStudioFormLogin.defaultProps = {\n  requesting: false,\n  error: '',\n  success: false,\n  singularTextModel: ''\n};\nconst mapStateToProps = (state) => ({\n  ...state.ui\n});\nconst mapDispatchs = { updateUIValue };\nStudioFormLogin.defaultProps = {\n  googleReCaptchaEnabled: false,\n  googleReCaptchaSiteKey: ''\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioFormLogin);\n"]},"metadata":{},"sourceType":"module"}