{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { logout } from '@redux/auth/actions';\nimport { updateCurrentStudio, setUpdatingStudio, updateStudioSuccess, updateStudioFail, getMembersSearching, getMembersFail, getMembersSuccess, updateMemberStatus, getMembersCommissionsSuccess, getMembersCommissionsFail, getMembersCommissionsSearching, updateMemberCommision, setGettingStudioEarning, getStudioEarningSuccess, getStudioEarningFail, getPerformerRequestSuccess, getPerformerRequestFail, setGettingPerformerRequest, getStudioStatsSuccess, updateTotalPerformer, getStudioPayoutRequestFail, getStudioPayoutRequestSuccess, setGettingStudioPayoutRequest } from './actions';\nvar initialState = {\n  current: {\n    _id: null,\n    avatar: '/default-user-icon.png',\n    stats: {},\n    balance: 0,\n    name: '',\n    email: ''\n  },\n  updatingStudio: false,\n  members: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  commissions: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  performerRequests: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  earning: {\n    data: [],\n    stats: null,\n    total: 0,\n    searching: false,\n    success: false,\n    error: null,\n    fromDate: null,\n    toDate: null\n  },\n  studioPayout: {\n    data: [],\n    total: 0,\n    searching: false,\n    success: false,\n    error: null\n  },\n  updateStudioSuccess: false,\n  updateStudioError: null\n};\nvar studioReducers = [{\n  on: updateCurrentStudio,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: data.payload\n    });\n  }\n}, {\n  on: updateStudioSuccess,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: data.payload,\n      updateStudioSuccess: true,\n      updatingStudio: false,\n      updateStudioError: null\n    });\n  }\n}, {\n  on: updateStudioFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updateStudioSuccess: false,\n      updatingStudio: false,\n      updateStudioError: data.payload\n    });\n  }\n}, {\n  on: setUpdatingStudio,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updatingStudio: true,\n      updateStudioSuccess: false\n    });\n  }\n}, {\n  on: getMembersSearching,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      members: _objectSpread(_objectSpread({}, state.members), {}, {\n        searching: true,\n        error: null\n      })\n    });\n  }\n}, {\n  on: getMembersSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      members: {\n        searching: false,\n        success: true,\n        data: action.payload.data,\n        total: action.payload.total,\n        error: null\n      }\n    });\n  }\n}, {\n  on: getMembersFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      members: _objectSpread(_objectSpread({}, state.members), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n}, {\n  on: updateMemberStatus,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      members: _objectSpread(_objectSpread({}, state.members), {}, {\n        data: state.members.data.map(function (member) {\n          return _objectSpread(_objectSpread({}, member), {}, {\n            status: member._id === action.payload ? member.status === 'active' ? 'inactive' : 'active' : member.status\n          });\n        })\n      })\n    });\n  }\n}, {\n  on: getMembersCommissionsSearching,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      commissions: _objectSpread(_objectSpread({}, state.commissions), {}, {\n        searching: true,\n        error: null\n      })\n    });\n  }\n}, {\n  on: getMembersCommissionsSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      commissions: {\n        searching: false,\n        success: true,\n        data: action.payload.data,\n        total: action.payload.total,\n        error: null\n      }\n    });\n  }\n}, {\n  on: getMembersCommissionsFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      commissions: _objectSpread(_objectSpread({}, state.commissions), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n}, {\n  on: updateMemberCommision,\n  reducer: function reducer(state, action) {\n    var _action$payload = action.payload,\n        id = _action$payload.id,\n        memberCommission = _action$payload.memberCommission;\n    var commissions = state.commissions;\n    var commission = commissions.data.find(function (c) {\n      return c._id === id;\n    });\n\n    if (commission) {\n      commission.commissionSetting.memberCommission = memberCommission;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      commissions: _objectSpread(_objectSpread({}, state.commissions), {}, {\n        data: _toConsumableArray(commissions.data)\n      })\n    });\n  }\n}, {\n  on: getStudioEarningSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      earning: {\n        data: action.payload.data.data,\n        total: action.payload.data.total,\n        fromDate: action.payload.fromDate,\n        toDate: action.payload.toDate,\n        stats: action.payload.stats,\n        searching: false,\n        success: true,\n        error: null\n      }\n    });\n  }\n}, {\n  on: getStudioEarningFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      earning: _objectSpread(_objectSpread({}, state.earning), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n}, {\n  on: setGettingStudioEarning,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      earning: _objectSpread(_objectSpread({}, state.earning), {}, {\n        searching: true,\n        success: false\n      })\n    });\n  }\n}, {\n  on: setGettingPerformerRequest,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerRequests: _objectSpread(_objectSpread({}, state.performerRequests), {}, {\n        searching: true,\n        error: null\n      })\n    });\n  }\n}, {\n  on: getPerformerRequestSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerRequests: {\n        searching: false,\n        success: true,\n        data: action.payload.data,\n        total: action.payload.total,\n        error: null\n      }\n    });\n  }\n}, {\n  on: getPerformerRequestFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerRequests: _objectSpread(_objectSpread({}, state.performerRequests), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n}, {\n  on: logout,\n  reducer: function reducer() {\n    return _objectSpread({}, initialState);\n  }\n}, {\n  on: getStudioStatsSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: _objectSpread(_objectSpread({}, state.current), {}, {\n        stats: action.payload\n      })\n    });\n  }\n}, {\n  on: updateTotalPerformer,\n  reducer: function reducer(state, action) {\n    var current = state.current;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      stats: _objectSpread(_objectSpread({}, state.stats), {}, {\n        totalPerformer: current.stats.totalPerformer + action.payload\n      })\n    });\n  }\n}, // studio payout request\n{\n  on: getStudioPayoutRequestSuccess,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      studioPayout: {\n        data: action.payload.data,\n        total: action.payload.total,\n        searching: false,\n        success: true,\n        error: null\n      }\n    });\n  }\n}, {\n  on: getStudioPayoutRequestFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      studioPayout: _objectSpread(_objectSpread({}, state.studioPayout), {}, {\n        searching: false,\n        success: false,\n        error: action.payload\n      })\n    });\n  }\n}, {\n  on: setGettingStudioPayoutRequest,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      studioPayout: _objectSpread(_objectSpread({}, state.studioPayout), {}, {\n        searching: true,\n        error: null\n      })\n    });\n  }\n}];\nexport default merge({}, createReducers('studio', [studioReducers], initialState));","map":{"version":3,"sources":["E:/programData/React/user/src/redux/studio/reducers.ts"],"names":["merge","createReducers","logout","updateCurrentStudio","setUpdatingStudio","updateStudioSuccess","updateStudioFail","getMembersSearching","getMembersFail","getMembersSuccess","updateMemberStatus","getMembersCommissionsSuccess","getMembersCommissionsFail","getMembersCommissionsSearching","updateMemberCommision","setGettingStudioEarning","getStudioEarningSuccess","getStudioEarningFail","getPerformerRequestSuccess","getPerformerRequestFail","setGettingPerformerRequest","getStudioStatsSuccess","updateTotalPerformer","getStudioPayoutRequestFail","getStudioPayoutRequestSuccess","setGettingStudioPayoutRequest","initialState","current","_id","avatar","stats","balance","name","email","updatingStudio","members","data","total","success","searching","error","commissions","performerRequests","earning","fromDate","toDate","studioPayout","updateStudioError","studioReducers","on","reducer","state","payload","action","map","member","status","id","memberCommission","commission","find","c","commissionSetting","totalPerformer"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { IReduxAction, IUser, IStats } from 'src/interfaces';\nimport { logout } from '@redux/auth/actions';\nimport {\n  updateCurrentStudio,\n  setUpdatingStudio,\n  updateStudioSuccess,\n  updateStudioFail,\n  getMembersSearching,\n  getMembersFail,\n  getMembersSuccess,\n  updateMemberStatus,\n  getMembersCommissionsSuccess,\n  getMembersCommissionsFail,\n  getMembersCommissionsSearching,\n  updateMemberCommision,\n  setGettingStudioEarning,\n  getStudioEarningSuccess,\n  getStudioEarningFail,\n  getPerformerRequestSuccess,\n  getPerformerRequestFail,\n  setGettingPerformerRequest,\n  getStudioStatsSuccess,\n  updateTotalPerformer,\n  getStudioPayoutRequestFail,\n  getStudioPayoutRequestSuccess,\n  setGettingStudioPayoutRequest\n} from './actions';\n\nconst initialState = {\n  current: {\n    _id: null,\n    avatar: '/default-user-icon.png',\n    stats: {},\n    balance: 0,\n    name: '',\n    email: ''\n  },\n  updatingStudio: false,\n  members: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  commissions: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  performerRequests: {\n    data: [],\n    total: 0,\n    success: false,\n    searching: false,\n    error: null\n  },\n  earning: {\n    data: [],\n    stats: null,\n    total: 0,\n    searching: false,\n    success: false,\n    error: null,\n    fromDate: null,\n    toDate: null\n  },\n  studioPayout: {\n    data: [],\n    total: 0,\n    searching: false,\n    success: false,\n    error: null\n  },\n  updateStudioSuccess: false,\n  updateStudioError: null\n};\n\nconst studioReducers = [\n  {\n    on: updateCurrentStudio,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        current: data.payload\n      };\n    }\n  },\n  {\n    on: updateStudioSuccess,\n    reducer(state: any, data: IReduxAction<IUser>) {\n      return {\n        ...state,\n        current: data.payload,\n        updateStudioSuccess: true,\n        updatingStudio: false,\n        updateStudioError: null\n      };\n    }\n  },\n  {\n    on: updateStudioFail,\n    reducer(state, data) {\n      return {\n        ...state,\n        updateStudioSuccess: false,\n        updatingStudio: false,\n        updateStudioError: data.payload\n      };\n    }\n  },\n  {\n    on: setUpdatingStudio,\n    reducer(state) {\n      return {\n        ...state,\n        updatingStudio: true,\n        updateStudioSuccess: false\n      };\n    }\n  },\n  {\n    on: getMembersSearching,\n    reducer(state) {\n      return {\n        ...state,\n        members: {\n          ...state.members,\n          searching: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getMembersSuccess,\n    reducer(state, action) {\n      return {\n        ...state,\n        members: {\n          searching: false,\n          success: true,\n          data: action.payload.data,\n          total: action.payload.total,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getMembersFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        members: {\n          ...state.members,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: updateMemberStatus,\n    reducer(state, action) {\n      return {\n        ...state,\n        members: {\n          ...state.members,\n          data: state.members.data.map((member) => ({\n            ...member,\n            status:\n              member._id === action.payload\n                ? (member.status === 'active' ? 'inactive' : 'active') : member.status\n          }))\n        }\n      };\n    }\n  },\n  {\n    on: getMembersCommissionsSearching,\n    reducer(state) {\n      return {\n        ...state,\n        commissions: {\n          ...state.commissions,\n          searching: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getMembersCommissionsSuccess,\n    reducer(state, action) {\n      return {\n        ...state,\n        commissions: {\n          searching: false,\n          success: true,\n          data: action.payload.data,\n          total: action.payload.total,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getMembersCommissionsFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        commissions: {\n          ...state.commissions,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: updateMemberCommision,\n    reducer(state, action) {\n      const { id, memberCommission } = action.payload;\n      const { commissions } = state;\n      const commission = commissions.data.find((c) => c._id === id);\n      if (commission) {\n        commission.commissionSetting.memberCommission = memberCommission;\n      }\n      return {\n        ...state,\n        commissions: {\n          ...state.commissions,\n          data: [...commissions.data]\n        }\n      };\n    }\n  },\n  {\n    on: getStudioEarningSuccess,\n    reducer(state: any, action: IReduxAction<any>) {\n      return {\n        ...state,\n        earning: {\n          data: action.payload.data.data,\n          total: action.payload.data.total,\n          fromDate: action.payload.fromDate,\n          toDate: action.payload.toDate,\n          stats: action.payload.stats,\n          searching: false,\n          success: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getStudioEarningFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        earning: {\n          ...state.earning,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: setGettingStudioEarning,\n    reducer(state) {\n      return {\n        ...state,\n        earning: {\n          ...state.earning,\n          searching: true,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: setGettingPerformerRequest,\n    reducer(state) {\n      return {\n        ...state,\n        performerRequests: {\n          ...state.performerRequests,\n          searching: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getPerformerRequestSuccess,\n    reducer(state, action) {\n      return {\n        ...state,\n        performerRequests: {\n          searching: false,\n          success: true,\n          data: action.payload.data,\n          total: action.payload.total,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getPerformerRequestFail,\n    reducer(state, action) {\n      return {\n        ...state,\n        performerRequests: {\n          ...state.performerRequests,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: logout,\n    reducer() {\n      return {\n        ...initialState\n      };\n    }\n  },\n  {\n    on: getStudioStatsSuccess,\n    reducer(state, action: IReduxAction<IStats>) {\n      return {\n        ...state,\n        current: {\n          ...state.current,\n          stats: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: updateTotalPerformer,\n    reducer(state, action: IReduxAction<number>) {\n      const { current } = state;\n      return {\n        ...state,\n        stats: {\n          ...state.stats,\n          totalPerformer: current.stats.totalPerformer + action.payload\n        }\n      };\n    }\n  },\n\n  // studio payout request\n  {\n    on: getStudioPayoutRequestSuccess,\n    reducer(state, action: IReduxAction<any>) {\n      return {\n        ...state,\n        studioPayout: {\n          data: action.payload.data,\n          total: action.payload.total,\n          searching: false,\n          success: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: getStudioPayoutRequestFail,\n    reducer(state, action: IReduxAction<any>) {\n      return {\n        ...state,\n        studioPayout: {\n          ...state.studioPayout,\n          searching: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: setGettingStudioPayoutRequest,\n    reducer(state) {\n      return {\n        ...state,\n        studioPayout: {\n          ...state.studioPayout,\n          searching: true,\n          error: null\n        }\n      };\n    }\n  }\n];\n\nexport default merge(\n  {},\n  createReducers('studio', [studioReducers], initialState)\n);\n"]},"metadata":{},"sourceType":"module"}