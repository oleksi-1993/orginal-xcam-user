{"ast":null,"code":"var _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\auth\\\\password-change.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Form, Button, Input } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  }\n};\n\nconst PasswordChange = ({\n  onFinish,\n  submiting\n}) => __jsx(Form, _extends({\n  layout: \"vertical\",\n  onFinish: onFinish\n}, formItemLayout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}), __jsx(Form.Item, {\n  name: \"prePassword\",\n  label: \"Old Password\",\n  rules: [{\n    required: true,\n    message: 'Please input your old password!'\n  }, {\n    min: 6,\n    max: 14,\n    message: '6-14 characters'\n  }],\n  hasFeedback: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, __jsx(Input.Password, {\n  placeholder: \"Old Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n})), __jsx(Form.Item, {\n  name: \"password\",\n  label: \"New Password\",\n  rules: [{\n    required: true,\n    message: 'Please input your password!'\n  }, {\n    min: 6,\n    max: 14,\n    message: '6-14 characters'\n  }],\n  hasFeedback: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, __jsx(Input.Password, {\n  placeholder: \"Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }\n})), __jsx(Form.Item, {\n  name: \"confirm\",\n  dependencies: ['password'],\n  hasFeedback: true,\n  label: \"Retype password\",\n  rules: [{\n    required: true,\n    message: 'Please confirm your password!'\n  }, ({\n    getFieldValue\n  }) => ({\n    validator(rule, value) {\n      if (!value || getFieldValue('password') === value) {\n        return Promise.resolve();\n      }\n\n      return Promise.reject(new Error('The two passwords that you entered do not match!'));\n    }\n\n  })],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }\n}, __jsx(Input.Password, {\n  placeholder: \"Confirm Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }\n})), __jsx(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }\n}, __jsx(Button, {\n  type: \"primary\",\n  htmlType: \"submit\",\n  loading: submiting,\n  disabled: submiting,\n  className: \"btn-submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }\n}, \"Save Changes\")));\n\nPasswordChange.defaultProps = {\n  submiting: false\n};\nexport default PasswordChange;","map":{"version":3,"sources":["E:/programData/React/user/src/components/auth/password-change.tsx"],"names":["Form","Button","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","PasswordChange","onFinish","submiting","required","message","min","max","getFieldValue","validator","rule","value","Promise","resolve","reject","Error","defaultProps"],"mappings":"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","sourcesContent":["import { Form, Button, Input } from 'antd';\n\ninterface P {\n  onFinish: (v) => void;\n  submiting?: boolean;\n}\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  }\n};\n\nconst PasswordChange = ({ onFinish, submiting }: P) => (\n  <Form layout=\"vertical\" onFinish={onFinish} {...formItemLayout}>\n    <Form.Item\n      name=\"prePassword\"\n      label=\"Old Password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your old password!'\n        },\n        {\n          min: 6,\n          max: 14,\n          message: '6-14 characters'\n        }\n      ]}\n      hasFeedback\n    >\n      <Input.Password placeholder=\"Old Password\" />\n    </Form.Item>\n    <Form.Item\n      name=\"password\"\n      label=\"New Password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!'\n        },\n        {\n          min: 6,\n          max: 14,\n          message: '6-14 characters'\n        }\n      ]}\n      hasFeedback\n    >\n      <Input.Password placeholder=\"Password\" />\n    </Form.Item>\n    <Form.Item\n      name=\"confirm\"\n      dependencies={['password']}\n      hasFeedback\n      label=\"Retype password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please confirm your password!'\n        },\n        ({ getFieldValue }) => ({\n          validator(rule, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(\n              new Error('The two passwords that you entered do not match!')\n            );\n          }\n        })\n      ]}\n    >\n      <Input.Password placeholder=\"Confirm Password\" />\n    </Form.Item>\n    <Form.Item>\n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        loading={submiting}\n        disabled={submiting}\n        className=\"btn-submit\"\n      >\n        Save Changes\n      </Button>\n    </Form.Item>\n  </Form>\n);\n\nPasswordChange.defaultProps = {\n  submiting: false\n};\nexport default PasswordChange;\n"]},"metadata":{},"sourceType":"module"}