{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\common\\\\layout\\\\left-header-content.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Menu, Dropdown } from 'antd';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport './left-header-content.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport classnames from 'classnames';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { NavBar, NavItem } from '@components/common/base/nav';\n\nvar LeftHeaderContent = function LeftHeaderContent(_ref) {\n  _s();\n\n  var loggedIn = _ref.loggedIn,\n      currentUser = _ref.currentUser,\n      pluralTextModel = _ref.pluralTextModel,\n      performerCategories = _ref.performerCategories,\n      settings = _ref.settings;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedKey = _React$useState2[0],\n      setSelectedKey = _React$useState2[1];\n\n  var path = settings[SETTING_KEYS.OPTION_FOR_GROUP] === 'webrtc' ? 'webrtc/' : '';\n\n  var CategorySubMenu = __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, performerCategories.data.length > 0 && performerCategories.data.map(function (category) {\n    return __jsx(Menu.Item, {\n      key: \"category-\".concat(category._id),\n      onClick: function onClick() {\n        setSelectedKey('');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/performer-category',\n        query: {\n          slug: category.slug,\n          category: JSON.stringify(category)\n        }\n      },\n      as: \"/performer-category/\".concat(category.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, category.name)));\n  }));\n\n  var StreamingSubMenu = __jsx(Menu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Menu.Item, {\n    onClick: function onClick() {\n      setSelectedKey('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/live\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Go Live\"))), __jsx(Menu.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/live/\".concat(path, \"groupchat\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Group Chat\"))));\n\n  return __jsx(NavBar, {\n    activeKey: selectedKey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(NavItem, {\n    key: \"home\",\n    onClick: function onClick() {\n      setSelectedKey('home');\n    },\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    shallow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Home\"))), performerCategories.data.length > 0 && __jsx(Dropdown, {\n    overlay: CategorySubMenu,\n    overlayClassName: \"cate-sub-menu-overlay\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Categories\"))), __jsx(NavItem, {\n    key: \"allModel\",\n    onClick: function onClick() {\n      setSelectedKey('model');\n    },\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/performer-category\",\n    as: \"/all-models\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"All \".concat(pluralTextModel || 'Models')))), loggedIn && (currentUser === null || currentUser === void 0 ? void 0 : currentUser._id) && (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'performer' && __jsx(React.Fragment, null, __jsx(NavItem, {\n    key: \"live\",\n    className: classnames('hidden-sm', {}),\n    onClick: function onClick() {\n      setSelectedKey('live');\n    },\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/live\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Go Live\"))), __jsx(NavItem, {\n    key: \"groupchat\",\n    className: classnames('hidden-sm', {}),\n    onClick: function onClick() {\n      setSelectedKey('groupchat');\n    },\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/live/\".concat(path, \"groupchat\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Group Chat\"))), __jsx(Dropdown, {\n    overlay: StreamingSubMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, __jsx(NavItem, {\n    className: \"visible-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(MoreOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_s(LeftHeaderContent, \"ASwrhYduiFFkoAoZYE018BJI6S8=\");\n\n_c = LeftHeaderContent;\nLeftHeaderContent.defaultProps = {\n  loggedIn: false,\n  currentUser: null,\n  settings: null,\n  pluralTextModel: '',\n  performerCategories: {\n    total: 0,\n    data: []\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread(_objectSpread({\n    loggedIn: state.auth.loggedIn\n  }, state.performer.performers), state.ui);\n};\n\nvar mapDispatch = {\n  updateUIValue: updateUIValue\n};\nexport default connect(mapStateToProps, mapDispatch)(LeftHeaderContent);\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftHeaderContent\");","map":{"version":3,"sources":["E:/programData/React/user/src/components/common/layout/left-header-content.tsx"],"names":["React","Menu","Dropdown","Link","connect","updateUIValue","SETTING_KEYS","classnames","MoreOutlined","NavBar","NavItem","LeftHeaderContent","loggedIn","currentUser","pluralTextModel","performerCategories","settings","useState","selectedKey","setSelectedKey","path","OPTION_FOR_GROUP","CategorySubMenu","display","flexWrap","data","length","map","category","_id","pathname","query","slug","JSON","stringify","name","StreamingSubMenu","role","defaultProps","total","mapStateToProps","state","auth","performer","performers","ui","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Dropdown } from 'antd';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport {\n  IPerformerCategogies,\n  IDataResponse,\n  IPerformer,\n  IStudio,\n  IUser,\n  StreamSettings\n} from 'src/interfaces';\nimport './left-header-content.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport classnames from 'classnames';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { NavBar, NavItem } from '@components/common/base/nav';\n\ninterface Props {\n  loggedIn?: boolean;\n  currentUser?: IPerformer & IUser & IStudio;\n  performerCategories?: IDataResponse<IPerformerCategogies>;\n  settings?: StreamSettings;\n  pluralTextModel?: string;\n}\n\nconst LeftHeaderContent = ({\n  loggedIn,\n  currentUser,\n  pluralTextModel,\n  performerCategories,\n  settings\n}: Props) => {\n  const [selectedKey, setSelectedKey] = React.useState('');\n  const path = settings[SETTING_KEYS.OPTION_FOR_GROUP] === 'webrtc' ? 'webrtc/' : '';\n  const CategorySubMenu = (\n    <Menu mode=\"inline\" style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {performerCategories.data.length > 0\n        && performerCategories.data.map((category: IPerformerCategogies) => (\n          <Menu.Item\n            key={`category-${category._id}`}\n            onClick={() => {\n              setSelectedKey('');\n            }}\n          >\n            <Link\n              href={{\n                pathname: '/performer-category',\n                query: {\n                  slug: category.slug,\n                  category: JSON.stringify(category)\n                }\n              }}\n              as={`/performer-category/${category.slug}`}\n            >\n              <a>{category.name}</a>\n            </Link>\n          </Menu.Item>\n        ))}\n    </Menu>\n  );\n\n  const StreamingSubMenu = (\n    <Menu>\n      <Menu.Item\n        onClick={() => {\n          setSelectedKey('');\n        }}\n      >\n        <Link href=\"/live\">\n          <a>Go Live</a>\n        </Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link href={`/live/${path}groupchat`}>\n          <a>Group Chat</a>\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <NavBar activeKey={selectedKey}>\n      <NavItem\n        key=\"home\"\n        onClick={() => {\n          setSelectedKey('home');\n        }}\n        aria-hidden=\"true\"\n      >\n        <Link href=\"/\" shallow>\n          <a>Home</a>\n        </Link>\n      </NavItem>\n      {performerCategories.data.length > 0 && (\n      <Dropdown overlay={CategorySubMenu} overlayClassName=\"cate-sub-menu-overlay\">\n        <NavItem>\n          <span>Categories</span>\n        </NavItem>\n      </Dropdown>\n      )}\n      <NavItem\n        key=\"allModel\"\n        onClick={() => {\n          setSelectedKey('model');\n        }}\n        aria-hidden=\"true\"\n      >\n        <Link href=\"/performer-category\" as=\"/all-models\">\n          <a>{`All ${pluralTextModel || 'Models'}`}</a>\n        </Link>\n      </NavItem>\n      {loggedIn && currentUser?._id && currentUser?.role === 'performer' && (\n        <>\n          <NavItem\n            key=\"live\"\n            className={classnames('hidden-sm', {})}\n            onClick={() => {\n              setSelectedKey('live');\n            }}\n            aria-hidden=\"true\"\n          >\n            <Link href=\"/live\">\n              <a>Go Live</a>\n            </Link>\n          </NavItem>\n          <NavItem\n            key=\"groupchat\"\n            className={classnames('hidden-sm', {})}\n            onClick={() => {\n              setSelectedKey('groupchat');\n            }}\n            aria-hidden=\"true\"\n          >\n            <Link href={`/live/${path}groupchat`}>\n              <a>Group Chat</a>\n            </Link>\n          </NavItem>\n          <Dropdown overlay={StreamingSubMenu}>\n            <NavItem className=\"visible-sm\">\n              <MoreOutlined />\n            </NavItem>\n          </Dropdown>\n        </>\n      )}\n    </NavBar>\n  );\n};\n\nLeftHeaderContent.defaultProps = {\n  loggedIn: false,\n  currentUser: null,\n  settings: null,\n  pluralTextModel: '',\n  performerCategories: {\n    total: 0,\n    data: []\n  }\n};\nconst mapStateToProps = (state) => ({\n  loggedIn: state.auth.loggedIn,\n  ...state.performer.performers,\n  ...state.ui\n});\nconst mapDispatch = { updateUIValue };\nexport default connect(mapStateToProps, mapDispatch)(LeftHeaderContent);\n"]},"metadata":{},"sourceType":"module"}