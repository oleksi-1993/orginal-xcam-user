{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport PerformerGrid from '@components/performer/performer-grid';\nimport { connect } from 'react-redux';\nimport { searchPerformer, updatePerformerFavourite, updateCurrentPerformer } from '@redux/performer/actions';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport PerformerFilter from '@components/user/performer-filter';\nimport { favouriteService } from 'src/services';\nimport { message } from 'antd';\nimport { getResponseError } from 'src/lib';\nimport { withRouter } from 'next/router';\nimport { SocketContext } from 'src/socket';\nimport Head from 'next/head';\nvar initQueryState = {\n  offset: 0,\n  limit: 60,\n  gender: '',\n  category: '',\n  country: '',\n  sortBy: '',\n  sort: 'desc'\n};\n\nvar Homepage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Homepage, _PureComponent);\n\n  var _super = _createSuper(Homepage);\n\n  function Homepage(props) {\n    var _this;\n\n    _classCallCheck(this, Homepage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"search\", function () {\n      var _this$props = _this.props,\n          router = _this$props.router,\n          dispatchSearchPerformer = _this$props.searchPerformer;\n      var query = _this.state.query;\n      dispatchSearchPerformer(_objectSpread(_objectSpread({}, query), router.query));\n    });\n\n    _this.state = {\n      query: initQueryState\n    };\n    return _this;\n  }\n\n  _createClass(Homepage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.search();\n      this.socket = this.context;\n      this.socket.on('modelUpdateStatus', this.search);\n      this.socket.on('modelUpdateStreamingStatus', this.search);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevStates) {\n      var _this$props2 = this.props,\n          router = _this$props2.router,\n          loggedIn = _this$props2.loggedIn;\n      var query = this.state.query;\n\n      if (router.query.q !== prevProps.router.query.q || query !== prevStates.query) {\n        this.search();\n      }\n\n      if (!loggedIn && loggedIn !== prevProps.loggedIn) {\n        this.search();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket = this.context;\n\n      if (this.socket) {\n        this.socket.off('modelUpdateStatus');\n        this.socket.off('modelUpdateStreamingStatus');\n      }\n    }\n  }, {\n    key: \"onLike\",\n    value: function () {\n      var _onLike = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(performer) {\n        var dispatchUpdatePerformerFavorite, _id, isFavorite, e;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatchUpdatePerformerFavorite = this.props.updatePerformerFavourite;\n                _id = performer._id, isFavorite = performer.isFavorite;\n                _context.prev = 2;\n                _context.next = 5;\n                return favouriteService.favorite(_id, isFavorite);\n\n              case 5:\n                dispatchUpdatePerformerFavorite(_id);\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                _context.next = 12;\n                return Promise.resolve(_context.t0);\n\n              case 12:\n                e = _context.sent;\n                message.error(getResponseError(e));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8]]);\n      }));\n\n      function onLike(_x) {\n        return _onLike.apply(this, arguments);\n      }\n\n      return onLike;\n    }()\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(name, value) {\n      var query = this.state.query;\n      this.setState({\n        query: _objectSpread(_objectSpread({}, query), {}, _defineProperty({}, name, value))\n      });\n    }\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      this.setState({\n        query: initQueryState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          categories = _this$props3.categories,\n          countries = _this$props3.countries,\n          ui = _this$props3.ui,\n          settings = _this$props3.settings;\n      var query = this.state.query;\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, ui === null || ui === void 0 ? void 0 : ui.siteName), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: settings === null || settings === void 0 ? void 0 : settings.metaKeywords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        name: \"description\",\n        content: settings === null || settings === void 0 ? void 0 : settings.metaDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: settings === null || settings === void 0 ? void 0 : settings.siteName,\n        key: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: settings === null || settings === void 0 ? void 0 : settings.logoUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        property: \"og:keywords\",\n        content: settings === null || settings === void 0 ? void 0 : settings.metaKeywords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        property: \"og:description\",\n        content: settings === null || settings === void 0 ? void 0 : settings.metaDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: \"homepage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, __jsx(PerformerFilter, _extends({\n        countries: countries,\n        categories: categories,\n        setFilter: this.setFilter.bind(this),\n        clearFilter: this.clearFilter.bind(this)\n      }, query, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      })), __jsx(PerformerGrid, _extends({}, this.props, {\n        onLike: this.onLike.bind(this),\n        title: \"Live cams\",\n        isPage: true,\n        setFilter: this.setFilter.bind(this)\n      }, query, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return Homepage;\n}(PureComponent);\n\nHomepage.contextType = SocketContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread(_objectSpread({\n    ui: _objectSpread({}, state.ui)\n  }, state.performer.performers), {}, {\n    countries: state.settings.countries,\n    loggedIn: state.auth.loggedIn,\n    categories: state.performer.categories.data,\n    settings: state.settings\n  });\n};\n\nvar mapDispatch = {\n  searchPerformer: searchPerformer,\n  updatePerformerFavourite: updatePerformerFavourite,\n  updateCurrentUser: updateCurrentUser,\n  updateCurrentPerformer: updateCurrentPerformer,\n  updateCurrentStudio: updateCurrentStudio,\n  loginSuccess: loginSuccess\n};\nexport default connect(mapStateToProps, mapDispatch)(withRouter(Homepage));","map":{"version":3,"sources":["E:/programData/React/user/pages/index.tsx"],"names":["PureComponent","PerformerGrid","connect","searchPerformer","updatePerformerFavourite","updateCurrentPerformer","loginSuccess","updateCurrentUser","updateCurrentStudio","PerformerFilter","favouriteService","message","getResponseError","withRouter","SocketContext","Head","initQueryState","offset","limit","gender","category","country","sortBy","sort","Homepage","props","router","dispatchSearchPerformer","query","state","search","socket","context","on","prevProps","prevStates","loggedIn","q","off","performer","dispatchUpdatePerformerFavorite","_id","isFavorite","favorite","Promise","resolve","e","error","name","value","setState","categories","countries","ui","settings","siteName","metaKeywords","metaDescription","logoUrl","setFilter","bind","clearFilter","onLike","contextType","mapStateToProps","performers","auth","data","mapDispatch"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  IPerformer,\n  ICountries,\n  IPerformerCategogies,\n  IPerformSearch,\n  IUIConfig\n} from 'src/interfaces';\nimport PerformerGrid from '@components/performer/performer-grid';\nimport { connect } from 'react-redux';\nimport {\n  searchPerformer,\n  updatePerformerFavourite,\n  updateCurrentPerformer\n} from '@redux/performer/actions';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport PerformerFilter from '@components/user/performer-filter';\nimport { favouriteService } from 'src/services';\nimport { message } from 'antd';\nimport { getResponseError } from 'src/lib';\nimport { withRouter, NextRouter } from 'next/router';\nimport { SocketContext } from 'src/socket';\nimport Head from 'next/head';\n\ninterface IProps {\n  router: NextRouter;\n  ui: IUIConfig;\n  data: IPerformer[];\n  searchPerformer?: Function;\n  total?: number;\n  success?: boolean;\n  error?: any;\n  settings?: any;\n  searching?: boolean;\n  loggedIn?: boolean;\n  query?: {\n    q: string;\n  };\n  categories?: IPerformerCategogies[];\n  countries?: ICountries[];\n  updatePerformerFavourite: Function;\n  updateCurrentUser: Function;\n  updateCurrentPerformer: Function;\n  updateCurrentStudio: Function;\n  loginSuccess: Function;\n}\n\ninterface IStates {\n  query: IPerformSearch;\n  sort?: {\n    name: string;\n    sortBy?: string;\n  };\n}\n\nconst initQueryState: IPerformSearch = {\n  offset: 0,\n  limit: 60,\n  gender: '',\n  category: '',\n  country: '',\n  sortBy: '',\n  sort: 'desc'\n};\n\nclass Homepage extends PureComponent<IProps, IStates> {\n  private socket;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      query: initQueryState\n    };\n  }\n\n  componentDidMount() {\n    this.search();\n    this.socket = this.context;\n    this.socket.on('modelUpdateStatus', this.search);\n    this.socket.on('modelUpdateStreamingStatus', this.search);\n  }\n\n  componentDidUpdate(prevProps: IProps, prevStates: IStates) {\n    const { router, loggedIn } = this.props;\n    const { query } = this.state;\n    if (\n      router.query.q !== prevProps.router.query.q\n      || query !== prevStates.query\n    ) {\n      this.search();\n    }\n    if (!loggedIn && loggedIn !== prevProps.loggedIn) {\n      this.search();\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket = this.context;\n    if (this.socket) {\n      this.socket.off('modelUpdateStatus');\n      this.socket.off('modelUpdateStreamingStatus');\n    }\n  }\n\n  async onLike(performer: IPerformer) {\n    const {\n      updatePerformerFavourite: dispatchUpdatePerformerFavorite\n    } = this.props;\n    const { _id, isFavorite } = performer;\n    try {\n      await favouriteService.favorite(_id, isFavorite);\n      dispatchUpdatePerformerFavorite(_id);\n    } catch (error) {\n      const e = await Promise.resolve(error);\n      message.error(getResponseError(e));\n    }\n  }\n\n  setFilter(name: string, value: any) {\n    const { query } = this.state;\n    this.setState({\n      query: {\n        ...query,\n        [name]: value\n      }\n    });\n  }\n\n  search = () => {\n    const { router, searchPerformer: dispatchSearchPerformer } = this.props;\n    const { query } = this.state;\n    dispatchSearchPerformer({\n      ...query,\n      ...router.query\n    });\n  };\n\n  clearFilter() {\n    this.setState({\n      query: initQueryState\n    });\n  }\n\n  render() {\n    const {\n      categories, countries, ui, settings\n    } = this.props;\n    const { query } = this.state;\n\n    return (\n      <>\n        <Head>\n          <title>{ui?.siteName}</title>\n          <meta name=\"keywords\" content={settings?.metaKeywords} />\n          <meta\n            name=\"description\"\n            content={settings?.metaDescription}\n          />\n          {/* OG tags */}\n          <meta\n            property=\"og:title\"\n            content={settings?.siteName}\n            key=\"title\"\n          />\n          <meta property=\"og:image\" content={settings?.logoUrl} />\n          <meta\n            property=\"og:keywords\"\n            content={settings?.metaKeywords}\n          />\n          <meta\n            property=\"og:description\"\n            content={settings?.metaDescription}\n          />\n        </Head>\n        <div className=\"homepage\">\n          <PerformerFilter\n            countries={countries}\n            categories={categories}\n            setFilter={this.setFilter.bind(this)}\n            clearFilter={this.clearFilter.bind(this)}\n            {...query}\n          />\n          <PerformerGrid\n            {...this.props}\n            onLike={this.onLike.bind(this)}\n            title=\"Live cams\"\n            isPage\n            setFilter={this.setFilter.bind(this)}\n            {...query}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nHomepage.contextType = SocketContext;\n\nconst mapStateToProps = (state) => ({\n  ui: { ...state.ui },\n  ...state.performer.performers,\n  countries: state.settings.countries,\n  loggedIn: state.auth.loggedIn,\n  categories: state.performer.categories.data,\n  settings: state.settings\n});\nconst mapDispatch = {\n  searchPerformer,\n  updatePerformerFavourite,\n  updateCurrentUser,\n  updateCurrentPerformer,\n  updateCurrentStudio,\n  loginSuccess\n};\nexport default connect(mapStateToProps, mapDispatch)(withRouter(Homepage));\n"]},"metadata":{},"sourceType":"module"}