{"ast":null,"code":"import { createAsyncAction, createAction } from 'src/lib/redux';\nexport const {\n  getPerformerCategories,\n  getPerformerCategoriesSuccess,\n  getPerformerCategoriesFail\n} = createAsyncAction('getPerformerCategories', 'GET_PERFORMER_CATEGORIES');\nexport const {\n  searchPerformer,\n  searchPerformerSuccess,\n  searchPerformerFail\n} = createAsyncAction('searchPerformer', 'SEARCH_PERFORMER');\nexport const setPerformerSearching = createAction('SET_PERFORMER_SEARCHING');\nexport const {\n  updatePerformerProfile,\n  updatePerformerProfileSuccess,\n  updatePerformerProfileFail\n} = createAsyncAction('updatePerformerProfile', 'UPDATE_PERFORMER_PROFILE');\nexport const setupdatingPerformerProfile = createAction('updatingPerformerProfile');\nexport const updatePaymentInfo = createAction('UPDATE_PAYMENT_INFO');\nexport const updateDirectDeposit = createAction('UPDATE_DIRECT_DEPOSIT');\nexport const updatePaxum = createAction('UPDATE_PAXUM');\nexport const updateBitpay = createAction('UPDATE_BITPAY');\nexport const updateStreamingStatus = createAction('UPDATE_STREAMING_STATUS');\nexport const updateDefaultPrice = createAction('UPDATE_DEFAULT_PRICE');\nexport const {\n  getPerformerDetails,\n  getPerformerDetailsSuccess,\n  getPerformerDetailsFail\n} = createAsyncAction('getPerformerDetails', 'GET_PERFORMER_DETAILS');\nexport const setGettingPerformerDetails = createAction('setGettingPerformerDetails');\nexport const setPerformerDetails = createAction('SET_PERFORMER_DETAILS');\nexport const updatePerformerAsset = createAction('UPDATE_PERFORMER_ASSET');\nexport const setFavoritePerformerDetails = createAction('SET_FAVORITE_PERFORMER_DETAILS');\nexport const {\n  getMyProducts,\n  getMyProductsSuccess,\n  getMyProductsFail\n} = createAsyncAction('getMyProducts', 'GET_MY_PRODUCT');\nexport const setGettingMyProducts = createAction('setGettingMyProducts');\nexport const addMyProduct = createAction('addMyProduct');\nexport const removeMyProduct = createAction('removeMyProduct');\nexport const {\n  getEarning,\n  getEarningSuccess,\n  getEarningFail\n} = createAsyncAction('getEarning', 'GET_EARNING');\nexport const setGettingEarning = createAction('SET_GETTING_EARNIG');\nexport const {\n  getPayoutRequest,\n  getPayoutRequestSuccess,\n  getPayoutRequestFail\n} = createAsyncAction('getPayoutRequest', 'GET_PAYOUT_REQUEST');\nexport const setGettingPayoutRequest = createAction('SET_GETTING_PAYOUT_REQUEST');\nexport const removePayoutRequest = createAction('REMOVE_PAYOUT_REQUEST');\nexport const {\n  getMyVideos,\n  getMyVideosSuccess,\n  getMyVideosFail\n} = createAsyncAction('getMyVideos', 'GET_MY_VIDEO');\nexport const setgettingMyVideos = createAction('setgettingMyVideos');\nexport const addMyVideos = createAction('addMyVideos');\nexport const removeMyVideo = createAction('removeMyVideo');\nexport const {\n  getMyPhotos,\n  getMyPhotosSuccess,\n  getMyPhotosFail\n} = createAsyncAction('getMyPhotos', 'GET_MY_PHOTO');\nexport const setgettingMyPhotos = createAction('setgettingMyPhotos');\nexport const addMyPhotos = createAction('addMyPhotos');\nexport const removeMyPhoto = createAction('removeMyPhoto');\nexport const {\n  getMyGalleries,\n  getMyGalleriesSuccess,\n  getMyGalleriesFail\n} = createAsyncAction('getMyGalleries', 'GET_MY_GALLERIES');\nexport const setgettingMyGalleries = createAction('setgettingMyGalleries');\nexport const addMyGalleries = createAction('addMyGalleries');\nexport const removeMyGalleries = createAction('removeMyGalleries');\nexport const updateCurrentPerformer = createAction('updateCurrentPerformer');\nexport const updatePerformerFavourite = createAction('UPDATE_PERFORMER_FAVOURITE');\nexport const updateCurrentPerformerBalance = createAction('UPDATE_CURRENT_PERFORMER_BALANCE');","map":{"version":3,"sources":["E:/programData/React/user/src/redux/performer/actions.ts"],"names":["createAsyncAction","createAction","getPerformerCategories","getPerformerCategoriesSuccess","getPerformerCategoriesFail","searchPerformer","searchPerformerSuccess","searchPerformerFail","setPerformerSearching","updatePerformerProfile","updatePerformerProfileSuccess","updatePerformerProfileFail","setupdatingPerformerProfile","updatePaymentInfo","updateDirectDeposit","updatePaxum","updateBitpay","updateStreamingStatus","updateDefaultPrice","getPerformerDetails","getPerformerDetailsSuccess","getPerformerDetailsFail","setGettingPerformerDetails","setPerformerDetails","updatePerformerAsset","setFavoritePerformerDetails","getMyProducts","getMyProductsSuccess","getMyProductsFail","setGettingMyProducts","addMyProduct","removeMyProduct","getEarning","getEarningSuccess","getEarningFail","setGettingEarning","getPayoutRequest","getPayoutRequestSuccess","getPayoutRequestFail","setGettingPayoutRequest","removePayoutRequest","getMyVideos","getMyVideosSuccess","getMyVideosFail","setgettingMyVideos","addMyVideos","removeMyVideo","getMyPhotos","getMyPhotosSuccess","getMyPhotosFail","setgettingMyPhotos","addMyPhotos","removeMyPhoto","getMyGalleries","getMyGalleriesSuccess","getMyGalleriesFail","setgettingMyGalleries","addMyGalleries","removeMyGalleries","updateCurrentPerformer","updatePerformerFavourite","updateCurrentPerformerBalance"],"mappings":"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","sourcesContent":["import { createAsyncAction, createAction } from 'src/lib/redux';\n\nexport const {\n  getPerformerCategories,\n  getPerformerCategoriesSuccess,\n  getPerformerCategoriesFail\n} = createAsyncAction('getPerformerCategories', 'GET_PERFORMER_CATEGORIES');\n\nexport const {\n  searchPerformer,\n  searchPerformerSuccess,\n  searchPerformerFail\n} = createAsyncAction('searchPerformer', 'SEARCH_PERFORMER');\n\nexport const setPerformerSearching = createAction('SET_PERFORMER_SEARCHING');\n\nexport const {\n  updatePerformerProfile,\n  updatePerformerProfileSuccess,\n  updatePerformerProfileFail\n} = createAsyncAction('updatePerformerProfile', 'UPDATE_PERFORMER_PROFILE');\nexport const setupdatingPerformerProfile = createAction(\n  'updatingPerformerProfile'\n);\nexport const updatePaymentInfo = createAction('UPDATE_PAYMENT_INFO');\nexport const updateDirectDeposit = createAction('UPDATE_DIRECT_DEPOSIT');\nexport const updatePaxum = createAction('UPDATE_PAXUM');\nexport const updateBitpay = createAction('UPDATE_BITPAY');\nexport const updateStreamingStatus = createAction('UPDATE_STREAMING_STATUS');\nexport const updateDefaultPrice = createAction('UPDATE_DEFAULT_PRICE');\n\nexport const {\n  getPerformerDetails,\n  getPerformerDetailsSuccess,\n  getPerformerDetailsFail\n} = createAsyncAction('getPerformerDetails', 'GET_PERFORMER_DETAILS');\nexport const setGettingPerformerDetails = createAction(\n  'setGettingPerformerDetails'\n);\nexport const setPerformerDetails = createAction('SET_PERFORMER_DETAILS');\nexport const updatePerformerAsset = createAction('UPDATE_PERFORMER_ASSET');\nexport const setFavoritePerformerDetails = createAction(\n  'SET_FAVORITE_PERFORMER_DETAILS'\n);\n\nexport const {\n  getMyProducts,\n  getMyProductsSuccess,\n  getMyProductsFail\n} = createAsyncAction('getMyProducts', 'GET_MY_PRODUCT');\nexport const setGettingMyProducts = createAction('setGettingMyProducts');\nexport const addMyProduct = createAction('addMyProduct');\nexport const removeMyProduct = createAction('removeMyProduct');\n\nexport const {\n  getEarning,\n  getEarningSuccess,\n  getEarningFail\n} = createAsyncAction('getEarning', 'GET_EARNING');\nexport const setGettingEarning = createAction('SET_GETTING_EARNIG');\n\nexport const {\n  getPayoutRequest,\n  getPayoutRequestSuccess,\n  getPayoutRequestFail\n} = createAsyncAction('getPayoutRequest', 'GET_PAYOUT_REQUEST');\nexport const setGettingPayoutRequest = createAction('SET_GETTING_PAYOUT_REQUEST');\nexport const removePayoutRequest = createAction('REMOVE_PAYOUT_REQUEST');\n\nexport const {\n  getMyVideos,\n  getMyVideosSuccess,\n  getMyVideosFail\n} = createAsyncAction('getMyVideos', 'GET_MY_VIDEO');\nexport const setgettingMyVideos = createAction('setgettingMyVideos');\nexport const addMyVideos = createAction('addMyVideos');\nexport const removeMyVideo = createAction('removeMyVideo');\n\nexport const {\n  getMyPhotos,\n  getMyPhotosSuccess,\n  getMyPhotosFail\n} = createAsyncAction('getMyPhotos', 'GET_MY_PHOTO');\nexport const setgettingMyPhotos = createAction('setgettingMyPhotos');\nexport const addMyPhotos = createAction('addMyPhotos');\nexport const removeMyPhoto = createAction('removeMyPhoto');\n\nexport const {\n  getMyGalleries,\n  getMyGalleriesSuccess,\n  getMyGalleriesFail\n} = createAsyncAction('getMyGalleries', 'GET_MY_GALLERIES');\nexport const setgettingMyGalleries = createAction('setgettingMyGalleries');\nexport const addMyGalleries = createAction('addMyGalleries');\nexport const removeMyGalleries = createAction('removeMyGalleries');\n\nexport const updateCurrentPerformer = createAction('updateCurrentPerformer');\nexport const updatePerformerFavourite = createAction(\n  'UPDATE_PERFORMER_FAVOURITE'\n);\nexport const updateCurrentPerformerBalance = createAction(\n  'UPDATE_CURRENT_PERFORMER_BALANCE'\n);\n"]},"metadata":{},"sourceType":"module"}