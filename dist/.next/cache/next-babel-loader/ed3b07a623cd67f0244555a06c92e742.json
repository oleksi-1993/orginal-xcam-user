{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\n\nvar EarningService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(EarningService, _APIRequest);\n\n  var _super = _createSuper(EarningService);\n\n  function EarningService() {\n    _classCallCheck(this, EarningService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EarningService, [{\n    key: \"search\",\n    value: function search(params) {\n      var role = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'performer';\n      return this.get(this.buildUrl(\"/earning/\".concat(role, \"/search\"), params));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats(params) {\n      var role = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'performer';\n      return this.get(this.buildUrl(\"/earning/\".concat(role, \"/stats\"), params));\n    }\n  }]);\n\n  return EarningService;\n}(APIRequest);\n\nexport var earningService = new EarningService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/earning.service.ts"],"names":["APIRequest","EarningService","params","role","get","buildUrl","earningService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;;IAEMC,c;;;;;;;;;;;;;WACJ,gBAAOC,MAAP,EAA+D;AAAA,UAApBC,IAAoB,uEAAb,WAAa;AAC7D,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,oBAA0BF,IAA1B,cAAyCD,MAAzC,CAAT,CAAP;AACD;;;WAED,eAAMA,MAAN,EAA8D;AAAA,UAApBC,IAAoB,uEAAb,WAAa;AAC5D,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,oBAA0BF,IAA1B,aAAwCD,MAAxC,CAAT,CAAP;AACD;;;;EAP0BF,U;;AAU7B,OAAO,IAAMM,cAAc,GAAG,IAAIL,cAAJ,EAAvB","sourcesContent":["import { APIRequest } from './api-request';\n\nclass EarningService extends APIRequest {\n  search(params?: { [key: string]: string }, role = 'performer') {\n    return this.get(this.buildUrl(`/earning/${role}/search`, params));\n  }\n\n  stats(params?: { [key: string]: string }, role = 'performer') {\n    return this.get(this.buildUrl(`/earning/${role}/stats`, params));\n  }\n}\n\nexport const earningService = new EarningService();\n"]},"metadata":{},"sourceType":"module"}