{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { APIRequest } from './api-request';\nexport class PostService extends APIRequest {\n  search(query) {\n    return this.get(this.buildUrl('/posts/search', query));\n  }\n\n  findById(id) {\n    return this.get(`/posts/${id}`);\n  }\n\n  createContactCotent(data) {\n    return this.post('/contact', _objectSpread({}, data));\n  }\n\n}\nexport const postService = new PostService();","map":{"version":3,"sources":["E:/programData/React/user/src/services/post.service.ts"],"names":["APIRequest","PostService","search","query","get","buildUrl","findById","id","createContactCotent","data","post","postService"],"mappings":";;;;;;AACA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,WAAN,SAA0BD,UAA1B,CAAqC;AAC1CE,EAAAA,MAAM,CAACC,KAAD,EAAqB;AACzB,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,eAAd,EAA+BF,KAA/B,CAAT,CAAP;AACD;;AAEDG,EAAAA,QAAQ,CAACC,EAAD,EAAa;AACnB,WAAO,KAAKH,GAAL,CAAU,UAASG,EAAG,EAAtB,CAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,IAAD,EAA4B;AAC7C,WAAO,KAAKC,IAAL,CAAU,UAAV,oBAA2BD,IAA3B,EAAP;AACD;;AAXyC;AAc5C,OAAO,MAAME,WAAW,GAAG,IAAIV,WAAJ,EAApB","sourcesContent":["import { IPostSearch } from 'src/interfaces';\nimport { APIRequest } from './api-request';\n\nexport class PostService extends APIRequest {\n  search(query: IPostSearch) {\n    return this.get(this.buildUrl('/posts/search', query as any));\n  }\n\n  findById(id: string) {\n    return this.get(`/posts/${id}`);\n  }\n\n  createContactCotent(data: Record<string, any>) {\n    return this.post('/contact', { ...data });\n  }\n}\n\nexport const postService = new PostService();\n"]},"metadata":{},"sourceType":"module"}