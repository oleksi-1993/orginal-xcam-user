{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga'; // import { composeWithDevTools } from 'remote-redux-devtools';\n\nimport storeHolder from '@lib/storeHolder';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst bindMiddleware = middleware => applyMiddleware(...middleware);\n/**\n * const composeEnhancers = composeWithDevTools({\n * realtime: true,\n * name: 'xcams user',\n * hostname: 'localhost',\n * port: 8000 // the port your remotedev server is running at\n * });\n*/\n\n\nfunction configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  /**\n   * redux dev tool\n   * const store = createStore(rootReducer, initialState, composeEnhancers(bindMiddleware([sagaMiddleware]))) as any;\n   */\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  storeHolder.setStore(store);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["E:/programData/React/user/src/redux/store.ts"],"names":["applyMiddleware","createStore","createSagaMiddleware","storeHolder","rootReducer","rootSaga","bindMiddleware","middleware","configureStore","initialState","sagaMiddleware","store","sagaTask","run","setStore"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,cAAc,GAAIC,UAAD,IAAqBP,eAAe,CAAC,GAAGO,UAAJ,CAA3D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,cAAT,CAAwBC,YAAxB,EAA2C;AACzC,QAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,QAAMS,KAAK,GAAGV,WAAW,CAACG,WAAD,EAAcK,YAAd,EAA4BH,cAAc,CAAC,CAACI,cAAD,CAAD,CAA1C,CAAzB;AACA;AACF;AACA;AACA;;AAEEC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBR,QAAnB,CAAjB;AAEAF,EAAAA,WAAW,CAACW,QAAZ,CAAqBH,KAArB;AAEA,SAAOA,KAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n// import { composeWithDevTools } from 'remote-redux-devtools';\nimport storeHolder from '@lib/storeHolder';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst bindMiddleware = (middleware: any) => applyMiddleware(...middleware);\n\n/**\n * const composeEnhancers = composeWithDevTools({\n * realtime: true,\n * name: 'xcams user',\n * hostname: 'localhost',\n * port: 8000 // the port your remotedev server is running at\n * });\n*/\n\nfunction configureStore(initialState: any) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware])) as any;\n  /**\n   * redux dev tool\n   * const store = createStore(rootReducer, initialState, composeEnhancers(bindMiddleware([sagaMiddleware]))) as any;\n   */\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  storeHolder.setStore(store);\n\n  return store;\n}\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}