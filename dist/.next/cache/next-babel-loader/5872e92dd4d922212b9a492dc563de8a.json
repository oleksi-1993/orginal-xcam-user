{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { loginSuccess, loginFail, performerRegisterFail, performerRegisterSuccess, loginRequesting, setPerformerRegisterSubmitting, setUserRegisterSubmitting, userRegisterFail, userRegisterSuccess, performerloginFail, performerloginSuccess, studioLoginSuccess, studioLoginFail, setUpdatePasswordSubmitting, updatePasswordSuccess, updatePasswordFail, logout, resetLoginData } from './actions';\nvar initialState = {\n  loggedIn: false,\n  authUser: null,\n  performerRegister: {\n    data: null,\n    success: false,\n    submiting: false,\n    error: null\n  },\n  userRegister: {\n    data: null,\n    success: false,\n    submiting: false,\n    error: null\n  },\n  userLogin: {\n    requesting: false,\n    success: false,\n    data: null,\n    error: null\n  },\n  updatePassword: {\n    success: false,\n    submiting: false,\n    error: null\n  }\n};\nvar authReducers = [{\n  on: loginRequesting,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      userLogin: _objectSpread(_objectSpread({}, state.userLogin), {}, {\n        requesting: true\n      })\n    });\n  }\n}, {\n  on: loginSuccess,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: true,\n      userLogin: {\n        requesting: false,\n        error: null,\n        data: data.payload,\n        success: true\n      }\n    });\n  }\n}, {\n  on: loginFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: false,\n      userLogin: {\n        requesting: false,\n        error: data.payload,\n        data: null,\n        success: false\n      }\n    });\n  }\n}, {\n  on: performerloginSuccess,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: true,\n      userLogin: {\n        requesting: false,\n        error: null,\n        data: data.payload,\n        success: true\n      }\n    });\n  }\n}, {\n  on: performerloginFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: false,\n      userLogin: {\n        requesting: false,\n        error: data.payload,\n        data: null,\n        success: false\n      }\n    });\n  }\n}, {\n  on: studioLoginSuccess,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: true,\n      userLogin: {\n        requesting: false,\n        error: null,\n        data: data.payload,\n        success: true\n      }\n    });\n  }\n}, {\n  on: studioLoginFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: false,\n      userLogin: {\n        requesting: false,\n        error: data.payload,\n        data: null,\n        success: false\n      }\n    });\n  }\n}, {\n  on: setPerformerRegisterSubmitting,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerRegister: _objectSpread(_objectSpread({}, state.performerRegister), {}, {\n        submiting: true,\n        error: null\n      })\n    });\n  }\n}, {\n  on: performerRegisterSuccess,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerRegister: {\n        data: data.payload,\n        success: true,\n        submiting: false,\n        error: null\n      }\n    });\n  }\n}, {\n  on: performerRegisterFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      performerRegister: {\n        success: false,\n        submiting: false,\n        error: data.payload\n      }\n    });\n  }\n}, {\n  on: setUserRegisterSubmitting,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      userRegister: _objectSpread(_objectSpread({}, state.userRegister), {}, {\n        success: false,\n        requesting: true\n      })\n    });\n  }\n}, {\n  on: userRegisterFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      userRegister: {\n        requesting: false,\n        success: false,\n        error: action.payload\n      }\n    });\n  }\n}, {\n  on: userRegisterSuccess,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      userRegister: {\n        requesting: false,\n        success: true,\n        error: null\n      }\n    });\n  }\n}, {\n  on: setUpdatePasswordSubmitting,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updatePassword: _objectSpread(_objectSpread({}, state.updatePassword), {}, {\n        submiting: true,\n        success: false\n      })\n    });\n  }\n}, {\n  on: updatePasswordSuccess,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updatePassword: {\n        success: true,\n        submiting: false,\n        error: null\n      }\n    });\n  }\n}, {\n  on: updatePasswordFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      updatePassword: {\n        success: false,\n        submiting: false,\n        error: data.payload\n      }\n    });\n  }\n}, {\n  on: logout,\n  reducer: function reducer() {\n    return _objectSpread({}, initialState);\n  }\n}, {\n  on: resetLoginData,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      userLogin: {\n        requesting: false,\n        success: false,\n        data: null,\n        error: null\n      }\n    });\n  }\n}];\nexport default merge({}, createReducers('auth', [authReducers], initialState));","map":{"version":3,"sources":["E:/programData/React/user/src/redux/auth/reducers.ts"],"names":["merge","createReducers","loginSuccess","loginFail","performerRegisterFail","performerRegisterSuccess","loginRequesting","setPerformerRegisterSubmitting","setUserRegisterSubmitting","userRegisterFail","userRegisterSuccess","performerloginFail","performerloginSuccess","studioLoginSuccess","studioLoginFail","setUpdatePasswordSubmitting","updatePasswordSuccess","updatePasswordFail","logout","resetLoginData","initialState","loggedIn","authUser","performerRegister","data","success","submiting","error","userRegister","userLogin","requesting","updatePassword","authReducers","on","reducer","state","payload","action"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  loginSuccess,\n  loginFail,\n  performerRegisterFail,\n  performerRegisterSuccess,\n  loginRequesting,\n  setPerformerRegisterSubmitting,\n  setUserRegisterSubmitting,\n  userRegisterFail,\n  userRegisterSuccess,\n  performerloginFail,\n  performerloginSuccess,\n  studioLoginSuccess,\n  studioLoginFail,\n  setUpdatePasswordSubmitting,\n  updatePasswordSuccess,\n  updatePasswordFail,\n  logout,\n  resetLoginData\n} from './actions';\n\nconst initialState = {\n  loggedIn: false,\n  authUser: null,\n  performerRegister: {\n    data: null,\n    success: false,\n    submiting: false,\n    error: null\n  },\n  userRegister: {\n    data: null,\n    success: false,\n    submiting: false,\n    error: null\n  },\n  userLogin: {\n    requesting: false,\n    success: false,\n    data: null,\n    error: null\n  },\n  updatePassword: {\n    success: false,\n    submiting: false,\n    error: null\n  }\n};\n\nconst authReducers = [\n  {\n    on: loginRequesting,\n    reducer(state: any) {\n      return {\n        ...state,\n        userLogin: {\n          ...state.userLogin,\n          requesting: true\n        }\n      };\n    }\n  },\n  {\n    on: loginSuccess,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: true,\n        userLogin: {\n          requesting: false,\n          error: null,\n          data: data.payload,\n          success: true\n        }\n      };\n    }\n  },\n  {\n    on: loginFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: false,\n        userLogin: {\n          requesting: false,\n          error: data.payload,\n          data: null,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: performerloginSuccess,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: true,\n        userLogin: {\n          requesting: false,\n          error: null,\n          data: data.payload,\n          success: true\n        }\n      };\n    }\n  },\n  {\n    on: performerloginFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: false,\n        userLogin: {\n          requesting: false,\n          error: data.payload,\n          data: null,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: studioLoginSuccess,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: true,\n        userLogin: {\n          requesting: false,\n          error: null,\n          data: data.payload,\n          success: true\n        }\n      };\n    }\n  },\n  {\n    on: studioLoginFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: false,\n        userLogin: {\n          requesting: false,\n          error: data.payload,\n          data: null,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: setPerformerRegisterSubmitting,\n    reducer(state: any) {\n      return {\n        ...state,\n        performerRegister: {\n          ...state.performerRegister,\n          submiting: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: performerRegisterSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      return {\n        ...state,\n        performerRegister: {\n          data: data.payload,\n          success: true,\n          submiting: false,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: performerRegisterFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        performerRegister: {\n          success: false,\n          submiting: false,\n          error: data.payload\n        }\n      };\n    }\n  },\n  {\n    on: setUserRegisterSubmitting,\n    reducer(state: any) {\n      return {\n        ...state,\n        userRegister: {\n          ...state.userRegister,\n          success: false,\n          requesting: true\n        }\n      };\n    }\n  },\n  {\n    on: userRegisterFail,\n    reducer(state: any, action: any) {\n      return {\n        ...state,\n        userRegister: {\n          requesting: false,\n          success: false,\n          error: action.payload\n        }\n      };\n    }\n  },\n  {\n    on: userRegisterSuccess,\n    reducer(state) {\n      return {\n        ...state,\n        userRegister: {\n          requesting: false,\n          success: true,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: setUpdatePasswordSubmitting,\n    reducer(state: any) {\n      return {\n        ...state,\n        updatePassword: {\n          ...state.updatePassword,\n          submiting: true,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: updatePasswordSuccess,\n    reducer(state: any) {\n      return {\n        ...state,\n        updatePassword: {\n          success: true,\n          submiting: false,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: updatePasswordFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        updatePassword: {\n          success: false,\n          submiting: false,\n          error: data.payload\n        }\n      };\n    }\n  },\n  {\n    on: logout,\n    reducer() {\n      return {\n        ...initialState\n      };\n    }\n  },\n  {\n    on: resetLoginData,\n    reducer(state) {\n      return {\n        ...state,\n        userLogin: {\n          requesting: false,\n          success: false,\n          data: null,\n          error: null\n        }\n      };\n    }\n  }\n];\n\nexport default merge({}, createReducers('auth', [authReducers], initialState));\n"]},"metadata":{},"sourceType":"module"}