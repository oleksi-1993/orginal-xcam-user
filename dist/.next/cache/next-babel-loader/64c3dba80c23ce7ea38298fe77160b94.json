{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\src\\\\components\\\\common\\\\layout\\\\menu.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Menu } from 'antd';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\n\nvar SiderMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SiderMenu, _PureComponent);\n\n  var _super = _createSuper(SiderMenu);\n\n  function SiderMenu() {\n    var _this;\n\n    _classCallCheck(this, SiderMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedKeys: ['dashboard'],\n      openKeys: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenChange\", function (openKeys) {\n      var menus = _this.props.menus;\n      var rootSubmenuKeys = menus.filter(function (_) {\n        return !_.menuParentId;\n      }).map(function (_) {\n        return _.id;\n      });\n      var latestOpenKey = openKeys.find(function (key) {\n        return openKeys.indexOf(key) === -1;\n      });\n      var newOpenKeys = openKeys;\n\n      if (rootSubmenuKeys.indexOf(latestOpenKey) !== -1) {\n        newOpenKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n\n      _this.setState({\n        openKeys: newOpenKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generateMenus\", function (data) {\n      var totalNotReadMessage = _this.props.totalNotReadMessage;\n      return data.map(function (item, index) {\n        if (item.children) {\n          return __jsx(Menu.SubMenu, {\n            icon: item.icon,\n            key: \"sub-\".concat(index),\n            title: __jsx(React.Fragment, null, __jsx(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }\n            }, item.name)),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }\n          }, _this.generateMenus(item.children));\n        }\n\n        return __jsx(Menu.Item, {\n          key: item.id,\n          icon: item.icon,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }\n        }, __jsx(Link, {\n          href: item.route,\n          as: item.as || item.route,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, item.name, ' ', item.id === 'messages' && \"(\".concat(totalNotReadMessage, \")\"))));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SiderMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Router.events.on('routeChangeStart', this.routerChange.bind(this));\n      var menus = this.props.menus;\n      var selectedKeys = true ? this.getSelectedKeys(menus) : [];\n      this.setSelectedKeys(selectedKeys);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          menus = _this$props.menus,\n          router = _this$props.router;\n\n      if (router.pathname !== prevProps.router.pathname) {\n        var selectedKeys = true ? this.getSelectedKeys(menus) : [];\n        this.setSelectedKeys(selectedKeys);\n      }\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(_ref) {\n      var key = _ref.key;\n      var menus = this.props.menus;\n      var flatTree = this.flatten(menus);\n      var selectedKeys = flatTree.filter(function (m) {\n        return m.id === key;\n      }).map(function (m) {\n        return m.id;\n      });\n      this.setSelectedKeys(selectedKeys);\n    }\n  }, {\n    key: \"getSelectedKeys\",\n    value: function getSelectedKeys(menus) {\n      var pathname = true ? Router.pathname : '';\n      var flatTree = this.flatten(menus);\n      return flatTree // .filter((m) => pathname.includes(m.as || m.route))\n      .filter(function (m) {\n        return pathname === m.route || pathname === m.as;\n      }).map(function (m) {\n        return m.id;\n      });\n    }\n  }, {\n    key: \"setSelectedKeys\",\n    value: function setSelectedKeys(selectedKeys) {\n      this.setState({\n        selectedKeys: selectedKeys\n      });\n    }\n  }, {\n    key: \"flatten\",\n    value: function flatten(menus) {\n      var _this2 = this;\n\n      var flattenMenus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      menus.forEach(function (m) {\n        if (m.children) {\n          _this2.flatten(m.children, flattenMenus);\n        }\n\n        var tmp = _objectSpread({}, m);\n\n        delete tmp.children;\n        flattenMenus.push(tmp);\n      });\n      return flattenMenus;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          theme = _this$props2.theme,\n          menus = _this$props2.menus,\n          collapsed = _this$props2.collapsed,\n          onClick = _this$props2.onClick;\n      var _this$state = this.state,\n          selectedKeys = _this$state.selectedKeys,\n          openKeys = _this$state.openKeys;\n      var menuProps = collapsed ? {} : {\n        openKeys: openKeys\n      };\n      return __jsx(Menu, _extends({\n        key: \"profile-menu\",\n        mode: \"inline\",\n        theme: theme,\n        selectedKeys: selectedKeys,\n        onOpenChange: this.onOpenChange.bind(this),\n        onSelect: this.onSelect.bind(this),\n        onClick: onClick // onClick={\n        //   isMobile\n        //     ? () => {\n        //         onCollapseChange(true);\n        //       }\n        //     : undefined\n        // }\n\n      }, menuProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }), this.generateMenus(menus));\n    }\n  }]);\n\n  return SiderMenu;\n}(PureComponent);\n\nexport default _c = withRouter(SiderMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/programData/React/user/src/components/common/layout/menu.tsx"],"names":["React","PureComponent","Menu","Link","Router","withRouter","SiderMenu","selectedKeys","openKeys","menus","props","rootSubmenuKeys","filter","_","menuParentId","map","id","latestOpenKey","find","key","indexOf","newOpenKeys","setState","data","totalNotReadMessage","item","index","children","icon","name","generateMenus","route","as","getSelectedKeys","setSelectedKeys","prevProps","router","pathname","flatTree","flatten","m","flattenMenus","forEach","tmp","push","theme","collapsed","onClick","state","menuProps","onOpenChange","bind","onSelect"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Menu } from 'antd';\nimport Link from 'next/link';\nimport Router, { withRouter, NextRouter } from 'next/router';\n\ninterface IProps {\n  theme?: string;\n  isMobile?: boolean;\n  menus?: any;\n  collapsed?: boolean;\n  router: NextRouter;\n  totalNotReadMessage?: number;\n  onClick?: () => void;\n}\n\nclass SiderMenu extends PureComponent<IProps> {\n  state = {\n    selectedKeys: ['dashboard'],\n    openKeys: []\n  };\n\n  componentDidMount() {\n    // Router.events.on('routeChangeStart', this.routerChange.bind(this));\n    const { menus } = this.props;\n    const selectedKeys = process.browser\n      ? this.getSelectedKeys(menus)\n      : [];\n    this.setSelectedKeys(selectedKeys);\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    const { menus, router } = this.props;\n    if (router.pathname !== prevProps.router.pathname) {\n      const selectedKeys = process.browser\n        ? this.getSelectedKeys(menus)\n        : [];\n      this.setSelectedKeys(selectedKeys);\n    }\n  }\n\n  onOpenChange = (openKeys) => {\n    const { menus } = this.props;\n    const rootSubmenuKeys = menus\n      .filter((_) => !_.menuParentId)\n      .map((_) => _.id);\n\n    const latestOpenKey = openKeys.find(\n      (key) => openKeys.indexOf(key) === -1\n    );\n\n    let newOpenKeys = openKeys;\n    if (rootSubmenuKeys.indexOf(latestOpenKey) !== -1) {\n      newOpenKeys = latestOpenKey ? [latestOpenKey] : [];\n    }\n\n    this.setState({\n      openKeys: newOpenKeys\n    });\n  };\n\n  onSelect({ key }) {\n    const { menus } = this.props;\n    const flatTree = this.flatten(menus);\n    const selectedKeys = flatTree.filter((m) => m.id === key).map((m) => m.id);\n    this.setSelectedKeys(selectedKeys);\n  }\n\n  getSelectedKeys(menus: any) {\n    const pathname = process.browser ? Router.pathname : '';\n    const flatTree = this.flatten(menus);\n    return (\n      flatTree\n        // .filter((m) => pathname.includes(m.as || m.route))\n        .filter((m) => (pathname === m.route || pathname === m.as))\n        .map((m) => m.id)\n    );\n  }\n\n  setSelectedKeys(selectedKeys) {\n    this.setState({ selectedKeys });\n  }\n\n  generateMenus = (data) => {\n    const { totalNotReadMessage } = this.props;\n    return data.map((item, index) => {\n      if (item.children) {\n        return (\n          <Menu.SubMenu\n            icon={item.icon}\n            key={`sub-${index}`}\n            title={(\n              <>\n                <span>{item.name}</span>\n              </>\n            )}\n          >\n            {this.generateMenus(item.children)}\n          </Menu.SubMenu>\n        );\n      }\n      return (\n        <Menu.Item key={item.id} icon={item.icon}>\n          <Link href={item.route} as={item.as || item.route}>\n            <a>\n              {item.name}\n              {' '}\n              {item.id === 'messages' && `(${totalNotReadMessage})`}\n            </a>\n          </Link>\n        </Menu.Item>\n      );\n    });\n  };\n\n  flatten(menus, flattenMenus = []) {\n    menus.forEach((m) => {\n      if (m.children) {\n        this.flatten(m.children, flattenMenus);\n      }\n      const tmp = { ...m };\n      delete tmp.children;\n      flattenMenus.push(tmp);\n    });\n\n    return flattenMenus;\n  }\n\n  render() {\n    const {\n      theme, menus, collapsed, onClick\n    } = this.props;\n    const { selectedKeys, openKeys } = this.state;\n    const menuProps = collapsed\n      ? {}\n      : {\n        openKeys\n      };\n\n    return (\n      <Menu\n        key=\"profile-menu\"\n        mode=\"inline\"\n        theme={theme as any}\n        selectedKeys={selectedKeys}\n        onOpenChange={this.onOpenChange.bind(this)}\n        onSelect={this.onSelect.bind(this)}\n        onClick={onClick}\n        // onClick={\n        //   isMobile\n        //     ? () => {\n        //         onCollapseChange(true);\n        //       }\n        //     : undefined\n        // }\n        {...menuProps}\n      >\n        {this.generateMenus(menus)}\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(SiderMenu);\n"]},"metadata":{},"sourceType":"module"}