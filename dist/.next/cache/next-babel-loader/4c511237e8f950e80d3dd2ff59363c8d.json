{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\programData\\\\React\\\\user\\\\pages\\\\performer-category\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport { performerCategories } from 'src/services/perfomer-categories.service';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport Head from 'next/head';\nimport PerformerGrid from '@components/performer/performer-grid';\nimport { searchPerformer, updatePerformerFavourite } from '@redux/performer/actions';\nimport { favouriteService } from 'src/services';\nimport { getResponseError } from 'src/lib';\nimport { SocketContext } from 'src/socket';\nvar initQueryState = {\n  offset: 0,\n  limit: 60,\n  gender: '',\n  category: '',\n  country: '',\n  sortBy: '',\n  sort: 'desc'\n};\n\nvar PerformerCategoryPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerCategoryPage, _PureComponent);\n\n  var _super = _createSuper(PerformerCategoryPage);\n\n  function PerformerCategoryPage(props) {\n    var _this;\n\n    _classCallCheck(this, PerformerCategoryPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"search\", function () {\n      var _this$props = _this.props,\n          dispatchSearchPerformer = _this$props.searchPerformer,\n          category = _this$props.category;\n      var query = _this.state.query;\n      dispatchSearchPerformer(_objectSpread(_objectSpread({}, query), {}, {\n        category: category ? category._id : ''\n      }));\n    });\n\n    _this.state = {\n      query: initQueryState\n    };\n    return _this;\n  }\n\n  _createClass(PerformerCategoryPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.search();\n      this.socket = this.context;\n      this.socket.on('modelUpdateStatus', this.search);\n      this.socket.on('modelUpdateStreamingStatus', this.search);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          category = _this$props2.category,\n          loggedIn = _this$props2.loggedIn;\n\n      if (category !== prevProps.category) {\n        this.search();\n      }\n\n      if (!loggedIn && loggedIn !== prevProps.loggedIn) {\n        this.search();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket = this.context;\n\n      if (this.socket) {\n        this.socket.off('modelUpdateStatus');\n        this.socket.off('modelUpdateStreamingStatus');\n      }\n    }\n  }, {\n    key: \"onLike\",\n    value: function () {\n      var _onLike = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(performer) {\n        var _id, isFavorite, dispatchUpdatePerformerFavourite, e;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _id = performer._id, isFavorite = performer.isFavorite;\n                dispatchUpdatePerformerFavourite = this.props.updatePerformerFavourite;\n                _context.prev = 2;\n                _context.next = 5;\n                return favouriteService.favorite(_id, isFavorite);\n\n              case 5:\n                dispatchUpdatePerformerFavourite(_id);\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                _context.next = 12;\n                return Promise.resolve(_context.t0);\n\n              case 12:\n                e = _context.sent;\n                message.error(getResponseError(e));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8]]);\n      }));\n\n      function onLike(_x) {\n        return _onLike.apply(this, arguments);\n      }\n\n      return onLike;\n    }()\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(name, value) {\n      var query = this.state.query;\n      this.setState({\n        query: _objectSpread(_objectSpread({}, query), {}, _defineProperty({}, name, value))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          category = _this$props3.category,\n          pluralTextModel = _this$props3.pluralTextModel;\n      var query = this.state.query;\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, category ? \"Category - \".concat(category.name) : \"All \".concat(pluralTextModel || 'Performers'))), __jsx(PageHeader, {\n        title: category ? category.name : \"All \".concat(pluralTextModel || 'Performers'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, __jsx(PerformerGrid, _extends({}, this.props, query, {\n        isPage: true,\n        setFilter: this.setFilter.bind(this),\n        onLike: this.onLike.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var ctx, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = _ref.ctx;\n                _context2.prev = 1;\n\n                if (!(true && ctx.query.category)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  category: JSON.parse(ctx.query.category)\n                });\n\n              case 4:\n                if (ctx.query.slug) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 6:\n                _context2.next = 8;\n                return performerCategories.details(ctx.query.slug);\n\n              case 8:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  category: resp.data\n                });\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                return _context2.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 12]]);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PerformerCategoryPage;\n}(PureComponent);\n\n_defineProperty(PerformerCategoryPage, \"authenticate\", false);\n\n_defineProperty(PerformerCategoryPage, \"layout\", 'public');\n\nPerformerCategoryPage.contextType = SocketContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread(_objectSpread({\n    loggedIn: state.auth.loggedIn\n  }, state.performer.performers), state.ui);\n};\n\nvar mapDispatch = {\n  searchPerformer: searchPerformer,\n  updatePerformerFavourite: updatePerformerFavourite,\n  updateUIValue: updateUIValue\n};\nexport default connect(mapStateToProps, mapDispatch)(PerformerCategoryPage);","map":{"version":3,"sources":["E:/programData/React/user/pages/performer-category/index.tsx"],"names":["React","PureComponent","connect","message","PageHeader","performerCategories","updateUIValue","Head","PerformerGrid","searchPerformer","updatePerformerFavourite","favouriteService","getResponseError","SocketContext","initQueryState","offset","limit","gender","category","country","sortBy","sort","PerformerCategoryPage","props","dispatchSearchPerformer","query","state","_id","search","socket","context","on","prevProps","loggedIn","off","performer","isFavorite","dispatchUpdatePerformerFavourite","favorite","Promise","resolve","e","error","name","value","setState","pluralTextModel","setFilter","bind","onLike","ctx","JSON","parse","slug","details","resp","data","contextType","mapStateToProps","auth","performers","ui","mapDispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport { performerCategories } from 'src/services/perfomer-categories.service';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport {\n  IPerformerCategogies,\n  IResponse,\n  IPerformer,\n  IPerformSearch\n} from 'src/interfaces';\nimport Head from 'next/head';\nimport PerformerGrid from '@components/performer/performer-grid';\nimport {\n  searchPerformer,\n  updatePerformerFavourite\n} from '@redux/performer/actions';\nimport { favouriteService } from 'src/services';\nimport { getResponseError } from 'src/lib';\nimport { SocketContext } from 'src/socket';\n\ninterface IProps {\n  category: IPerformerCategogies;\n  data: IPerformer[];\n  searchPerformer: Function;\n  total: number;\n  success: boolean;\n  searching: boolean;\n  loggedIn: boolean;\n  error: any;\n  updatePerformerFavourite: Function;\n  pluralTextModel: string;\n}\n\ninterface IStates {\n  query: IPerformSearch;\n  sort?: {\n    name: string;\n    sortBy?: string;\n  };\n}\n\nconst initQueryState: IPerformSearch = {\n  offset: 0,\n  limit: 60,\n  gender: '',\n  category: '',\n  country: '',\n  sortBy: '',\n  sort: 'desc'\n};\n\nclass PerformerCategoryPage extends PureComponent<IProps, IStates> {\n  static authenticate = false;\n\n  static layout = 'public';\n\n  private socket;\n\n  static async getInitialProps({ ctx }) {\n    try {\n      if (process.browser && ctx.query.category) {\n        return {\n          category: JSON.parse(ctx.query.category)\n        };\n      }\n\n      if (!ctx.query.slug) {\n        return {};\n      }\n\n      const resp: IResponse<IPerformerCategogies> = await performerCategories.details(\n        ctx.query.slug\n      );\n\n      return {\n        category: resp.data\n      };\n    } catch (err) {\n      return {};\n    }\n  }\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      query: initQueryState\n    };\n  }\n\n  componentDidMount() {\n    this.search();\n    this.socket = this.context;\n    this.socket.on('modelUpdateStatus', this.search);\n    this.socket.on('modelUpdateStreamingStatus', this.search);\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    const { category, loggedIn } = this.props;\n    if (category !== prevProps.category) {\n      this.search();\n    }\n    if (!loggedIn && loggedIn !== prevProps.loggedIn) {\n      this.search();\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket = this.context;\n    if (this.socket) {\n      this.socket.off('modelUpdateStatus');\n      this.socket.off('modelUpdateStreamingStatus');\n    }\n  }\n\n  async onLike(performer: IPerformer) {\n    const { _id, isFavorite } = performer;\n    const { updatePerformerFavourite: dispatchUpdatePerformerFavourite } = this.props;\n    try {\n      await favouriteService.favorite(_id, isFavorite);\n      dispatchUpdatePerformerFavourite(_id);\n    } catch (error) {\n      const e = await Promise.resolve(error);\n      message.error(getResponseError(e));\n    }\n  }\n\n  setFilter(name: string, value: any) {\n    const { query } = this.state;\n    this.setState({\n      query: {\n        ...query,\n        [name]: value\n      }\n    });\n  }\n\n  search = () => {\n    const { searchPerformer: dispatchSearchPerformer, category } = this.props;\n    const { query } = this.state;\n    dispatchSearchPerformer({\n      ...query,\n      category: category ? category._id : ''\n    });\n  }\n\n  render() {\n    const { category, pluralTextModel } = this.props;\n    const { query } = this.state;\n\n    return (\n      <>\n        <Head>\n          <title>\n            {category ? `Category - ${category.name}` : `All ${pluralTextModel || 'Performers'}`}\n          </title>\n        </Head>\n        <PageHeader title={category ? category.name : `All ${pluralTextModel || 'Performers'}`} />\n        <div className=\"\">\n          <PerformerGrid\n            {...this.props}\n            {...query}\n            isPage\n            setFilter={this.setFilter.bind(this)}\n            onLike={this.onLike.bind(this)}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nPerformerCategoryPage.contextType = SocketContext;\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.auth.loggedIn,\n  ...state.performer.performers,\n  ...state.ui\n});\nconst mapDispatch = { searchPerformer, updatePerformerFavourite, updateUIValue };\n\nexport default connect(mapStateToProps, mapDispatch)(PerformerCategoryPage);\n"]},"metadata":{},"sourceType":"module"}